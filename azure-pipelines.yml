# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

# CONDITIONS WHICH TRIGGER OR NOT THE JOBS
trigger:
  batch: true
  branches:
    include:
    - master
  tags:
    include:
    - "*"

pr:
- master

jobs:

- job: 'Pack_Solution_in_nupkg_files'
  #dependsOn: Debug
  pool:
    vmImage: 'windows-2019'

  variables:
    solution: 'GeoSik.dev.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
    #artifactDirectoryName: 'ddlDirectory'
    #artifactPath: $(System.DefaultWorkingDirectory)

## not working because problem configuration .Nuget (wrong dependencies)
##  - task: NuGetCommand@2
##    inputs:
##      restoreSolution: $(solution)
  steps:
  #- powershell: tree .
  #- powershell: cd $(artifactPath); if ($?){new-item -Name $(artifactDirectoryName) -ItemType directory}
  #cd $(artifactPath) &&
  #- bash:  mkdir $(artifactDirectoryName)
  #  env:  
  #    artifactPath: $(artifactPath)
  #    artifactDirectoryName: $(artifactDirectoryName)

#
  - task: NuGetToolInstaller@1
    displayName: "Installation NuGet Configuration"
  - task: VSBuild@1
    displayName: 'Restore NuGet package'
    inputs:
      solution: $(solution)
      vsVersion: latest
      msbuildArchitecture: x64
      msbuildArgs: '-t:restore /p:PackageAsSingleFile=false /p:SkipInvalidConfigurations=true'
      platform: $(buildPlatform)
      configuration: $(buildConfiguration)

  - task: VSBuild@1
    displayName: 'Compilation of GeoSik solution'
    inputs:
      solution: $(solution)
      vsVersion: latest
      msbuildArchitecture: x64
      msbuildArgs: '/p:PackageAsSingleFile=false /p:SkipInvalidConfigurations=true'
      platform: $(buildPlatform)
      configuration: $(buildConfiguration)

  - task: NuGetCommand@2
    displayName: 'Generation NuGet packages'
    inputs:
      command: 'pack'
      configuration: $(buildConfiguration)
      packagesToPack: '**/*.csproj'
      #versioningScheme: 'byBuildNumber'
  - powershell: cd $(System.DefaultWorkingDirectory); if ($?){echo "*.nuget/\n.gitignore\n*.sln\n*.csproj\n*.cs\n*.yml\n*.bat\n*.proj\n*.md\n*.csproj\n*.txt\n*.nuspec\n*.snk\n*.resx" > .artifactignore}; if ($?){Get-Content .artifactignore} else{echo "error generation artifactignore file"; exit 1}
  - task: PublishPipelineArtifact@1
    displayName: 'Generation NuGet artifacts'
    inputs:
      artifact: 'GeoSIK_Solution'
      path: $(System.DefaultWorkingDirectory)

#  - task: VSBuild@1
#    displayName: 'Compilation of GeoSik solution'
#    inputs:
#      solution: $(solution)
#      vsVersion: latest
#      msbuildArchitecture: x64
#      msbuildArgs: '-t:restore /p:PackageAsSingleFile=false /p:SkipInvalidConfigurations=true'
#      platform: $(buildPlatform)
#      configuration: $(buildConfiguration)
  ##- powershell: echo "$(artifactPath)/$(artifactDirectoryName)/"
#  - powershell: cd $(System.DefaultWorkingDirectory); if ($?){echo "*.nuget/ .gitignore *.sln *.csproj *.cs *.yml *.bat *.proj *.md *.csproj *.txt *.nuspec *.snk *.resx" > .artifactignore}; if ($?){Get-Content .artifactignore} else{echo "error generation artifactignore file"; exit 1}
#  - task: PublishPipelineArtifact@1
#    inputs:
#      artifact: 'GeoSIK_Solution'
#      path: $(System.DefaultWorkingDirectory)
      ##$(artifactPath)/$(artifactDirectoryName)/
##  - bash: ls -l .
#  - powershell: tree .
##  - download: current
##    patterns: '**/*.dll'
##  - task: PublishBuildArtifacts@1
##    inputs:
##      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
##      artifactName: SolutionGeoSik




#- job: 'CompilationProject'
#  pool:
#    vmImage: 'windows-2019'

##  steps:

## - not working with MSBuild
## platform: $(buildPlatform)
## configuration: $(buildConfiguration)

## -t:restore not working
##  - task: MSBuild@1
##    displayName: 'Compilation of GeoSik Library Core project'
##    inputs:
##      project: $(projectGeoSik)
##      msbuildVersion: 'latest'
##      msbuildArchitecture: 'x64'
##      msbuildArguments: '/p:Configuration="$(buildConfiguration)" /p:Platform="$(buildPlatform)" /p:PackageAsSingleFile=false /p:SkipInvalidConfigurations=true'
##    env:
##      projectGeoSik: './Library/Library.csproj'

##  - task: PublishPipelineArtifact@1
##    displayName: 'Compilation of GeoSik project'
##    inputs:
##      artifact: 'GeoSIK_Project_Library_Core'
##      path: ./Library

##  - task: NuGetToolInstaller@1

##  - task: NuGetCommand@2
##    inputs:
##      restoreSolution: '$(solution)'

##  - task: VSBuild@1
##    inputs:
##      solution: '$(solution)'
##      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
##      platform: '$(buildPlatform)'
##      configuration: '$(buildConfiguration)'

##  - task: VSTest@2
##    inputs:
##      platform: '$(buildPlatform)'
##      configuration: '$(buildConfiguration)'
