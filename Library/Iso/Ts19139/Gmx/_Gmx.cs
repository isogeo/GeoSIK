using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;



#pragma warning disable 108, 109, 1591, 3002, 3003, 3009
namespace GeoSik.Iso.Ts19139.Gmx
{



    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.IO;
    using System.Diagnostics;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    using System.Xml.Linq;
    using Xml.Schema.Linq;
    using GeoSik.Iso.Ts19139.Gco;


    /// <summary>
    /// <para>
    /// Regular expression: (UnitDefinition)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("UnitDefinition_PropertyTypeSchemaProvider")]
    public partial class UnitDefinition_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator UnitDefinition_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<UnitDefinition_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static UnitDefinition_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("UnitDefinition", "http://www.opengis.net/gml/3.2"), XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_UnitDefinition", "http://www.isotc211.org/2005/gmx"), XName.Get("BaseUnit", "http://www.opengis.net/gml/3.2"), XName.Get("DerivedUnit", "http://www.opengis.net/gml/3.2"), XName.Get("ConventionalUnit", "http://www.opengis.net/gml/3.2")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (UnitDefinition)?
        /// </para>
        /// </summary>
        public UnitDefinition_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: UnitDefinition, ML_BaseUnit, ML_DerivedUnit, ML_ConventionalUnit, ML_UnitDefinition, BaseUnit, DerivedUnit, ConventionalUnit
        /// </para>
        /// <para>
        /// Regular expression: (UnitDefinition)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.UnitDefinition UnitDefinition
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("UnitDefinition", "http://www.opengis.net/gml/3.2"), XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_UnitDefinition", "http://www.isotc211.org/2005/gmx"), XName.Get("BaseUnit", "http://www.opengis.net/gml/3.2"), XName.Get("DerivedUnit", "http://www.opengis.net/gml/3.2"), XName.Get("ConventionalUnit", "http://www.opengis.net/gml/3.2"));
                return ((GeoSik.Ogc.Gml.V321.UnitDefinition)(x));
            }
            set
            {
                this.SetElement(XName.Get("UnitDefinition", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("UnitDefinition_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<UnitDefinition_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("UnitDefinition", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.UnitDefinition));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName UnitDefinition_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("UnitDefinition_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (BaseUnit)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("BaseUnit_PropertyTypeSchemaProvider")]
    public partial class BaseUnit_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator BaseUnit_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<BaseUnit_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static BaseUnit_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("BaseUnit", "http://www.opengis.net/gml/3.2"), XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (BaseUnit)?
        /// </para>
        /// </summary>
        public BaseUnit_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: BaseUnit, ML_BaseUnit
        /// </para>
        /// <para>
        /// Regular expression: (BaseUnit)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.BaseUnit BaseUnit
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("BaseUnit", "http://www.opengis.net/gml/3.2"), XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Ogc.Gml.V321.BaseUnit)(x));
            }
            set
            {
                this.SetElement(XName.Get("BaseUnit", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("BaseUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<BaseUnit_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("BaseUnit", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.BaseUnit));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName BaseUnit_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("BaseUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DerivedUnit)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DerivedUnit_PropertyTypeSchemaProvider")]
    public partial class DerivedUnit_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DerivedUnit_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DerivedUnit_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DerivedUnit_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("DerivedUnit", "http://www.opengis.net/gml/3.2"), XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DerivedUnit)?
        /// </para>
        /// </summary>
        public DerivedUnit_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: DerivedUnit, ML_DerivedUnit
        /// </para>
        /// <para>
        /// Regular expression: (DerivedUnit)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.DerivedUnit DerivedUnit
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("DerivedUnit", "http://www.opengis.net/gml/3.2"), XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Ogc.Gml.V321.DerivedUnit)(x));
            }
            set
            {
                this.SetElement(XName.Get("DerivedUnit", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DerivedUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DerivedUnit_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DerivedUnit", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.DerivedUnit));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DerivedUnit_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DerivedUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ConventionalUnit)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ConventionalUnit_PropertyTypeSchemaProvider")]
    public partial class ConventionalUnit_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ConventionalUnit_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ConventionalUnit_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ConventionalUnit_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("ConventionalUnit", "http://www.opengis.net/gml/3.2"), XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ConventionalUnit)?
        /// </para>
        /// </summary>
        public ConventionalUnit_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: ConventionalUnit, ML_ConventionalUnit
        /// </para>
        /// <para>
        /// Regular expression: (ConventionalUnit)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.ConventionalUnit ConventionalUnit
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("ConventionalUnit", "http://www.opengis.net/gml/3.2"), XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Ogc.Gml.V321.ConventionalUnit)(x));
            }
            set
            {
                this.SetElement(XName.Get("ConventionalUnit", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ConventionalUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ConventionalUnit_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ConventionalUnit", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.ConventionalUnit));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ConventionalUnit_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ConventionalUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, unitsSystem, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_BaseUnit_TypeSchemaProvider")]
    public partial class ML_BaseUnit_Type : global::GeoSik.Ogc.Gml.V321.BaseUnitType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<UomAlternativeExpression_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_BaseUnit_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_BaseUnit_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_BaseUnit_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("quantityType", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("unitsSystem", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, unitsSystem, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_BaseUnit_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, unitsSystem, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<UomAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<UomAlternativeExpression_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<UomAlternativeExpression_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<UomAlternativeExpression_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_BaseUnit_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_BaseUnit_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("quantityType", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityType));
            localElementDictionary.Add(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityTypeReference));
            localElementDictionary.Add(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.catalogSymbol));
            localElementDictionary.Add(XName.Get("unitsSystem", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.ReferenceType));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(UomAlternativeExpression_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_BaseUnit_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_BaseUnit_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_BaseUnit)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_BaseUnit_PropertyTypeSchemaProvider")]
    public partial class ML_BaseUnit_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_BaseUnit_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_BaseUnit_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_BaseUnit_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_BaseUnit)?
        /// </para>
        /// </summary>
        public ML_BaseUnit_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_BaseUnit)?
        /// </para>
        /// </summary>
        public ML_BaseUnit ML_BaseUnit
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx"));
                return ((ML_BaseUnit)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_BaseUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_BaseUnit_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx"), typeof(ML_BaseUnit));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_BaseUnit_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_BaseUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, derivationUnitTerm+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_DerivedUnit_TypeSchemaProvider")]
    public partial class ML_DerivedUnit_Type : global::GeoSik.Ogc.Gml.V321.DerivedUnitType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<UomAlternativeExpression_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_DerivedUnit_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_DerivedUnit_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_DerivedUnit_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("quantityType", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("derivationUnitTerm", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, derivationUnitTerm+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_DerivedUnit_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, derivationUnitTerm+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<UomAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<UomAlternativeExpression_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<UomAlternativeExpression_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<UomAlternativeExpression_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_DerivedUnit_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_DerivedUnit_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("quantityType", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityType));
            localElementDictionary.Add(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityTypeReference));
            localElementDictionary.Add(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.catalogSymbol));
            localElementDictionary.Add(XName.Get("derivationUnitTerm", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.derivationUnitTerm));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(UomAlternativeExpression_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_DerivedUnit_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_DerivedUnit_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_DerivedUnit)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_DerivedUnit_PropertyTypeSchemaProvider")]
    public partial class ML_DerivedUnit_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_DerivedUnit_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_DerivedUnit_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_DerivedUnit_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_DerivedUnit)?
        /// </para>
        /// </summary>
        public ML_DerivedUnit_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_DerivedUnit)?
        /// </para>
        /// </summary>
        public ML_DerivedUnit ML_DerivedUnit
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx"));
                return ((ML_DerivedUnit)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_DerivedUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_DerivedUnit_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx"), typeof(ML_DerivedUnit));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_DerivedUnit_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_DerivedUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, (conversionToPreferredUnit | roughConversionToPreferredUnit), derivationUnitTerm*, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ConventionalUnit_TypeSchemaProvider")]
    public partial class ML_ConventionalUnit_Type : global::GeoSik.Ogc.Gml.V321.ConventionalUnitType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<UomAlternativeExpression_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator ML_ConventionalUnit_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_ConventionalUnit_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ConventionalUnit_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, (conversionToPreferredUnit | roughConversionToPreferredUnit), derivationUnitTerm*, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_ConventionalUnit_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, (conversionToPreferredUnit | roughConversionToPreferredUnit), derivationUnitTerm*, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<UomAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<UomAlternativeExpression_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<UomAlternativeExpression_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<UomAlternativeExpression_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ConventionalUnit_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ConventionalUnit_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("quantityType", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityType));
            localElementDictionary.Add(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityTypeReference));
            localElementDictionary.Add(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.catalogSymbol));
            localElementDictionary.Add(XName.Get("conversionToPreferredUnit", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.conversionToPreferredUnit));
            localElementDictionary.Add(XName.Get("roughConversionToPreferredUnit", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.roughConversionToPreferredUnit));
            localElementDictionary.Add(XName.Get("derivationUnitTerm", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.derivationUnitTerm));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(UomAlternativeExpression_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName ML_ConventionalUnit_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ConventionalUnit_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_ConventionalUnit)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ConventionalUnit_PropertyTypeSchemaProvider")]
    public partial class ML_ConventionalUnit_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_ConventionalUnit_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_ConventionalUnit_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ConventionalUnit_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_ConventionalUnit)?
        /// </para>
        /// </summary>
        public ML_ConventionalUnit_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_ConventionalUnit)?
        /// </para>
        /// </summary>
        public ML_ConventionalUnit ML_ConventionalUnit
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx"));
                return ((ML_ConventionalUnit)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ConventionalUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ConventionalUnit_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx"), typeof(ML_ConventionalUnit));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_ConventionalUnit_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ConventionalUnit_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_UnitDefinition_TypeSchemaProvider")]
    public partial class ML_UnitDefinition_Type : global::GeoSik.Ogc.Gml.V321.UnitDefinitionType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<UomAlternativeExpression_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_UnitDefinition_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_UnitDefinition_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_UnitDefinition_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("quantityType", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_UnitDefinition_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<UomAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<UomAlternativeExpression_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<UomAlternativeExpression_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<UomAlternativeExpression_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_UnitDefinition_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_UnitDefinition_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("quantityType", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityType));
            localElementDictionary.Add(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityTypeReference));
            localElementDictionary.Add(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.catalogSymbol));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(UomAlternativeExpression_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_UnitDefinition_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_UnitDefinition_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_UnitDefinition)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_UnitDefinition_PropertyTypeSchemaProvider")]
    public partial class ML_UnitDefinition_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_UnitDefinition_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_UnitDefinition_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_UnitDefinition_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_UnitDefinition", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_UnitDefinition)?
        /// </para>
        /// </summary>
        public ML_UnitDefinition_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_UnitDefinition)?
        /// </para>
        /// </summary>
        public ML_UnitDefinition ML_UnitDefinition
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_UnitDefinition", "http://www.isotc211.org/2005/gmx"));
                return ((ML_UnitDefinition)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_UnitDefinition", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_UnitDefinition_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_UnitDefinition_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_UnitDefinition", "http://www.isotc211.org/2005/gmx"), typeof(ML_UnitDefinition));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_UnitDefinition_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_UnitDefinition_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("UomAlternativeExpression_TypeSchemaProvider")]
    public partial class UomAlternativeExpression_Type : global::GeoSik.Ogc.Gml.V321.UnitDefinitionType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator UomAlternativeExpression_Type(XElement xe) { return XTypedServices.ToXTypedElement<UomAlternativeExpression_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static UomAlternativeExpression_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("quantityType", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, locale)
        /// </para>
        /// </summary>
        public UomAlternativeExpression_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("UomAlternativeExpression_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<UomAlternativeExpression_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("quantityType", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityType));
            localElementDictionary.Add(XName.Get("quantityTypeReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.quantityTypeReference));
            localElementDictionary.Add(XName.Get("catalogSymbol", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.catalogSymbol));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName UomAlternativeExpression_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("UomAlternativeExpression_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (UomAlternativeExpression)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("UomAlternativeExpression_PropertyTypeSchemaProvider")]
    public partial class UomAlternativeExpression_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator UomAlternativeExpression_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<UomAlternativeExpression_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static UomAlternativeExpression_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("UomAlternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (UomAlternativeExpression)?
        /// </para>
        /// </summary>
        public UomAlternativeExpression_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (UomAlternativeExpression)?
        /// </para>
        /// </summary>
        public UomAlternativeExpression UomAlternativeExpression
        {
            get
            {
                XElement x = this.GetElement(XName.Get("UomAlternativeExpression", "http://www.isotc211.org/2005/gmx"));
                return ((UomAlternativeExpression)(x));
            }
            set
            {
                this.SetElement(XName.Get("UomAlternativeExpression", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("UomAlternativeExpression_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<UomAlternativeExpression_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("UomAlternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(UomAlternativeExpression));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName UomAlternativeExpression_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("UomAlternativeExpression_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CodeDefinition)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_CodelistValue_PropertyTypeSchemaProvider")]
    public partial class CT_CodelistValue_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_CodelistValue_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_CodelistValue_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_CodelistValue_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CodeDefinition)?
        /// </para>
        /// </summary>
        public CT_CodelistValue_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: CodeDefinition, ML_CodeDefinition
        /// </para>
        /// <para>
        /// Regular expression: (CodeDefinition)?
        /// </para>
        /// </summary>
        public CodeDefinition CodeDefinition
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx"));
                return ((CodeDefinition)(x));
            }
            set
            {
                this.SetElement(XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CodelistValue_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_CodelistValue_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx"), typeof(CodeDefinition));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_CodelistValue_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_CodelistValue_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CodeListDictionary)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_Codelist_PropertyTypeSchemaProvider")]
    public partial class CT_Codelist_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_Codelist_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_Codelist_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_Codelist_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CodeListDictionary)?
        /// </para>
        /// </summary>
        public CT_Codelist_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: CodeListDictionary, ML_CodeListDictionary
        /// </para>
        /// <para>
        /// Regular expression: (CodeListDictionary)?
        /// </para>
        /// </summary>
        public CodeListDictionary CodeListDictionary
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx"));
                return ((CodeListDictionary)(x));
            }
            set
            {
                this.SetElement(XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_Codelist_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_Codelist_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx"), typeof(CodeListDictionary));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_Codelist_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_Codelist_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CodeDefinition_TypeSchemaProvider")]
    public partial class CodeDefinition_Type : global::GeoSik.Ogc.Gml.V321.DefinitionType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CodeDefinition_Type(XElement xe) { return XTypedServices.ToXTypedElement<CodeDefinition_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CodeDefinition_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?)
        /// </para>
        /// </summary>
        public CodeDefinition_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeDefinition_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CodeDefinition_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CodeDefinition_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CodeDefinition_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CodeDefinition)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CodeDefinition_PropertyTypeSchemaProvider")]
    public partial class CodeDefinition_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CodeDefinition_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CodeDefinition_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CodeDefinition_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CodeDefinition)?
        /// </para>
        /// </summary>
        public CodeDefinition_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: CodeDefinition, ML_CodeDefinition
        /// </para>
        /// <para>
        /// Regular expression: (CodeDefinition)?
        /// </para>
        /// </summary>
        public CodeDefinition CodeDefinition
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx"));
                return ((CodeDefinition)(x));
            }
            set
            {
                this.SetElement(XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeDefinition_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CodeDefinition_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx"), typeof(CodeDefinition));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CodeDefinition_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CodeDefinition_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Constraints: - 1) metadataProperty.card = 0 - 2) dictionaryEntry.card = 0
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (dictionaryEntry | indirectEntry)*, codeEntry+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CodeListDictionary_TypeSchemaProvider")]
    public partial class CodeListDictionary_Type : global::GeoSik.Ogc.Gml.V321.DictionaryType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CodeDefinition_PropertyType> codeEntryField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator CodeListDictionary_Type(XElement xe) { return XTypedServices.ToXTypedElement<CodeListDictionary_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CodeListDictionary_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Constraints: - 1) metadataProperty.card = 0 - 2) dictionaryEntry.card = 0
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (dictionaryEntry | indirectEntry)*, codeEntry+)
        /// </para>
        /// </summary>
        public CodeListDictionary_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (dictionaryEntry | indirectEntry)*, codeEntry+)
        /// </para>
        /// </summary>
        public IList<CodeDefinition_PropertyType> codeEntry
        {
            get
            {
                if ((this.codeEntryField == null))
                {
                    this.codeEntryField = new XTypedList<CodeDefinition_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("codeEntry", "http://www.isotc211.org/2005/gmx"));
                }
                return this.codeEntryField;
            }
            set
            {
                if ((value == null))
                {
                    this.codeEntryField = null;
                }
                else
                {
                    if ((this.codeEntryField == null))
                    {
                        this.codeEntryField = XTypedList<CodeDefinition_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("codeEntry", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CodeDefinition_PropertyType>(this.codeEntryField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeListDictionary_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CodeListDictionary_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("dictionaryEntry", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.dictionaryEntry));
            localElementDictionary.Add(XName.Get("indirectEntry", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.indirectEntry));
            localElementDictionary.Add(XName.Get("codeEntry", "http://www.isotc211.org/2005/gmx"), typeof(CodeDefinition_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName CodeListDictionary_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CodeListDictionary_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CodeListDictionary)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CodeListDictionary_PropertyTypeSchemaProvider")]
    public partial class CodeListDictionary_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CodeListDictionary_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CodeListDictionary_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CodeListDictionary_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CodeListDictionary)?
        /// </para>
        /// </summary>
        public CodeListDictionary_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: CodeListDictionary, ML_CodeListDictionary
        /// </para>
        /// <para>
        /// Regular expression: (CodeListDictionary)?
        /// </para>
        /// </summary>
        public CodeListDictionary CodeListDictionary
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx"));
                return ((CodeListDictionary)(x));
            }
            set
            {
                this.SetElement(XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeListDictionary_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CodeListDictionary_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx"), typeof(CodeListDictionary));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CodeListDictionary_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CodeListDictionary_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CodeDefinition_TypeSchemaProvider")]
    public partial class ML_CodeDefinition_Type : global::GeoSik.Iso.Ts19139.Gmx.CodeDefinition_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CodeAlternativeExpression_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CodeDefinition_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_CodeDefinition_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CodeDefinition_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_CodeDefinition_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CodeAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CodeAlternativeExpression_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CodeAlternativeExpression_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CodeAlternativeExpression_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CodeDefinition_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CodeDefinition_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CodeAlternativeExpression_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CodeDefinition_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CodeDefinition_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_CodeDefinition)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CodeDefinition_PropertyTypeSchemaProvider")]
    public partial class ML_CodeDefinition_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CodeDefinition_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_CodeDefinition_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CodeDefinition_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_CodeDefinition)?
        /// </para>
        /// </summary>
        public ML_CodeDefinition_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_CodeDefinition)?
        /// </para>
        /// </summary>
        public ML_CodeDefinition ML_CodeDefinition
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx"));
                return ((ML_CodeDefinition)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CodeDefinition_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CodeDefinition_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx"), typeof(ML_CodeDefinition));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CodeDefinition_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CodeDefinition_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Constraint: codeEntry.type = ML_CodeListDefinition
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (dictionaryEntry | indirectEntry)*, codeEntry+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CodeListDictionary_TypeSchemaProvider")]
    public partial class ML_CodeListDictionary_Type : global::GeoSik.Iso.Ts19139.Gmx.CodeListDictionary_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<ClAlternativeExpression_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator ML_CodeListDictionary_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_CodeListDictionary_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CodeListDictionary_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Constraint: codeEntry.type = ML_CodeListDefinition
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (dictionaryEntry | indirectEntry)*, codeEntry+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_CodeListDictionary_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (dictionaryEntry | indirectEntry)*, codeEntry+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<ClAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<ClAlternativeExpression_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<ClAlternativeExpression_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<ClAlternativeExpression_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CodeListDictionary_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CodeListDictionary_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("dictionaryEntry", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.dictionaryEntry));
            localElementDictionary.Add(XName.Get("indirectEntry", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.indirectEntry));
            localElementDictionary.Add(XName.Get("codeEntry", "http://www.isotc211.org/2005/gmx"), typeof(CodeDefinition_PropertyType));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(ClAlternativeExpression_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName ML_CodeListDictionary_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CodeListDictionary_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_CodeListDictionary)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CodeListDictionary_PropertyTypeSchemaProvider")]
    public partial class ML_CodeListDictionary_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CodeListDictionary_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_CodeListDictionary_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CodeListDictionary_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_CodeListDictionary)?
        /// </para>
        /// </summary>
        public ML_CodeListDictionary_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_CodeListDictionary)?
        /// </para>
        /// </summary>
        public ML_CodeListDictionary ML_CodeListDictionary
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx"));
                return ((ML_CodeListDictionary)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CodeListDictionary_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CodeListDictionary_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx"), typeof(ML_CodeListDictionary));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CodeListDictionary_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CodeListDictionary_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ClAlternativeExpression_TypeSchemaProvider")]
    public partial class ClAlternativeExpression_Type : global::GeoSik.Ogc.Gml.V321.DefinitionType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ClAlternativeExpression_Type(XElement xe) { return XTypedServices.ToXTypedElement<ClAlternativeExpression_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ClAlternativeExpression_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public ClAlternativeExpression_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ClAlternativeExpression_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ClAlternativeExpression_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ClAlternativeExpression_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ClAlternativeExpression_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ClAlternativeExpression)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ClAlternativeExpression_PropertyTypeSchemaProvider")]
    public partial class ClAlternativeExpression_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ClAlternativeExpression_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ClAlternativeExpression_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ClAlternativeExpression_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ClAlternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ClAlternativeExpression)?
        /// </para>
        /// </summary>
        public ClAlternativeExpression_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ClAlternativeExpression)?
        /// </para>
        /// </summary>
        public ClAlternativeExpression ClAlternativeExpression
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ClAlternativeExpression", "http://www.isotc211.org/2005/gmx"));
                return ((ClAlternativeExpression)(x));
            }
            set
            {
                this.SetElement(XName.Get("ClAlternativeExpression", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ClAlternativeExpression_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ClAlternativeExpression_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ClAlternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(ClAlternativeExpression));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ClAlternativeExpression_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ClAlternativeExpression_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale?)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CodeAlternativeExpression_TypeSchemaProvider")]
    public partial class CodeAlternativeExpression_Type : global::GeoSik.Ogc.Gml.V321.DefinitionType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CodeAlternativeExpression_Type(XElement xe) { return XTypedServices.ToXTypedElement<CodeAlternativeExpression_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CodeAlternativeExpression_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale?)
        /// </para>
        /// </summary>
        public CodeAlternativeExpression_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeAlternativeExpression_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CodeAlternativeExpression_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CodeAlternativeExpression_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CodeAlternativeExpression_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CodeAlternativeExpression)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CodeAlternativeExpression_PropertyTypeSchemaProvider")]
    public partial class CodeAlternativeExpression_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CodeAlternativeExpression_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CodeAlternativeExpression_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CodeAlternativeExpression_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CodeAlternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CodeAlternativeExpression)?
        /// </para>
        /// </summary>
        public CodeAlternativeExpression_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CodeAlternativeExpression)?
        /// </para>
        /// </summary>
        public CodeAlternativeExpression CodeAlternativeExpression
        {
            get
            {
                XElement x = this.GetElement(XName.Get("CodeAlternativeExpression", "http://www.isotc211.org/2005/gmx"));
                return ((CodeAlternativeExpression)(x));
            }
            set
            {
                this.SetElement(XName.Get("CodeAlternativeExpression", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeAlternativeExpression_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CodeAlternativeExpression_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CodeAlternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CodeAlternativeExpression));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CodeAlternativeExpression_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CodeAlternativeExpression_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_CRS_PropertyTypeSchemaProvider")]
    public partial class CT_CRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_CRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_CRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_CRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractCRS", "http://www.opengis.net/gml/3.2"), XName.Get("ML_CompoundCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_GeodeticCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_EngineeringCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_VerticalCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_TemporalCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_ImageCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_ProjectedCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_DerivedCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("AbstractSingleCRS", "http://www.opengis.net/gml/3.2"), XName.Get("AbstractGeneralDerivedCRS", "http://www.opengis.net/gml/3.2"), XName.Get("CompoundCRS", "http://www.opengis.net/gml/3.2"), XName.Get("GeodeticCRS", "http://www.opengis.net/gml/3.2"), XName.Get("VerticalCRS", "http://www.opengis.net/gml/3.2"), XName.Get("ProjectedCRS", "http://www.opengis.net/gml/3.2"), XName.Get("DerivedCRS", "http://www.opengis.net/gml/3.2"), XName.Get("EngineeringCRS", "http://www.opengis.net/gml/3.2"), XName.Get("ImageCRS", "http://www.opengis.net/gml/3.2"), XName.Get("TemporalCRS", "http://www.opengis.net/gml/3.2"), XName.Get("GeographicCRS", "http://www.opengis.net/gml/3.2"), XName.Get("GeocentricCRS", "http://www.opengis.net/gml/3.2")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractCRS)?
        /// </para>
        /// </summary>
        public CT_CRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractCRS, ML_CompoundCRS, ML_GeodeticCRS, ML_EngineeringCRS, ML_VerticalCRS, ML_TemporalCRS, ML_ImageCRS, ML_ProjectedCRS, ML_DerivedCRS, AbstractSingleCRS, AbstractGeneralDerivedCRS, CompoundCRS, GeodeticCRS, VerticalCRS, ProjectedCRS, DerivedCRS, EngineeringCRS, ImageCRS, TemporalCRS, GeographicCRS, GeocentricCRS
        /// </para>
        /// <para>
        /// Regular expression: (AbstractCRS)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.AbstractCRS AbstractCRS
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractCRS", "http://www.opengis.net/gml/3.2"), XName.Get("ML_CompoundCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_GeodeticCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_EngineeringCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_VerticalCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_TemporalCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_ImageCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_ProjectedCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_DerivedCRS", "http://www.isotc211.org/2005/gmx"), XName.Get("AbstractSingleCRS", "http://www.opengis.net/gml/3.2"), XName.Get("AbstractGeneralDerivedCRS", "http://www.opengis.net/gml/3.2"), XName.Get("CompoundCRS", "http://www.opengis.net/gml/3.2"), XName.Get("GeodeticCRS", "http://www.opengis.net/gml/3.2"), XName.Get("VerticalCRS", "http://www.opengis.net/gml/3.2"), XName.Get("ProjectedCRS", "http://www.opengis.net/gml/3.2"), XName.Get("DerivedCRS", "http://www.opengis.net/gml/3.2"), XName.Get("EngineeringCRS", "http://www.opengis.net/gml/3.2"), XName.Get("ImageCRS", "http://www.opengis.net/gml/3.2"), XName.Get("TemporalCRS", "http://www.opengis.net/gml/3.2"), XName.Get("GeographicCRS", "http://www.opengis.net/gml/3.2"), XName.Get("GeocentricCRS", "http://www.opengis.net/gml/3.2"));
                return ((GeoSik.Ogc.Gml.V321.AbstractCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractCRS", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_CRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.AbstractCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_CRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_CRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractCoordinateSystem)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_CoordinateSystem_PropertyTypeSchemaProvider")]
    public partial class CT_CoordinateSystem_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_CoordinateSystem_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_CoordinateSystem_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_CoordinateSystem_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractCoordinateSystem", "http://www.opengis.net/gml/3.2"), XName.Get("ML_EllipsoidalCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CartesianCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_AffineCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_UserDefinedCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_VerticalCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_TimeCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CylindricalCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_SphericalCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_PolarCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_LinearCS", "http://www.isotc211.org/2005/gmx"), XName.Get("EllipsoidalCS", "http://www.opengis.net/gml/3.2"), XName.Get("CartesianCS", "http://www.opengis.net/gml/3.2"), XName.Get("VerticalCS", "http://www.opengis.net/gml/3.2"), XName.Get("TimeCS", "http://www.opengis.net/gml/3.2"), XName.Get("LinearCS", "http://www.opengis.net/gml/3.2"), XName.Get("UserDefinedCS", "http://www.opengis.net/gml/3.2"), XName.Get("SphericalCS", "http://www.opengis.net/gml/3.2"), XName.Get("PolarCS", "http://www.opengis.net/gml/3.2"), XName.Get("CylindricalCS", "http://www.opengis.net/gml/3.2"), XName.Get("AffineCS", "http://www.opengis.net/gml/3.2"), XName.Get("TemporalCS", "http://www.opengis.net/gml/3.2"), XName.Get("ObliqueCartesianCS", "http://www.opengis.net/gml/3.2")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractCoordinateSystem)?
        /// </para>
        /// </summary>
        public CT_CoordinateSystem_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractCoordinateSystem, ML_EllipsoidalCS, ML_CartesianCS, ML_AffineCS, ML_UserDefinedCS, ML_VerticalCS, ML_TimeCS, ML_CylindricalCS, ML_SphericalCS, ML_PolarCS, ML_LinearCS, EllipsoidalCS, CartesianCS, VerticalCS, TimeCS, LinearCS, UserDefinedCS, SphericalCS, PolarCS, CylindricalCS, AffineCS, TemporalCS, ObliqueCartesianCS
        /// </para>
        /// <para>
        /// Regular expression: (AbstractCoordinateSystem)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.AbstractCoordinateSystem AbstractCoordinateSystem
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractCoordinateSystem", "http://www.opengis.net/gml/3.2"), XName.Get("ML_EllipsoidalCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CartesianCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_AffineCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_UserDefinedCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_VerticalCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_TimeCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_CylindricalCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_SphericalCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_PolarCS", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_LinearCS", "http://www.isotc211.org/2005/gmx"), XName.Get("EllipsoidalCS", "http://www.opengis.net/gml/3.2"), XName.Get("CartesianCS", "http://www.opengis.net/gml/3.2"), XName.Get("VerticalCS", "http://www.opengis.net/gml/3.2"), XName.Get("TimeCS", "http://www.opengis.net/gml/3.2"), XName.Get("LinearCS", "http://www.opengis.net/gml/3.2"), XName.Get("UserDefinedCS", "http://www.opengis.net/gml/3.2"), XName.Get("SphericalCS", "http://www.opengis.net/gml/3.2"), XName.Get("PolarCS", "http://www.opengis.net/gml/3.2"), XName.Get("CylindricalCS", "http://www.opengis.net/gml/3.2"), XName.Get("AffineCS", "http://www.opengis.net/gml/3.2"), XName.Get("TemporalCS", "http://www.opengis.net/gml/3.2"), XName.Get("ObliqueCartesianCS", "http://www.opengis.net/gml/3.2"));
                return ((GeoSik.Ogc.Gml.V321.AbstractCoordinateSystem)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractCoordinateSystem", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CoordinateSystem_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_CoordinateSystem_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractCoordinateSystem", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.AbstractCoordinateSystem));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_CoordinateSystem_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_CoordinateSystem_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CoordinateSystemAxis)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_CoordinateSystemAxis_PropertyTypeSchemaProvider")]
    public partial class CT_CoordinateSystemAxis_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_CoordinateSystemAxis_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_CoordinateSystemAxis_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_CoordinateSystemAxis_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("CoordinateSystemAxis", "http://www.opengis.net/gml/3.2"), XName.Get("ML_CoordinateSystemAxis", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CoordinateSystemAxis)?
        /// </para>
        /// </summary>
        public CT_CoordinateSystemAxis_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: CoordinateSystemAxis, ML_CoordinateSystemAxis
        /// </para>
        /// <para>
        /// Regular expression: (CoordinateSystemAxis)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.CoordinateSystemAxis CoordinateSystemAxis
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("CoordinateSystemAxis", "http://www.opengis.net/gml/3.2"), XName.Get("ML_CoordinateSystemAxis", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Ogc.Gml.V321.CoordinateSystemAxis)(x));
            }
            set
            {
                this.SetElement(XName.Get("CoordinateSystemAxis", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CoordinateSystemAxis_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_CoordinateSystemAxis_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CoordinateSystemAxis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.CoordinateSystemAxis));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_CoordinateSystemAxis_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_CoordinateSystemAxis_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractDatum)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_Datum_PropertyTypeSchemaProvider")]
    public partial class CT_Datum_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_Datum_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_Datum_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_Datum_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractDatum", "http://www.opengis.net/gml/3.2"), XName.Get("ML_TemporalDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_VerticalDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_ImageDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_EngineeringDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_GeodeticDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("GeodeticDatum", "http://www.opengis.net/gml/3.2"), XName.Get("EngineeringDatum", "http://www.opengis.net/gml/3.2"), XName.Get("ImageDatum", "http://www.opengis.net/gml/3.2"), XName.Get("VerticalDatum", "http://www.opengis.net/gml/3.2"), XName.Get("TemporalDatum", "http://www.opengis.net/gml/3.2")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractDatum)?
        /// </para>
        /// </summary>
        public CT_Datum_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractDatum, ML_TemporalDatum, ML_VerticalDatum, ML_ImageDatum, ML_EngineeringDatum, ML_GeodeticDatum, GeodeticDatum, EngineeringDatum, ImageDatum, VerticalDatum, TemporalDatum
        /// </para>
        /// <para>
        /// Regular expression: (AbstractDatum)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.AbstractDatum AbstractDatum
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractDatum", "http://www.opengis.net/gml/3.2"), XName.Get("ML_TemporalDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_VerticalDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_ImageDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_EngineeringDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_GeodeticDatum", "http://www.isotc211.org/2005/gmx"), XName.Get("GeodeticDatum", "http://www.opengis.net/gml/3.2"), XName.Get("EngineeringDatum", "http://www.opengis.net/gml/3.2"), XName.Get("ImageDatum", "http://www.opengis.net/gml/3.2"), XName.Get("VerticalDatum", "http://www.opengis.net/gml/3.2"), XName.Get("TemporalDatum", "http://www.opengis.net/gml/3.2"));
                return ((GeoSik.Ogc.Gml.V321.AbstractDatum)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractDatum", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_Datum_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_Datum_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractDatum", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.AbstractDatum));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_Datum_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_Datum_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (Ellipsoid)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_Ellipsoid_PropertyTypeSchemaProvider")]
    public partial class CT_Ellipsoid_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_Ellipsoid_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_Ellipsoid_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_Ellipsoid_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("Ellipsoid", "http://www.opengis.net/gml/3.2"), XName.Get("ML_Ellipsoid", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (Ellipsoid)?
        /// </para>
        /// </summary>
        public CT_Ellipsoid_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: Ellipsoid, ML_Ellipsoid
        /// </para>
        /// <para>
        /// Regular expression: (Ellipsoid)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.Ellipsoid1 Ellipsoid
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("Ellipsoid", "http://www.opengis.net/gml/3.2"), XName.Get("ML_Ellipsoid", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Ogc.Gml.V321.Ellipsoid1)(x));
            }
            set
            {
                this.SetElement(XName.Get("Ellipsoid", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_Ellipsoid_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_Ellipsoid_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("Ellipsoid", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.Ellipsoid1));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_Ellipsoid_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_Ellipsoid_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (PrimeMeridian)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_PrimeMeridian_PropertyTypeSchemaProvider")]
    public partial class CT_PrimeMeridian_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_PrimeMeridian_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_PrimeMeridian_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_PrimeMeridian_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("PrimeMeridian", "http://www.opengis.net/gml/3.2"), XName.Get("ML_PrimeMeridian", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (PrimeMeridian)?
        /// </para>
        /// </summary>
        public CT_PrimeMeridian_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: PrimeMeridian, ML_PrimeMeridian
        /// </para>
        /// <para>
        /// Regular expression: (PrimeMeridian)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.PrimeMeridian1 PrimeMeridian
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("PrimeMeridian", "http://www.opengis.net/gml/3.2"), XName.Get("ML_PrimeMeridian", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Ogc.Gml.V321.PrimeMeridian1)(x));
            }
            set
            {
                this.SetElement(XName.Get("PrimeMeridian", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_PrimeMeridian_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_PrimeMeridian_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("PrimeMeridian", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.PrimeMeridian1));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_PrimeMeridian_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_PrimeMeridian_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractCoordinateOperation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_Operation_PropertyTypeSchemaProvider")]
    public partial class CT_Operation_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_Operation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_Operation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_Operation_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractCoordinateOperation", "http://www.opengis.net/gml/3.2"), XName.Get("ML_ConcatenatedOperation", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_PassThroughOperation", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_Transformation", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_Conversion", "http://www.isotc211.org/2005/gmx"), XName.Get("AbstractSingleOperation", "http://www.opengis.net/gml/3.2"), XName.Get("AbstractGeneralConversion", "http://www.opengis.net/gml/3.2"), XName.Get("AbstractGeneralTransformation", "http://www.opengis.net/gml/3.2"), XName.Get("ConcatenatedOperation", "http://www.opengis.net/gml/3.2"), XName.Get("PassThroughOperation", "http://www.opengis.net/gml/3.2"), XName.Get("Conversion", "http://www.opengis.net/gml/3.2"), XName.Get("Transformation", "http://www.opengis.net/gml/3.2"), XName.Get("AbstractOperation", "http://www.opengis.net/gml/3.2")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractCoordinateOperation)?
        /// </para>
        /// </summary>
        public CT_Operation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractCoordinateOperation, ML_ConcatenatedOperation, ML_PassThroughOperation, ML_Transformation, ML_Conversion, AbstractSingleOperation, AbstractGeneralConversion, AbstractGeneralTransformation, ConcatenatedOperation, PassThroughOperation, Conversion, Transformation, AbstractOperation
        /// </para>
        /// <para>
        /// Regular expression: (AbstractCoordinateOperation)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.AbstractCoordinateOperation AbstractCoordinateOperation
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractCoordinateOperation", "http://www.opengis.net/gml/3.2"), XName.Get("ML_ConcatenatedOperation", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_PassThroughOperation", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_Transformation", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_Conversion", "http://www.isotc211.org/2005/gmx"), XName.Get("AbstractSingleOperation", "http://www.opengis.net/gml/3.2"), XName.Get("AbstractGeneralConversion", "http://www.opengis.net/gml/3.2"), XName.Get("AbstractGeneralTransformation", "http://www.opengis.net/gml/3.2"), XName.Get("ConcatenatedOperation", "http://www.opengis.net/gml/3.2"), XName.Get("PassThroughOperation", "http://www.opengis.net/gml/3.2"), XName.Get("Conversion", "http://www.opengis.net/gml/3.2"), XName.Get("Transformation", "http://www.opengis.net/gml/3.2"), XName.Get("AbstractOperation", "http://www.opengis.net/gml/3.2"));
                return ((GeoSik.Ogc.Gml.V321.AbstractCoordinateOperation)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractCoordinateOperation", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_Operation_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_Operation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractCoordinateOperation", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.AbstractCoordinateOperation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_Operation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_Operation_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (OperationMethod)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_OperationMethod_PropertyTypeSchemaProvider")]
    public partial class CT_OperationMethod_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_OperationMethod_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_OperationMethod_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_OperationMethod_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("OperationMethod", "http://www.opengis.net/gml/3.2"), XName.Get("ML_OperationMethod", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (OperationMethod)?
        /// </para>
        /// </summary>
        public CT_OperationMethod_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: OperationMethod, ML_OperationMethod
        /// </para>
        /// <para>
        /// Regular expression: (OperationMethod)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.OperationMethod OperationMethod
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("OperationMethod", "http://www.opengis.net/gml/3.2"), XName.Get("ML_OperationMethod", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Ogc.Gml.V321.OperationMethod)(x));
            }
            set
            {
                this.SetElement(XName.Get("OperationMethod", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_OperationMethod_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_OperationMethod_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("OperationMethod", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.OperationMethod));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_OperationMethod_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_OperationMethod_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractGeneralOperationParameter)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_OperationParameters_PropertyTypeSchemaProvider")]
    public partial class CT_OperationParameters_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_OperationParameters_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_OperationParameters_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_OperationParameters_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractGeneralOperationParameter", "http://www.opengis.net/gml/3.2"), XName.Get("ML_OperationParameterGroup", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_OperationParameter", "http://www.isotc211.org/2005/gmx"), XName.Get("OperationParameter", "http://www.opengis.net/gml/3.2"), XName.Get("OperationParameterGroup", "http://www.opengis.net/gml/3.2")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractGeneralOperationParameter)?
        /// </para>
        /// </summary>
        public CT_OperationParameters_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractGeneralOperationParameter, ML_OperationParameterGroup, ML_OperationParameter, OperationParameter, OperationParameterGroup
        /// </para>
        /// <para>
        /// Regular expression: (AbstractGeneralOperationParameter)?
        /// </para>
        /// </summary>
        public GeoSik.Ogc.Gml.V321.AbstractGeneralOperationParameter AbstractGeneralOperationParameter
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractGeneralOperationParameter", "http://www.opengis.net/gml/3.2"), XName.Get("ML_OperationParameterGroup", "http://www.isotc211.org/2005/gmx"), XName.Get("ML_OperationParameter", "http://www.isotc211.org/2005/gmx"), XName.Get("OperationParameter", "http://www.opengis.net/gml/3.2"), XName.Get("OperationParameterGroup", "http://www.opengis.net/gml/3.2"));
                return ((GeoSik.Ogc.Gml.V321.AbstractGeneralOperationParameter)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractGeneralOperationParameter", "http://www.opengis.net/gml/3.2"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_OperationParameters_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_OperationParameters_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractGeneralOperationParameter", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.AbstractGeneralOperationParameter));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_OperationParameters_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_OperationParameters_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, componentReferenceSystem+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CompoundCRS_TypeSchemaProvider")]
    public partial class ML_CompoundCRS_Type : global::GeoSik.Ogc.Gml.V321.CompoundCRSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CrsAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CompoundCRS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_CompoundCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CompoundCRS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("componentReferenceSystem", "http://www.opengis.net/gml/3.2"), XName.Get("includesSingleCRS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, componentReferenceSystem+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_CompoundCRS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, componentReferenceSystem+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CrsAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CrsAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CrsAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CompoundCRS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CompoundCRS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("componentReferenceSystem", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.componentReferenceSystem));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CompoundCRS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CompoundCRS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_CompoundCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CompoundCRS_PropertyTypeSchemaProvider")]
    public partial class ML_CompoundCRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CompoundCRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_CompoundCRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CompoundCRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_CompoundCRS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_CompoundCRS)?
        /// </para>
        /// </summary>
        public ML_CompoundCRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_CompoundCRS)?
        /// </para>
        /// </summary>
        public ML_CompoundCRS ML_CompoundCRS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_CompoundCRS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_CompoundCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_CompoundCRS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CompoundCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CompoundCRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_CompoundCRS", "http://www.isotc211.org/2005/gmx"), typeof(ML_CompoundCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CompoundCRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CompoundCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (ellipsoidalCS | cartesianCS | sphericalCS), geodeticDatum, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_GeodeticCRS_TypeSchemaProvider")]
    public partial class ML_GeodeticCRS_Type : global::GeoSik.Ogc.Gml.V321.GeodeticCRSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CrsAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator ML_GeodeticCRS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_GeodeticCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_GeodeticCRS_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (ellipsoidalCS | cartesianCS | sphericalCS), geodeticDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_GeodeticCRS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (ellipsoidalCS | cartesianCS | sphericalCS), geodeticDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CrsAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CrsAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CrsAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_GeodeticCRS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_GeodeticCRS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("ellipsoidalCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.ellipsoidalCS1));
            localElementDictionary.Add(XName.Get("cartesianCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.cartesianCS1));
            localElementDictionary.Add(XName.Get("sphericalCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.sphericalCS1));
            localElementDictionary.Add(XName.Get("geodeticDatum", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.geodeticDatum1));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName ML_GeodeticCRS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_GeodeticCRS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_GeodeticCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_GeodeticCRS_PropertyTypeSchemaProvider")]
    public partial class ML_GeodeticCRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_GeodeticCRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_GeodeticCRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_GeodeticCRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_GeodeticCRS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_GeodeticCRS)?
        /// </para>
        /// </summary>
        public ML_GeodeticCRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_GeodeticCRS)?
        /// </para>
        /// </summary>
        public ML_GeodeticCRS ML_GeodeticCRS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_GeodeticCRS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_GeodeticCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_GeodeticCRS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_GeodeticCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_GeodeticCRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_GeodeticCRS", "http://www.isotc211.org/2005/gmx"), typeof(ML_GeodeticCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_GeodeticCRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_GeodeticCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (affineCS | cartesianCS | cylindricalCS | linearCS | polarCS | sphericalCS | userDefinedCS | coordinateSystem), engineeringDatum, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_EngineeringCRS_TypeSchemaProvider")]
    public partial class ML_EngineeringCRS_Type : global::GeoSik.Ogc.Gml.V321.EngineeringCRSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CrsAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator ML_EngineeringCRS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_EngineeringCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_EngineeringCRS_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (affineCS | cartesianCS | cylindricalCS | linearCS | polarCS | sphericalCS | userDefinedCS | coordinateSystem), engineeringDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_EngineeringCRS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (affineCS | cartesianCS | cylindricalCS | linearCS | polarCS | sphericalCS | userDefinedCS | coordinateSystem), engineeringDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CrsAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CrsAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CrsAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EngineeringCRS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_EngineeringCRS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("affineCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.affineCS1));
            localElementDictionary.Add(XName.Get("cartesianCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.cartesianCS1));
            localElementDictionary.Add(XName.Get("cylindricalCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.cylindricalCS1));
            localElementDictionary.Add(XName.Get("linearCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.linearCS1));
            localElementDictionary.Add(XName.Get("polarCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.polarCS1));
            localElementDictionary.Add(XName.Get("sphericalCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.sphericalCS1));
            localElementDictionary.Add(XName.Get("userDefinedCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.userDefinedCS1));
            localElementDictionary.Add(XName.Get("coordinateSystem", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordinateSystem));
            localElementDictionary.Add(XName.Get("engineeringDatum", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.engineeringDatum1));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName ML_EngineeringCRS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_EngineeringCRS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_EngineeringCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_EngineeringCRS_PropertyTypeSchemaProvider")]
    public partial class ML_EngineeringCRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_EngineeringCRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_EngineeringCRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_EngineeringCRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_EngineeringCRS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_EngineeringCRS)?
        /// </para>
        /// </summary>
        public ML_EngineeringCRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_EngineeringCRS)?
        /// </para>
        /// </summary>
        public ML_EngineeringCRS ML_EngineeringCRS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_EngineeringCRS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_EngineeringCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_EngineeringCRS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EngineeringCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_EngineeringCRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_EngineeringCRS", "http://www.isotc211.org/2005/gmx"), typeof(ML_EngineeringCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_EngineeringCRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_EngineeringCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, verticalCS, verticalDatum, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_VerticalCRS_TypeSchemaProvider")]
    public partial class ML_VerticalCRS_Type : global::GeoSik.Ogc.Gml.V321.VerticalCRSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CrsAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_VerticalCRS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_VerticalCRS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("verticalCS", "http://www.opengis.net/gml/3.2"), XName.Get("usesVerticalCS", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("verticalDatum", "http://www.opengis.net/gml/3.2"), XName.Get("usesVerticalDatum", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, verticalCS, verticalDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_VerticalCRS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, verticalCS, verticalDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CrsAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CrsAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CrsAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalCRS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_VerticalCRS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("verticalCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.verticalCS1));
            localElementDictionary.Add(XName.Get("verticalDatum", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.verticalDatum1));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_VerticalCRS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_VerticalCRS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_VerticalCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_VerticalCRS_PropertyTypeSchemaProvider")]
    public partial class ML_VerticalCRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_VerticalCRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalCRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_VerticalCRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_VerticalCRS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_VerticalCRS)?
        /// </para>
        /// </summary>
        public ML_VerticalCRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_VerticalCRS)?
        /// </para>
        /// </summary>
        public ML_VerticalCRS ML_VerticalCRS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_VerticalCRS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_VerticalCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_VerticalCRS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_VerticalCRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_VerticalCRS", "http://www.isotc211.org/2005/gmx"), typeof(ML_VerticalCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_VerticalCRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_VerticalCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (timeCS | usesTemporalCS), temporalDatum, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_TemporalCRS_TypeSchemaProvider")]
    public partial class ML_TemporalCRS_Type : global::GeoSik.Ogc.Gml.V321.TemporalCRSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CrsAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator ML_TemporalCRS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_TemporalCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_TemporalCRS_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (timeCS | usesTemporalCS), temporalDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_TemporalCRS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (timeCS | usesTemporalCS), temporalDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CrsAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CrsAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CrsAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TemporalCRS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_TemporalCRS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("timeCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.timeCS1));
            localElementDictionary.Add(XName.Get("usesTemporalCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.usesTemporalCS));
            localElementDictionary.Add(XName.Get("temporalDatum", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.temporalDatum1));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName ML_TemporalCRS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_TemporalCRS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_TemporalCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_TemporalCRS_PropertyTypeSchemaProvider")]
    public partial class ML_TemporalCRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_TemporalCRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_TemporalCRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_TemporalCRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_TemporalCRS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_TemporalCRS)?
        /// </para>
        /// </summary>
        public ML_TemporalCRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_TemporalCRS)?
        /// </para>
        /// </summary>
        public ML_TemporalCRS ML_TemporalCRS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_TemporalCRS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_TemporalCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_TemporalCRS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TemporalCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_TemporalCRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_TemporalCRS", "http://www.isotc211.org/2005/gmx"), typeof(ML_TemporalCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_TemporalCRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_TemporalCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (cartesianCS | affineCS | usesObliqueCartesianCS), imageDatum, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ImageCRS_TypeSchemaProvider")]
    public partial class ML_ImageCRS_Type : global::GeoSik.Ogc.Gml.V321.ImageCRSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CrsAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator ML_ImageCRS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_ImageCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ImageCRS_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (cartesianCS | affineCS | usesObliqueCartesianCS), imageDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_ImageCRS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (cartesianCS | affineCS | usesObliqueCartesianCS), imageDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CrsAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CrsAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CrsAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ImageCRS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ImageCRS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("cartesianCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.cartesianCS1));
            localElementDictionary.Add(XName.Get("affineCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.affineCS1));
            localElementDictionary.Add(XName.Get("usesObliqueCartesianCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.usesObliqueCartesianCS));
            localElementDictionary.Add(XName.Get("imageDatum", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.imageDatum1));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName ML_ImageCRS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ImageCRS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_ImageCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ImageCRS_PropertyTypeSchemaProvider")]
    public partial class ML_ImageCRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_ImageCRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_ImageCRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ImageCRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_ImageCRS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_ImageCRS)?
        /// </para>
        /// </summary>
        public ML_ImageCRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_ImageCRS)?
        /// </para>
        /// </summary>
        public ML_ImageCRS ML_ImageCRS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_ImageCRS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_ImageCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_ImageCRS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ImageCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ImageCRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_ImageCRS", "http://www.isotc211.org/2005/gmx"), typeof(ML_ImageCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_ImageCRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ImageCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, conversion, (baseGeodeticCRS | baseGeographicCRS), cartesianCS, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ProjectedCRS_TypeSchemaProvider")]
    public partial class ML_ProjectedCRS_Type : global::GeoSik.Ogc.Gml.V321.ProjectedCRSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CrsAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator ML_ProjectedCRS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_ProjectedCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ProjectedCRS_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, conversion, (baseGeodeticCRS | baseGeographicCRS), cartesianCS, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_ProjectedCRS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, conversion, (baseGeodeticCRS | baseGeographicCRS), cartesianCS, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CrsAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CrsAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CrsAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ProjectedCRS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ProjectedCRS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("conversion", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.conversion1));
            localElementDictionary.Add(XName.Get("baseGeodeticCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.baseGeodeticCRS));
            localElementDictionary.Add(XName.Get("baseGeographicCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.baseGeographicCRS));
            localElementDictionary.Add(XName.Get("cartesianCS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.cartesianCS1));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName ML_ProjectedCRS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ProjectedCRS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_ProjectedCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ProjectedCRS_PropertyTypeSchemaProvider")]
    public partial class ML_ProjectedCRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_ProjectedCRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_ProjectedCRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ProjectedCRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_ProjectedCRS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_ProjectedCRS)?
        /// </para>
        /// </summary>
        public ML_ProjectedCRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_ProjectedCRS)?
        /// </para>
        /// </summary>
        public ML_ProjectedCRS ML_ProjectedCRS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_ProjectedCRS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_ProjectedCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_ProjectedCRS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ProjectedCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ProjectedCRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_ProjectedCRS", "http://www.isotc211.org/2005/gmx"), typeof(ML_ProjectedCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_ProjectedCRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ProjectedCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, conversion, baseCRS, derivedCRSType, coordinateSystem, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_DerivedCRS_TypeSchemaProvider")]
    public partial class ML_DerivedCRS_Type : global::GeoSik.Ogc.Gml.V321.DerivedCRSTypeType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CrsAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_DerivedCRS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_DerivedCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_DerivedCRS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("conversion", "http://www.opengis.net/gml/3.2"), XName.Get("definedByConversion", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("baseCRS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("derivedCRSType", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("coordinateSystem", "http://www.opengis.net/gml/3.2"), XName.Get("usesCS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, conversion, baseCRS, derivedCRSType, coordinateSystem, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_DerivedCRS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, conversion, baseCRS, derivedCRSType, coordinateSystem, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CrsAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CrsAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CrsAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_DerivedCRS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_DerivedCRS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("conversion", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.conversion1));
            localElementDictionary.Add(XName.Get("baseCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.baseCRS));
            localElementDictionary.Add(XName.Get("derivedCRSType", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.derivedCRSType));
            localElementDictionary.Add(XName.Get("coordinateSystem", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordinateSystem));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_DerivedCRS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_DerivedCRS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_DerivedCRS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_DerivedCRS_PropertyTypeSchemaProvider")]
    public partial class ML_DerivedCRS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_DerivedCRS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_DerivedCRS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_DerivedCRS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_DerivedCRS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_DerivedCRS)?
        /// </para>
        /// </summary>
        public ML_DerivedCRS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_DerivedCRS)?
        /// </para>
        /// </summary>
        public ML_DerivedCRS ML_DerivedCRS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_DerivedCRS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_DerivedCRS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_DerivedCRS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_DerivedCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_DerivedCRS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_DerivedCRS", "http://www.isotc211.org/2005/gmx"), typeof(ML_DerivedCRS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_DerivedCRS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_DerivedCRS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axisAbbrev, axisDirection, minimumValue?, maximumValue?, rangeMeaning?, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CoordinateSystemAxis_TypeSchemaProvider")]
    public partial class ML_CoordinateSystemAxis_Type : global::GeoSik.Ogc.Gml.V321.CoordinateSystemAxisType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAxisAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CoordinateSystemAxis_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_CoordinateSystemAxis_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CoordinateSystemAxis_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("axisAbbrev", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("axisDirection", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("minimumValue", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("maximumValue", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("rangeMeaning", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axisAbbrev, axisDirection, minimumValue?, maximumValue?, rangeMeaning?, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_CoordinateSystemAxis_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axisAbbrev, axisDirection, minimumValue?, maximumValue?, rangeMeaning?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAxisAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAxisAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAxisAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAxisAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CoordinateSystemAxis_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CoordinateSystemAxis_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axisAbbrev", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axisAbbrev));
            localElementDictionary.Add(XName.Get("axisDirection", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axisDirection));
            localElementDictionary.Add(XName.Get("minimumValue", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.minimumValue));
            localElementDictionary.Add(XName.Get("maximumValue", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.maximumValue));
            localElementDictionary.Add(XName.Get("rangeMeaning", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.rangeMeaning));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAxisAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CoordinateSystemAxis_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CoordinateSystemAxis_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_CoordinateSystemAxis)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CoordinateSystemAxis_PropertyTypeSchemaProvider")]
    public partial class ML_CoordinateSystemAxis_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CoordinateSystemAxis_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_CoordinateSystemAxis_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CoordinateSystemAxis_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_CoordinateSystemAxis", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_CoordinateSystemAxis)?
        /// </para>
        /// </summary>
        public ML_CoordinateSystemAxis_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_CoordinateSystemAxis)?
        /// </para>
        /// </summary>
        public ML_CoordinateSystemAxis ML_CoordinateSystemAxis
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_CoordinateSystemAxis", "http://www.isotc211.org/2005/gmx"));
                return ((ML_CoordinateSystemAxis)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_CoordinateSystemAxis", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CoordinateSystemAxis_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CoordinateSystemAxis_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_CoordinateSystemAxis", "http://www.isotc211.org/2005/gmx"), typeof(ML_CoordinateSystemAxis));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CoordinateSystemAxis_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CoordinateSystemAxis_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_EllipsoidalCS_TypeSchemaProvider")]
    public partial class ML_EllipsoidalCS_Type : global::GeoSik.Ogc.Gml.V321.EllipsoidalCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_EllipsoidalCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_EllipsoidalCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_EllipsoidalCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_EllipsoidalCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EllipsoidalCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_EllipsoidalCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_EllipsoidalCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_EllipsoidalCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_EllipsoidalCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_EllipsoidalCS_PropertyTypeSchemaProvider")]
    public partial class ML_EllipsoidalCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_EllipsoidalCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_EllipsoidalCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_EllipsoidalCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_EllipsoidalCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_EllipsoidalCS)?
        /// </para>
        /// </summary>
        public ML_EllipsoidalCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_EllipsoidalCS)?
        /// </para>
        /// </summary>
        public ML_EllipsoidalCS ML_EllipsoidalCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_EllipsoidalCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_EllipsoidalCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_EllipsoidalCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EllipsoidalCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_EllipsoidalCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_EllipsoidalCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_EllipsoidalCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_EllipsoidalCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_EllipsoidalCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CartesianCS_TypeSchemaProvider")]
    public partial class ML_CartesianCS_Type : global::GeoSik.Ogc.Gml.V321.CartesianCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CartesianCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_CartesianCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CartesianCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_CartesianCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CartesianCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CartesianCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CartesianCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CartesianCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_CartesianCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CartesianCS_PropertyTypeSchemaProvider")]
    public partial class ML_CartesianCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CartesianCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_CartesianCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CartesianCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_CartesianCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_CartesianCS)?
        /// </para>
        /// </summary>
        public ML_CartesianCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_CartesianCS)?
        /// </para>
        /// </summary>
        public ML_CartesianCS ML_CartesianCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_CartesianCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_CartesianCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_CartesianCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CartesianCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CartesianCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_CartesianCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_CartesianCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CartesianCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CartesianCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_AffineCS_TypeSchemaProvider")]
    public partial class ML_AffineCS_Type : global::GeoSik.Ogc.Gml.V321.AffineCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_AffineCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_AffineCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_AffineCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_AffineCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_AffineCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_AffineCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_AffineCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_AffineCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_AffineCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_AffineCS_PropertyTypeSchemaProvider")]
    public partial class ML_AffineCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_AffineCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_AffineCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_AffineCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_AffineCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_AffineCS)?
        /// </para>
        /// </summary>
        public ML_AffineCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_AffineCS)?
        /// </para>
        /// </summary>
        public ML_AffineCS ML_AffineCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_AffineCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_AffineCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_AffineCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_AffineCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_AffineCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_AffineCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_AffineCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_AffineCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_AffineCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_UserDefinedCS_TypeSchemaProvider")]
    public partial class ML_UserDefinedCS_Type : global::GeoSik.Ogc.Gml.V321.UserDefinedCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_UserDefinedCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_UserDefinedCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_UserDefinedCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_UserDefinedCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_UserDefinedCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_UserDefinedCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_UserDefinedCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_UserDefinedCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_UserDefinedCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_UserDefinedCS_PropertyTypeSchemaProvider")]
    public partial class ML_UserDefinedCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_UserDefinedCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_UserDefinedCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_UserDefinedCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_UserDefinedCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_UserDefinedCS)?
        /// </para>
        /// </summary>
        public ML_UserDefinedCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_UserDefinedCS)?
        /// </para>
        /// </summary>
        public ML_UserDefinedCS ML_UserDefinedCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_UserDefinedCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_UserDefinedCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_UserDefinedCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_UserDefinedCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_UserDefinedCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_UserDefinedCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_UserDefinedCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_UserDefinedCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_UserDefinedCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_VerticalCS_TypeSchemaProvider")]
    public partial class ML_VerticalCS_Type : global::GeoSik.Ogc.Gml.V321.VerticalCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_VerticalCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_VerticalCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_VerticalCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_VerticalCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_VerticalCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_VerticalCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_VerticalCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_VerticalCS_PropertyTypeSchemaProvider")]
    public partial class ML_VerticalCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_VerticalCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_VerticalCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_VerticalCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_VerticalCS)?
        /// </para>
        /// </summary>
        public ML_VerticalCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_VerticalCS)?
        /// </para>
        /// </summary>
        public ML_VerticalCS ML_VerticalCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_VerticalCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_VerticalCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_VerticalCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_VerticalCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_VerticalCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_VerticalCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_VerticalCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_VerticalCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_TimeCS_TypeSchemaProvider")]
    public partial class ML_TimeCS_Type : global::GeoSik.Ogc.Gml.V321.TimeCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_TimeCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_TimeCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_TimeCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_TimeCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TimeCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_TimeCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_TimeCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_TimeCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_TimeCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_TimeCS_PropertyTypeSchemaProvider")]
    public partial class ML_TimeCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_TimeCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_TimeCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_TimeCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_TimeCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_TimeCS)?
        /// </para>
        /// </summary>
        public ML_TimeCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_TimeCS)?
        /// </para>
        /// </summary>
        public ML_TimeCS ML_TimeCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_TimeCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_TimeCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_TimeCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TimeCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_TimeCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_TimeCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_TimeCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_TimeCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_TimeCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CylindricalCS_TypeSchemaProvider")]
    public partial class ML_CylindricalCS_Type : global::GeoSik.Ogc.Gml.V321.CylindricalCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CylindricalCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_CylindricalCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CylindricalCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_CylindricalCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CylindricalCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CylindricalCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CylindricalCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CylindricalCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_CylindricalCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CylindricalCS_PropertyTypeSchemaProvider")]
    public partial class ML_CylindricalCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_CylindricalCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_CylindricalCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_CylindricalCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_CylindricalCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_CylindricalCS)?
        /// </para>
        /// </summary>
        public ML_CylindricalCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_CylindricalCS)?
        /// </para>
        /// </summary>
        public ML_CylindricalCS ML_CylindricalCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_CylindricalCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_CylindricalCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_CylindricalCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CylindricalCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_CylindricalCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_CylindricalCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_CylindricalCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_CylindricalCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_CylindricalCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_SphericalCS_TypeSchemaProvider")]
    public partial class ML_SphericalCS_Type : global::GeoSik.Ogc.Gml.V321.SphericalCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_SphericalCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_SphericalCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_SphericalCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_SphericalCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_SphericalCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_SphericalCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_SphericalCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_SphericalCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_SphericalCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_SphericalCS_PropertyTypeSchemaProvider")]
    public partial class ML_SphericalCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_SphericalCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_SphericalCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_SphericalCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_SphericalCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_SphericalCS)?
        /// </para>
        /// </summary>
        public ML_SphericalCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_SphericalCS)?
        /// </para>
        /// </summary>
        public ML_SphericalCS ML_SphericalCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_SphericalCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_SphericalCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_SphericalCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_SphericalCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_SphericalCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_SphericalCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_SphericalCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_SphericalCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_SphericalCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_PolarCS_TypeSchemaProvider")]
    public partial class ML_PolarCS_Type : global::GeoSik.Ogc.Gml.V321.PolarCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_PolarCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_PolarCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_PolarCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_PolarCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PolarCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_PolarCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_PolarCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_PolarCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_PolarCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_PolarCS_PropertyTypeSchemaProvider")]
    public partial class ML_PolarCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_PolarCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_PolarCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_PolarCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_PolarCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_PolarCS)?
        /// </para>
        /// </summary>
        public ML_PolarCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_PolarCS)?
        /// </para>
        /// </summary>
        public ML_PolarCS ML_PolarCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_PolarCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_PolarCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_PolarCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PolarCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_PolarCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_PolarCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_PolarCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_PolarCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_PolarCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_LinearCS_TypeSchemaProvider")]
    public partial class ML_LinearCS_Type : global::GeoSik.Ogc.Gml.V321.LinearCSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CoordinateSystemAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_LinearCS_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_LinearCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_LinearCS_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("axis", "http://www.opengis.net/gml/3.2"), XName.Get("usesAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_LinearCS_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<CoordinateSystemAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<CoordinateSystemAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CoordinateSystemAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_LinearCS_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_LinearCS_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axis));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_LinearCS_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_LinearCS_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_LinearCS)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_LinearCS_PropertyTypeSchemaProvider")]
    public partial class ML_LinearCS_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_LinearCS_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_LinearCS_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_LinearCS_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_LinearCS", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_LinearCS)?
        /// </para>
        /// </summary>
        public ML_LinearCS_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_LinearCS)?
        /// </para>
        /// </summary>
        public ML_LinearCS ML_LinearCS
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_LinearCS", "http://www.isotc211.org/2005/gmx"));
                return ((ML_LinearCS)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_LinearCS", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_LinearCS_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_LinearCS_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_LinearCS", "http://www.isotc211.org/2005/gmx"), typeof(ML_LinearCS));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_LinearCS_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_LinearCS_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, semiMajorAxis, secondDefiningParameter, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_Ellipsoid_TypeSchemaProvider")]
    public partial class ML_Ellipsoid_Type : global::GeoSik.Ogc.Gml.V321.EllipsoidType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<EllipsoidAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_Ellipsoid_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_Ellipsoid_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_Ellipsoid_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("semiMajorAxis", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("secondDefiningParameter", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, semiMajorAxis, secondDefiningParameter, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_Ellipsoid_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, semiMajorAxis, secondDefiningParameter, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<EllipsoidAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<EllipsoidAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<EllipsoidAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<EllipsoidAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Ellipsoid_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_Ellipsoid_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("semiMajorAxis", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.semiMajorAxis));
            localElementDictionary.Add(XName.Get("secondDefiningParameter", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.secondDefiningParameter));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(EllipsoidAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_Ellipsoid_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_Ellipsoid_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_Ellipsoid)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_Ellipsoid_PropertyTypeSchemaProvider")]
    public partial class ML_Ellipsoid_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_Ellipsoid_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_Ellipsoid_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_Ellipsoid_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_Ellipsoid", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_Ellipsoid)?
        /// </para>
        /// </summary>
        public ML_Ellipsoid_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_Ellipsoid)?
        /// </para>
        /// </summary>
        public ML_Ellipsoid ML_Ellipsoid
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_Ellipsoid", "http://www.isotc211.org/2005/gmx"));
                return ((ML_Ellipsoid)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_Ellipsoid", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Ellipsoid_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_Ellipsoid_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_Ellipsoid", "http://www.isotc211.org/2005/gmx"), typeof(ML_Ellipsoid));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_Ellipsoid_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_Ellipsoid_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, greenwichLongitude, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_PrimeMeridian_TypeSchemaProvider")]
    public partial class ML_PrimeMeridian_Type : global::GeoSik.Ogc.Gml.V321.PrimeMeridianType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<PrimeMeridianAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_PrimeMeridian_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_PrimeMeridian_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_PrimeMeridian_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("greenwichLongitude", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, greenwichLongitude, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_PrimeMeridian_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, greenwichLongitude, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<PrimeMeridianAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<PrimeMeridianAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<PrimeMeridianAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<PrimeMeridianAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PrimeMeridian_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_PrimeMeridian_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("greenwichLongitude", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.greenwichLongitude));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(PrimeMeridianAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_PrimeMeridian_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_PrimeMeridian_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_PrimeMeridian)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_PrimeMeridian_PropertyTypeSchemaProvider")]
    public partial class ML_PrimeMeridian_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_PrimeMeridian_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_PrimeMeridian_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_PrimeMeridian_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_PrimeMeridian", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_PrimeMeridian)?
        /// </para>
        /// </summary>
        public ML_PrimeMeridian_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_PrimeMeridian)?
        /// </para>
        /// </summary>
        public ML_PrimeMeridian ML_PrimeMeridian
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_PrimeMeridian", "http://www.isotc211.org/2005/gmx"));
                return ((ML_PrimeMeridian)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_PrimeMeridian", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PrimeMeridian_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_PrimeMeridian_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_PrimeMeridian", "http://www.isotc211.org/2005/gmx"), typeof(ML_PrimeMeridian));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_PrimeMeridian_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_PrimeMeridian_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, origin, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_TemporalDatum_TypeSchemaProvider")]
    public partial class ML_TemporalDatum_Type : global::GeoSik.Ogc.Gml.V321.TemporalDatumType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DatumAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_TemporalDatum_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_TemporalDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_TemporalDatum_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("origin", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, origin, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_TemporalDatum_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, origin, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<DatumAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<DatumAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<DatumAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TemporalDatum_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_TemporalDatum_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("origin", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.origin));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(DatumAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_TemporalDatum_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_TemporalDatum_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_TemporalDatum)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_TemporalDatum_PropertyTypeSchemaProvider")]
    public partial class ML_TemporalDatum_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_TemporalDatum_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_TemporalDatum_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_TemporalDatum_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_TemporalDatum", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_TemporalDatum)?
        /// </para>
        /// </summary>
        public ML_TemporalDatum_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_TemporalDatum)?
        /// </para>
        /// </summary>
        public ML_TemporalDatum ML_TemporalDatum
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_TemporalDatum", "http://www.isotc211.org/2005/gmx"));
                return ((ML_TemporalDatum)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_TemporalDatum", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TemporalDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_TemporalDatum_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_TemporalDatum", "http://www.isotc211.org/2005/gmx"), typeof(ML_TemporalDatum));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_TemporalDatum_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_TemporalDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_VerticalDatum_TypeSchemaProvider")]
    public partial class ML_VerticalDatum_Type : global::GeoSik.Ogc.Gml.V321.VerticalDatumType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DatumAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_VerticalDatum_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_VerticalDatum_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), XName.Get("anchorPoint", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_VerticalDatum_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<DatumAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<DatumAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<DatumAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalDatum_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_VerticalDatum_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.anchorDefinition));
            localElementDictionary.Add(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.realizationEpoch));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(DatumAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_VerticalDatum_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_VerticalDatum_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_VerticalDatum)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_VerticalDatum_PropertyTypeSchemaProvider")]
    public partial class ML_VerticalDatum_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_VerticalDatum_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalDatum_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_VerticalDatum_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_VerticalDatum", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_VerticalDatum)?
        /// </para>
        /// </summary>
        public ML_VerticalDatum_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_VerticalDatum)?
        /// </para>
        /// </summary>
        public ML_VerticalDatum ML_VerticalDatum
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_VerticalDatum", "http://www.isotc211.org/2005/gmx"));
                return ((ML_VerticalDatum)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_VerticalDatum", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_VerticalDatum_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_VerticalDatum", "http://www.isotc211.org/2005/gmx"), typeof(ML_VerticalDatum));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_VerticalDatum_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_VerticalDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, pixelInCell, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ImageDatum_TypeSchemaProvider")]
    public partial class ML_ImageDatum_Type : global::GeoSik.Ogc.Gml.V321.ImageDatumType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DatumAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_ImageDatum_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_ImageDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ImageDatum_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), XName.Get("anchorPoint", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("pixelInCell", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, pixelInCell, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_ImageDatum_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, pixelInCell, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<DatumAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<DatumAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<DatumAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ImageDatum_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ImageDatum_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.anchorDefinition));
            localElementDictionary.Add(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.realizationEpoch));
            localElementDictionary.Add(XName.Get("pixelInCell", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.pixelInCell));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(DatumAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_ImageDatum_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ImageDatum_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_ImageDatum)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ImageDatum_PropertyTypeSchemaProvider")]
    public partial class ML_ImageDatum_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_ImageDatum_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_ImageDatum_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ImageDatum_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_ImageDatum", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_ImageDatum)?
        /// </para>
        /// </summary>
        public ML_ImageDatum_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_ImageDatum)?
        /// </para>
        /// </summary>
        public ML_ImageDatum ML_ImageDatum
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_ImageDatum", "http://www.isotc211.org/2005/gmx"));
                return ((ML_ImageDatum)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_ImageDatum", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ImageDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ImageDatum_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_ImageDatum", "http://www.isotc211.org/2005/gmx"), typeof(ML_ImageDatum));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_ImageDatum_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ImageDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_EngineeringDatum_TypeSchemaProvider")]
    public partial class ML_EngineeringDatum_Type : global::GeoSik.Ogc.Gml.V321.EngineeringDatumType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DatumAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_EngineeringDatum_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_EngineeringDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_EngineeringDatum_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), XName.Get("anchorPoint", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_EngineeringDatum_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<DatumAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<DatumAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<DatumAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EngineeringDatum_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_EngineeringDatum_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.anchorDefinition));
            localElementDictionary.Add(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.realizationEpoch));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(DatumAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_EngineeringDatum_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_EngineeringDatum_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_EngineeringDatum)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_EngineeringDatum_PropertyTypeSchemaProvider")]
    public partial class ML_EngineeringDatum_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_EngineeringDatum_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_EngineeringDatum_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_EngineeringDatum_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_EngineeringDatum", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_EngineeringDatum)?
        /// </para>
        /// </summary>
        public ML_EngineeringDatum_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_EngineeringDatum)?
        /// </para>
        /// </summary>
        public ML_EngineeringDatum ML_EngineeringDatum
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_EngineeringDatum", "http://www.isotc211.org/2005/gmx"));
                return ((ML_EngineeringDatum)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_EngineeringDatum", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EngineeringDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_EngineeringDatum_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_EngineeringDatum", "http://www.isotc211.org/2005/gmx"), typeof(ML_EngineeringDatum));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_EngineeringDatum_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_EngineeringDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, primeMeridian, ellipsoid, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_GeodeticDatum_TypeSchemaProvider")]
    public partial class ML_GeodeticDatum_Type : global::GeoSik.Ogc.Gml.V321.GeodeticDatumType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<DatumAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_GeodeticDatum_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_GeodeticDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_GeodeticDatum_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), XName.Get("anchorPoint", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("primeMeridian", "http://www.opengis.net/gml/3.2"), XName.Get("usesPrimeMeridian", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("ellipsoid", "http://www.opengis.net/gml/3.2"), XName.Get("usesEllipsoid", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, primeMeridian, ellipsoid, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_GeodeticDatum_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, primeMeridian, ellipsoid, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<DatumAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<DatumAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<DatumAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_GeodeticDatum_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_GeodeticDatum_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.anchorDefinition));
            localElementDictionary.Add(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.realizationEpoch));
            localElementDictionary.Add(XName.Get("primeMeridian", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.primeMeridian));
            localElementDictionary.Add(XName.Get("ellipsoid", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.ellipsoid));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(DatumAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_GeodeticDatum_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_GeodeticDatum_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_GeodeticDatum)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_GeodeticDatum_PropertyTypeSchemaProvider")]
    public partial class ML_GeodeticDatum_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_GeodeticDatum_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_GeodeticDatum_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_GeodeticDatum_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_GeodeticDatum", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_GeodeticDatum)?
        /// </para>
        /// </summary>
        public ML_GeodeticDatum_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_GeodeticDatum)?
        /// </para>
        /// </summary>
        public ML_GeodeticDatum ML_GeodeticDatum
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_GeodeticDatum", "http://www.isotc211.org/2005/gmx"));
                return ((ML_GeodeticDatum)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_GeodeticDatum", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_GeodeticDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_GeodeticDatum_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_GeodeticDatum", "http://www.isotc211.org/2005/gmx"), typeof(ML_GeodeticDatum));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_GeodeticDatum_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_GeodeticDatum_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, coordOperation+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ConcatenatedOperation_TypeSchemaProvider")]
    public partial class ML_ConcatenatedOperation_Type : global::GeoSik.Ogc.Gml.V321.ConcatenatedOperationType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<OperationAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_ConcatenatedOperation_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_ConcatenatedOperation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ConcatenatedOperation_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("operationVersion", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("sourceCRS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("targetCRS", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("coordOperation", "http://www.opengis.net/gml/3.2"), XName.Get("usesSingleOperation", "http://www.opengis.net/gml/3.2"), XName.Get("usesOperation", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, coordOperation+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_ConcatenatedOperation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, coordOperation+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<OperationAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<OperationAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<OperationAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ConcatenatedOperation_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ConcatenatedOperation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("operationVersion", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.operationVersion));
            localElementDictionary.Add(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordinateOperationAccuracy));
            localElementDictionary.Add(XName.Get("sourceCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.sourceCRS));
            localElementDictionary.Add(XName.Get("targetCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.targetCRS));
            localElementDictionary.Add(XName.Get("coordOperation", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordOperation));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(OperationAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_ConcatenatedOperation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ConcatenatedOperation_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_ConcatenatedOperation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_ConcatenatedOperation_PropertyTypeSchemaProvider")]
    public partial class ML_ConcatenatedOperation_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_ConcatenatedOperation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_ConcatenatedOperation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_ConcatenatedOperation_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_ConcatenatedOperation", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_ConcatenatedOperation)?
        /// </para>
        /// </summary>
        public ML_ConcatenatedOperation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_ConcatenatedOperation)?
        /// </para>
        /// </summary>
        public ML_ConcatenatedOperation ML_ConcatenatedOperation
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_ConcatenatedOperation", "http://www.isotc211.org/2005/gmx"));
                return ((ML_ConcatenatedOperation)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_ConcatenatedOperation", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ConcatenatedOperation_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_ConcatenatedOperation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_ConcatenatedOperation", "http://www.isotc211.org/2005/gmx"), typeof(ML_ConcatenatedOperation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_ConcatenatedOperation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_ConcatenatedOperation_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, modifiedCoordinate+, coordOperation, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_PassThroughOperation_TypeSchemaProvider")]
    public partial class ML_PassThroughOperation_Type : global::GeoSik.Ogc.Gml.V321.PassThroughOperationType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<OperationAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_PassThroughOperation_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_PassThroughOperation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_PassThroughOperation_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("operationVersion", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("sourceCRS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("targetCRS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("modifiedCoordinate", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("coordOperation", "http://www.opengis.net/gml/3.2"), XName.Get("usesSingleOperation", "http://www.opengis.net/gml/3.2"), XName.Get("usesOperation", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, modifiedCoordinate+, coordOperation, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_PassThroughOperation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, modifiedCoordinate+, coordOperation, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<OperationAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<OperationAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<OperationAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PassThroughOperation_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_PassThroughOperation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("operationVersion", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.operationVersion));
            localElementDictionary.Add(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordinateOperationAccuracy));
            localElementDictionary.Add(XName.Get("sourceCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.sourceCRS));
            localElementDictionary.Add(XName.Get("targetCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.targetCRS));
            localElementDictionary.Add(XName.Get("modifiedCoordinate", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.modifiedCoordinate));
            localElementDictionary.Add(XName.Get("coordOperation", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordOperation));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(OperationAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_PassThroughOperation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_PassThroughOperation_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_PassThroughOperation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_PassThroughOperation_PropertyTypeSchemaProvider")]
    public partial class ML_PassThroughOperation_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_PassThroughOperation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_PassThroughOperation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_PassThroughOperation_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_PassThroughOperation", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_PassThroughOperation)?
        /// </para>
        /// </summary>
        public ML_PassThroughOperation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_PassThroughOperation)?
        /// </para>
        /// </summary>
        public ML_PassThroughOperation ML_PassThroughOperation
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_PassThroughOperation", "http://www.isotc211.org/2005/gmx"));
                return ((ML_PassThroughOperation)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_PassThroughOperation", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PassThroughOperation_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_PassThroughOperation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_PassThroughOperation", "http://www.isotc211.org/2005/gmx"), typeof(ML_PassThroughOperation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_PassThroughOperation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_PassThroughOperation_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion, coordinateOperationAccuracy*, sourceCRS, targetCRS, method, parameterValue*, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_Transformation_TypeSchemaProvider")]
    public partial class ML_Transformation_Type : global::GeoSik.Ogc.Gml.V321.TransformationType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<OperationAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_Transformation_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_Transformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_Transformation_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("operationVersion", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("sourceCRS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("targetCRS", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("method", "http://www.opengis.net/gml/3.2"), XName.Get("usesMethod", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("parameterValue", "http://www.opengis.net/gml/3.2"), XName.Get("usesValue", "http://www.opengis.net/gml/3.2"), XName.Get("includesValue", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion, coordinateOperationAccuracy*, sourceCRS, targetCRS, method, parameterValue*, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_Transformation_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion, coordinateOperationAccuracy*, sourceCRS, targetCRS, method, parameterValue*, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<OperationAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<OperationAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<OperationAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Transformation_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_Transformation_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("operationVersion", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.operationVersion));
            localElementDictionary.Add(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordinateOperationAccuracy));
            localElementDictionary.Add(XName.Get("sourceCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.sourceCRS));
            localElementDictionary.Add(XName.Get("targetCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.targetCRS));
            localElementDictionary.Add(XName.Get("method", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.method));
            localElementDictionary.Add(XName.Get("parameterValue", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.parameterValue));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(OperationAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_Transformation_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_Transformation_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_Transformation)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_Transformation_PropertyTypeSchemaProvider")]
    public partial class ML_Transformation_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_Transformation_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_Transformation_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_Transformation_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_Transformation", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_Transformation)?
        /// </para>
        /// </summary>
        public ML_Transformation_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_Transformation)?
        /// </para>
        /// </summary>
        public ML_Transformation ML_Transformation
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_Transformation", "http://www.isotc211.org/2005/gmx"));
                return ((ML_Transformation)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_Transformation", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Transformation_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_Transformation_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_Transformation", "http://www.isotc211.org/2005/gmx"), typeof(ML_Transformation));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_Transformation_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_Transformation_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, coordinateOperationAccuracy*, method, parameterValue*, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_Conversion_TypeSchemaProvider")]
    public partial class ML_Conversion_Type : global::GeoSik.Ogc.Gml.V321.ConversionType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<OperationAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_Conversion_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_Conversion_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_Conversion_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("method", "http://www.opengis.net/gml/3.2"), XName.Get("usesMethod", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("parameterValue", "http://www.opengis.net/gml/3.2"), XName.Get("usesValue", "http://www.opengis.net/gml/3.2"), XName.Get("includesValue", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, coordinateOperationAccuracy*, method, parameterValue*, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_Conversion_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, coordinateOperationAccuracy*, method, parameterValue*, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<OperationAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<OperationAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<OperationAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Conversion_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_Conversion_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordinateOperationAccuracy));
            localElementDictionary.Add(XName.Get("method", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.method));
            localElementDictionary.Add(XName.Get("parameterValue", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.parameterValue));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(OperationAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_Conversion_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_Conversion_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_Conversion)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_Conversion_PropertyTypeSchemaProvider")]
    public partial class ML_Conversion_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_Conversion_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_Conversion_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_Conversion_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_Conversion", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_Conversion)?
        /// </para>
        /// </summary>
        public ML_Conversion_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_Conversion)?
        /// </para>
        /// </summary>
        public ML_Conversion ML_Conversion
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_Conversion", "http://www.isotc211.org/2005/gmx"));
                return ((ML_Conversion)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_Conversion", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Conversion_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_Conversion_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_Conversion", "http://www.isotc211.org/2005/gmx"), typeof(ML_Conversion));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_Conversion_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_Conversion_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (formulaCitation | formula), sourceDimensions?, targetDimensions?, parameter*, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_OperationMethod_TypeSchemaProvider")]
    public partial class ML_OperationMethod_Type : global::GeoSik.Ogc.Gml.V321.OperationMethodType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<OperationMethodAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        public static explicit operator ML_OperationMethod_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationMethod_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_OperationMethod_Type()
        {
            BuildElementDictionary();
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (formulaCitation | formula), sourceDimensions?, targetDimensions?, parameter*, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_OperationMethod_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (formulaCitation | formula), sourceDimensions?, targetDimensions?, parameter*, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationMethodAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<OperationMethodAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<OperationMethodAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<OperationMethodAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationMethod_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_OperationMethod_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("formulaCitation", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.formulaCitation));
            localElementDictionary.Add(XName.Get("formula", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.formula));
            localElementDictionary.Add(XName.Get("sourceDimensions", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.sourceDimensions));
            localElementDictionary.Add(XName.Get("targetDimensions", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.targetDimensions));
            localElementDictionary.Add(XName.Get("parameter", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.parameter));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(OperationMethodAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName ML_OperationMethod_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_OperationMethod_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_OperationMethod)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_OperationMethod_PropertyTypeSchemaProvider")]
    public partial class ML_OperationMethod_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_OperationMethod_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationMethod_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_OperationMethod_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_OperationMethod", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_OperationMethod)?
        /// </para>
        /// </summary>
        public ML_OperationMethod_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_OperationMethod)?
        /// </para>
        /// </summary>
        public ML_OperationMethod ML_OperationMethod
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_OperationMethod", "http://www.isotc211.org/2005/gmx"));
                return ((ML_OperationMethod)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_OperationMethod", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationMethod_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_OperationMethod_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_OperationMethod", "http://www.isotc211.org/2005/gmx"), typeof(ML_OperationMethod));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_OperationMethod_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_OperationMethod_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, maximumOccurs?, parameter+, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_OperationParameterGroup_TypeSchemaProvider")]
    public partial class ML_OperationParameterGroup_Type : global::GeoSik.Ogc.Gml.V321.OperationParameterGroupType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<OperationParameterAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_OperationParameterGroup_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationParameterGroup_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_OperationParameterGroup_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("minimumOccurs", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("maximumOccurs", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("parameter", "http://www.opengis.net/gml/3.2"), XName.Get("usesParameter", "http://www.opengis.net/gml/3.2"), XName.Get("includesParameter", "http://www.opengis.net/gml/3.2"), XName.Get("generalOperationParameter", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, maximumOccurs?, parameter+, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_OperationParameterGroup_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, maximumOccurs?, parameter+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationParameterAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<OperationParameterAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<OperationParameterAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<OperationParameterAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationParameterGroup_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_OperationParameterGroup_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("minimumOccurs", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.minimumOccurs));
            localElementDictionary.Add(XName.Get("maximumOccurs", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.maximumOccurs));
            localElementDictionary.Add(XName.Get("parameter", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.parameter));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(OperationParameterAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_OperationParameterGroup_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_OperationParameterGroup_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_OperationParameterGroup)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_OperationParameterGroup_PropertyTypeSchemaProvider")]
    public partial class ML_OperationParameterGroup_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_OperationParameterGroup_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationParameterGroup_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_OperationParameterGroup_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_OperationParameterGroup", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_OperationParameterGroup)?
        /// </para>
        /// </summary>
        public ML_OperationParameterGroup_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_OperationParameterGroup)?
        /// </para>
        /// </summary>
        public ML_OperationParameterGroup ML_OperationParameterGroup
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_OperationParameterGroup", "http://www.isotc211.org/2005/gmx"));
                return ((ML_OperationParameterGroup)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_OperationParameterGroup", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationParameterGroup_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_OperationParameterGroup_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_OperationParameterGroup", "http://www.isotc211.org/2005/gmx"), typeof(ML_OperationParameterGroup));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_OperationParameterGroup_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_OperationParameterGroup_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, alternativeExpression+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_OperationParameter_TypeSchemaProvider")]
    public partial class ML_OperationParameter_Type : global::GeoSik.Ogc.Gml.V321.OperationParameterType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<OperationParameterAlt_PropertyType> alternativeExpressionField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_OperationParameter_Type(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationParameter_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_OperationParameter_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("minimumOccurs", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, alternativeExpression+)
        /// </para>
        /// </summary>
        public ML_OperationParameter_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationParameterAlt_PropertyType> alternativeExpression
        {
            get
            {
                if ((this.alternativeExpressionField == null))
                {
                    this.alternativeExpressionField = new XTypedList<OperationParameterAlt_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                }
                return this.alternativeExpressionField;
            }
            set
            {
                if ((value == null))
                {
                    this.alternativeExpressionField = null;
                }
                else
                {
                    if ((this.alternativeExpressionField == null))
                    {
                        this.alternativeExpressionField = XTypedList<OperationParameterAlt_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<OperationParameterAlt_PropertyType>(this.alternativeExpressionField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationParameter_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_OperationParameter_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("minimumOccurs", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.minimumOccurs));
            localElementDictionary.Add(XName.Get("alternativeExpression", "http://www.isotc211.org/2005/gmx"), typeof(OperationParameterAlt_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_OperationParameter_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_OperationParameter_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (ML_OperationParameter)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_OperationParameter_PropertyTypeSchemaProvider")]
    public partial class ML_OperationParameter_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator ML_OperationParameter_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationParameter_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static ML_OperationParameter_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("ML_OperationParameter", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (ML_OperationParameter)?
        /// </para>
        /// </summary>
        public ML_OperationParameter_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (ML_OperationParameter)?
        /// </para>
        /// </summary>
        public ML_OperationParameter ML_OperationParameter
        {
            get
            {
                XElement x = this.GetElement(XName.Get("ML_OperationParameter", "http://www.isotc211.org/2005/gmx"));
                return ((ML_OperationParameter)(x));
            }
            set
            {
                this.SetElement(XName.Get("ML_OperationParameter", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationParameter_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<ML_OperationParameter_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("ML_OperationParameter", "http://www.isotc211.org/2005/gmx"), typeof(ML_OperationParameter));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName ML_OperationParameter_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("ML_OperationParameter_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CrsAlt_TypeSchemaProvider")]
    public partial class CrsAlt_Type : global::GeoSik.Ogc.Gml.V321.AbstractCRSType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CrsAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<CrsAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CrsAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, locale)
        /// </para>
        /// </summary>
        public CrsAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CrsAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CrsAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CrsAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CrsAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CrsAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CrsAlt_PropertyTypeSchemaProvider")]
    public partial class CrsAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CrsAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CrsAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CrsAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CrsAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CrsAlt)?
        /// </para>
        /// </summary>
        public CrsAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CrsAlt)?
        /// </para>
        /// </summary>
        public CrsAlt CrsAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("CrsAlt", "http://www.isotc211.org/2005/gmx"));
                return ((CrsAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("CrsAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CrsAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CrsAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CrsAlt", "http://www.isotc211.org/2005/gmx"), typeof(CrsAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CrsAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CrsAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CoordinateSystemAlt_TypeSchemaProvider")]
    public partial class CoordinateSystemAlt_Type : global::GeoSik.Ogc.Gml.V321.IdentifiedObjectType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CoordinateSystemAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<CoordinateSystemAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CoordinateSystemAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public CoordinateSystemAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string aggregationType
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("aggregationType", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("aggregationType", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CoordinateSystemAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CoordinateSystemAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CoordinateSystemAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CoordinateSystemAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CoordinateSystemAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CoordinateSystemAlt_PropertyTypeSchemaProvider")]
    public partial class CoordinateSystemAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CoordinateSystemAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CoordinateSystemAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CoordinateSystemAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CoordinateSystemAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CoordinateSystemAlt)?
        /// </para>
        /// </summary>
        public CoordinateSystemAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CoordinateSystemAlt)?
        /// </para>
        /// </summary>
        public CoordinateSystemAlt CoordinateSystemAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("CoordinateSystemAlt", "http://www.isotc211.org/2005/gmx"));
                return ((CoordinateSystemAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("CoordinateSystemAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CoordinateSystemAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CoordinateSystemAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CoordinateSystemAlt", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CoordinateSystemAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CoordinateSystemAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axisAbbrev, axisDirection, minimumValue?, maximumValue?, rangeMeaning?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CoordinateSystemAxisAlt_TypeSchemaProvider")]
    public partial class CoordinateSystemAxisAlt_Type : global::GeoSik.Ogc.Gml.V321.CoordinateSystemAxisType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CoordinateSystemAxisAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<CoordinateSystemAxisAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CoordinateSystemAxisAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("axisAbbrev", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("axisDirection", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("minimumValue", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("maximumValue", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("rangeMeaning", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axisAbbrev, axisDirection, minimumValue?, maximumValue?, rangeMeaning?, locale)
        /// </para>
        /// </summary>
        public CoordinateSystemAxisAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axisAbbrev, axisDirection, minimumValue?, maximumValue?, rangeMeaning?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CoordinateSystemAxisAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CoordinateSystemAxisAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("axisAbbrev", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axisAbbrev));
            localElementDictionary.Add(XName.Get("axisDirection", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.axisDirection));
            localElementDictionary.Add(XName.Get("minimumValue", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.minimumValue));
            localElementDictionary.Add(XName.Get("maximumValue", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.maximumValue));
            localElementDictionary.Add(XName.Get("rangeMeaning", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.rangeMeaning));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CoordinateSystemAxisAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CoordinateSystemAxisAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CoordinateSystemAxisAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CoordinateSystemAxisAlt_PropertyTypeSchemaProvider")]
    public partial class CoordinateSystemAxisAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CoordinateSystemAxisAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CoordinateSystemAxisAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CoordinateSystemAxisAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CoordinateSystemAxisAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CoordinateSystemAxisAlt)?
        /// </para>
        /// </summary>
        public CoordinateSystemAxisAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CoordinateSystemAxisAlt)?
        /// </para>
        /// </summary>
        public CoordinateSystemAxisAlt CoordinateSystemAxisAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("CoordinateSystemAxisAlt", "http://www.isotc211.org/2005/gmx"));
                return ((CoordinateSystemAxisAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("CoordinateSystemAxisAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CoordinateSystemAxisAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CoordinateSystemAxisAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CoordinateSystemAxisAlt", "http://www.isotc211.org/2005/gmx"), typeof(CoordinateSystemAxisAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CoordinateSystemAxisAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CoordinateSystemAxisAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DatumAlt_TypeSchemaProvider")]
    public partial class DatumAlt_Type : global::GeoSik.Ogc.Gml.V321.AbstractDatumType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DatumAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<DatumAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DatumAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new SubstitutedContentModelEntity(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), XName.Get("anchorPoint", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, locale)
        /// </para>
        /// </summary>
        public DatumAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DatumAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DatumAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("anchorDefinition", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.anchorDefinition));
            localElementDictionary.Add(XName.Get("realizationEpoch", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.realizationEpoch));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DatumAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DatumAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (DatumAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DatumAlt_PropertyTypeSchemaProvider")]
    public partial class DatumAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator DatumAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<DatumAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static DatumAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("DatumAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (DatumAlt)?
        /// </para>
        /// </summary>
        public DatumAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (DatumAlt)?
        /// </para>
        /// </summary>
        public DatumAlt DatumAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("DatumAlt", "http://www.isotc211.org/2005/gmx"));
                return ((DatumAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("DatumAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DatumAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<DatumAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("DatumAlt", "http://www.isotc211.org/2005/gmx"), typeof(DatumAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName DatumAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("DatumAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EllipsoidAlt_TypeSchemaProvider")]
    public partial class EllipsoidAlt_Type : global::GeoSik.Ogc.Gml.V321.IdentifiedObjectType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EllipsoidAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<EllipsoidAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EllipsoidAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public EllipsoidAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EllipsoidAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EllipsoidAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EllipsoidAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EllipsoidAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (EllipsoidAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EllipsoidAlt_PropertyTypeSchemaProvider")]
    public partial class EllipsoidAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator EllipsoidAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<EllipsoidAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static EllipsoidAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("EllipsoidAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (EllipsoidAlt)?
        /// </para>
        /// </summary>
        public EllipsoidAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (EllipsoidAlt)?
        /// </para>
        /// </summary>
        public EllipsoidAlt EllipsoidAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("EllipsoidAlt", "http://www.isotc211.org/2005/gmx"));
                return ((EllipsoidAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("EllipsoidAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EllipsoidAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<EllipsoidAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("EllipsoidAlt", "http://www.isotc211.org/2005/gmx"), typeof(EllipsoidAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName EllipsoidAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("EllipsoidAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PrimeMeridianAlt_TypeSchemaProvider")]
    public partial class PrimeMeridianAlt_Type : global::GeoSik.Ogc.Gml.V321.IdentifiedObjectType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator PrimeMeridianAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<PrimeMeridianAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static PrimeMeridianAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public PrimeMeridianAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PrimeMeridianAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<PrimeMeridianAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName PrimeMeridianAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("PrimeMeridianAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (PrimeMeridianAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PrimeMeridianAlt_PropertyTypeSchemaProvider")]
    public partial class PrimeMeridianAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator PrimeMeridianAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<PrimeMeridianAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static PrimeMeridianAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("PrimeMeridianAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (PrimeMeridianAlt)?
        /// </para>
        /// </summary>
        public PrimeMeridianAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (PrimeMeridianAlt)?
        /// </para>
        /// </summary>
        public PrimeMeridianAlt PrimeMeridianAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("PrimeMeridianAlt", "http://www.isotc211.org/2005/gmx"));
                return ((PrimeMeridianAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("PrimeMeridianAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PrimeMeridianAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<PrimeMeridianAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("PrimeMeridianAlt", "http://www.isotc211.org/2005/gmx"), typeof(PrimeMeridianAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName PrimeMeridianAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("PrimeMeridianAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationAlt_TypeSchemaProvider")]
    public partial class OperationAlt_Type : global::GeoSik.Ogc.Gml.V321.AbstractCoordinateOperationType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator OperationAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<OperationAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static OperationAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("scope", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("operationVersion", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("sourceCRS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("targetCRS", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, locale)
        /// </para>
        /// </summary>
        public OperationAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<OperationAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("domainOfValidity", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.domainOfValidity));
            localElementDictionary.Add(XName.Get("scope", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.scope));
            localElementDictionary.Add(XName.Get("operationVersion", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.operationVersion));
            localElementDictionary.Add(XName.Get("coordinateOperationAccuracy", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.coordinateOperationAccuracy));
            localElementDictionary.Add(XName.Get("sourceCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.sourceCRS));
            localElementDictionary.Add(XName.Get("targetCRS", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.targetCRS));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName OperationAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("OperationAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (OperationAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationAlt_PropertyTypeSchemaProvider")]
    public partial class OperationAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator OperationAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<OperationAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static OperationAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("OperationAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (OperationAlt)?
        /// </para>
        /// </summary>
        public OperationAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (OperationAlt)?
        /// </para>
        /// </summary>
        public OperationAlt OperationAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("OperationAlt", "http://www.isotc211.org/2005/gmx"));
                return ((OperationAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("OperationAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<OperationAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("OperationAlt", "http://www.isotc211.org/2005/gmx"), typeof(OperationAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName OperationAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("OperationAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationMethodAlt_TypeSchemaProvider")]
    public partial class OperationMethodAlt_Type : global::GeoSik.Ogc.Gml.V321.IdentifiedObjectType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator OperationMethodAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<OperationMethodAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static OperationMethodAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public OperationMethodAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationMethodAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<OperationMethodAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName OperationMethodAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("OperationMethodAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (OperationMethodAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationMethodAlt_PropertyTypeSchemaProvider")]
    public partial class OperationMethodAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator OperationMethodAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<OperationMethodAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static OperationMethodAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("OperationMethodAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (OperationMethodAlt)?
        /// </para>
        /// </summary>
        public OperationMethodAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (OperationMethodAlt)?
        /// </para>
        /// </summary>
        public OperationMethodAlt OperationMethodAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("OperationMethodAlt", "http://www.isotc211.org/2005/gmx"));
                return ((OperationMethodAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("OperationMethodAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationMethodAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<OperationMethodAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("OperationMethodAlt", "http://www.isotc211.org/2005/gmx"), typeof(OperationMethodAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName OperationMethodAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("OperationMethodAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// <para>
    /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, locale)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationParameterAlt_TypeSchemaProvider")]
    public partial class OperationParameterAlt_Type : global::GeoSik.Ogc.Gml.V321.OperationParameterType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator OperationParameterAlt_Type(XElement xe) { return XTypedServices.ToXTypedElement<OperationParameterAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static OperationParameterAlt_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("description", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("identifier", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("name", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("remarks", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("minimumOccurs", "http://www.opengis.net/gml/3.2")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, locale)
        /// </para>
        /// </summary>
        public OperationParameterAlt_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                XElement x = this.GetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("codeSpace", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("codeSpace", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationParameterAlt_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<OperationParameterAlt_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("metaDataProperty", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.metaDataProperty));
            localElementDictionary.Add(XName.Get("description", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.description));
            localElementDictionary.Add(XName.Get("descriptionReference", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.descriptionReference));
            localElementDictionary.Add(XName.Get("identifier", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.identifier));
            localElementDictionary.Add(XName.Get("name", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.name));
            localElementDictionary.Add(XName.Get("remarks", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.remarks));
            localElementDictionary.Add(XName.Get("minimumOccurs", "http://www.opengis.net/gml/3.2"), typeof(GeoSik.Ogc.Gml.V321.minimumOccurs));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName OperationParameterAlt_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("OperationParameterAlt_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (OperationParameterAlt)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationParameterAlt_PropertyTypeSchemaProvider")]
    public partial class OperationParameterAlt_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator OperationParameterAlt_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<OperationParameterAlt_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static OperationParameterAlt_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("OperationParameterAlt", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (OperationParameterAlt)?
        /// </para>
        /// </summary>
        public OperationParameterAlt_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (OperationParameterAlt)?
        /// </para>
        /// </summary>
        public OperationParameterAlt OperationParameterAlt
        {
            get
            {
                XElement x = this.GetElement(XName.Get("OperationParameterAlt", "http://www.isotc211.org/2005/gmx"));
                return ((OperationParameterAlt)(x));
            }
            set
            {
                this.SetElement(XName.Get("OperationParameterAlt", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationParameterAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<OperationParameterAlt_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("OperationParameterAlt", "http://www.isotc211.org/2005/gmx"), typeof(OperationParameterAlt));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName OperationParameterAlt_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("OperationParameterAlt_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractCT_Catalogue_TypeSchemaProvider")]
    public abstract partial class AbstractCT_Catalogue_Type : global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> scopeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> fieldOfApplicationField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType> localeField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_Catalogue_PropertyType> subCatalogueField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractCT_Catalogue_Type(XElement xe) { return (AbstractCT_Catalogue_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractCT_Catalogue_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("scope", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("language", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public AbstractCT_Catalogue_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                XElement x = this.GetElement(XName.Get("name", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("name", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> scope
        {
            get
            {
                if ((this.scopeField == null))
                {
                    this.scopeField = new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("scope", "http://www.isotc211.org/2005/gmx"));
                }
                return this.scopeField;
            }
            set
            {
                if ((value == null))
                {
                    this.scopeField = null;
                }
                else
                {
                    if ((this.scopeField == null))
                    {
                        this.scopeField = XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("scope", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.scopeField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> fieldOfApplication
        {
            get
            {
                if ((this.fieldOfApplicationField == null))
                {
                    this.fieldOfApplicationField = new XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx"));
                }
                return this.fieldOfApplicationField;
            }
            set
            {
                if ((value == null))
                {
                    this.fieldOfApplicationField = null;
                }
                else
                {
                    if ((this.fieldOfApplicationField == null))
                    {
                        this.fieldOfApplicationField = XTypedList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType>(this.fieldOfApplicationField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType versionNumber
        {
            get
            {
                XElement x = this.GetElement(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType versionDate
        {
            get
            {
                XElement x = this.GetElement(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gco.Date_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType language
        {
            get
            {
                XElement x = this.GetElement(XName.Get("language", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("language", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.MD_CharacterSetCode_PropertyType characterSet
        {
            get
            {
                XElement x = this.GetElement(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.MD_CharacterSetCode_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType> locale
        {
            get
            {
                if ((this.localeField == null))
                {
                    this.localeField = new XTypedList<GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                }
                return this.localeField;
            }
            set
            {
                if ((value == null))
                {
                    this.localeField = null;
                }
                else
                {
                    if ((this.localeField == null))
                    {
                        this.localeField = XTypedList<GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("locale", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType>(this.localeField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public IList<CT_Catalogue_PropertyType> subCatalogue
        {
            get
            {
                if ((this.subCatalogueField == null))
                {
                    this.subCatalogueField = new XTypedList<CT_Catalogue_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx"));
                }
                return this.subCatalogueField;
            }
            set
            {
                if ((value == null))
                {
                    this.subCatalogueField = null;
                }
                else
                {
                    if ((this.subCatalogueField == null))
                    {
                        this.subCatalogueField = XTypedList<CT_Catalogue_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_Catalogue_PropertyType>(this.subCatalogueField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractCT_Catalogue_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("scope", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.Date_PropertyType));
            localElementDictionary.Add(XName.Get("language", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.MD_CharacterSetCode_PropertyType));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
            localElementDictionary.Add(XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_Catalogue_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractCT_Catalogue_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractCT_Catalogue_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractCT_Catalogue)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_Catalogue_PropertyTypeSchemaProvider")]
    public partial class CT_Catalogue_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_Catalogue_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_Catalogue_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_Catalogue_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractCT_Catalogue", "http://www.isotc211.org/2005/gmx"), XName.Get("CT_CodelistCatalogue", "http://www.isotc211.org/2005/gmx"), XName.Get("CT_CrsCatalogue", "http://www.isotc211.org/2005/gmx"), XName.Get("CT_UomCatalogue", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractCT_Catalogue)?
        /// </para>
        /// </summary>
        public CT_Catalogue_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractCT_Catalogue, CT_CodelistCatalogue, CT_CrsCatalogue, CT_UomCatalogue
        /// </para>
        /// <para>
        /// Regular expression: (AbstractCT_Catalogue)?
        /// </para>
        /// </summary>
        public AbstractCT_Catalogue AbstractCT_Catalogue
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractCT_Catalogue", "http://www.isotc211.org/2005/gmx"), XName.Get("CT_CodelistCatalogue", "http://www.isotc211.org/2005/gmx"), XName.Get("CT_CrsCatalogue", "http://www.isotc211.org/2005/gmx"), XName.Get("CT_UomCatalogue", "http://www.isotc211.org/2005/gmx"));
                return ((AbstractCT_Catalogue)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractCT_Catalogue", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_Catalogue_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_Catalogue_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractCT_Catalogue", "http://www.isotc211.org/2005/gmx"), typeof(AbstractCT_Catalogue));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_Catalogue_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_Catalogue_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, codelistItem+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_CodelistCatalogue_TypeSchemaProvider")]
    public partial class CT_CodelistCatalogue_Type : global::GeoSik.Iso.Ts19139.Gmx.AbstractCT_Catalogue_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_Codelist_PropertyType> codelistItemField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_CodelistCatalogue_Type(XElement xe) { return XTypedServices.ToXTypedElement<CT_CodelistCatalogue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_CodelistCatalogue_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("scope", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("language", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("codelistItem", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, codelistItem+)
        /// </para>
        /// </summary>
        public CT_CodelistCatalogue_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, codelistItem+)
        /// </para>
        /// </summary>
        public IList<CT_Codelist_PropertyType> codelistItem
        {
            get
            {
                if ((this.codelistItemField == null))
                {
                    this.codelistItemField = new XTypedList<CT_Codelist_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("codelistItem", "http://www.isotc211.org/2005/gmx"));
                }
                return this.codelistItemField;
            }
            set
            {
                if ((value == null))
                {
                    this.codelistItemField = null;
                }
                else
                {
                    if ((this.codelistItemField == null))
                    {
                        this.codelistItemField = XTypedList<CT_Codelist_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("codelistItem", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_Codelist_PropertyType>(this.codelistItemField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CodelistCatalogue_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_CodelistCatalogue_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("scope", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.Date_PropertyType));
            localElementDictionary.Add(XName.Get("language", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.MD_CharacterSetCode_PropertyType));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
            localElementDictionary.Add(XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_Catalogue_PropertyType));
            localElementDictionary.Add(XName.Get("codelistItem", "http://www.isotc211.org/2005/gmx"), typeof(CT_Codelist_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_CodelistCatalogue_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_CodelistCatalogue_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CT_CodelistCatalogue)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_CodelistCatalogue_PropertyTypeSchemaProvider")]
    public partial class CT_CodelistCatalogue_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_CodelistCatalogue_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_CodelistCatalogue_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_CodelistCatalogue_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CT_CodelistCatalogue", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CT_CodelistCatalogue)?
        /// </para>
        /// </summary>
        public CT_CodelistCatalogue_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CT_CodelistCatalogue)?
        /// </para>
        /// </summary>
        public CT_CodelistCatalogue CT_CodelistCatalogue
        {
            get
            {
                XElement x = this.GetElement(XName.Get("CT_CodelistCatalogue", "http://www.isotc211.org/2005/gmx"));
                return ((CT_CodelistCatalogue)(x));
            }
            set
            {
                this.SetElement(XName.Get("CT_CodelistCatalogue", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CodelistCatalogue_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_CodelistCatalogue_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CT_CodelistCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_CodelistCatalogue));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_CodelistCatalogue_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_CodelistCatalogue_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_CrsCatalogue_TypeSchemaProvider")]
    public partial class CT_CrsCatalogue_Type : global::GeoSik.Iso.Ts19139.Gmx.AbstractCT_Catalogue_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_CRS_PropertyType> crsField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_CoordinateSystem_PropertyType> coordinateSystemField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_CoordinateSystemAxis_PropertyType> axisField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_Datum_PropertyType> datumField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_Ellipsoid_PropertyType> ellipsoidField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_PrimeMeridian_PropertyType> primeMeridianField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_Operation_PropertyType> operationField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_OperationMethod_PropertyType> operationMethodField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_OperationParameters_PropertyType> parametersField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_CrsCatalogue_Type(XElement xe) { return XTypedServices.ToXTypedElement<CT_CrsCatalogue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_CrsCatalogue_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("scope", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("language", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("crs", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("coordinateSystem", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("axis", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("datum", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("ellipsoid", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("primeMeridian", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("operation", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("operationMethod", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("parameters", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public CT_CrsCatalogue_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_CRS_PropertyType> crs
        {
            get
            {
                if ((this.crsField == null))
                {
                    this.crsField = new XTypedList<CT_CRS_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("crs", "http://www.isotc211.org/2005/gmx"));
                }
                return this.crsField;
            }
            set
            {
                if ((value == null))
                {
                    this.crsField = null;
                }
                else
                {
                    if ((this.crsField == null))
                    {
                        this.crsField = XTypedList<CT_CRS_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("crs", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_CRS_PropertyType>(this.crsField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_CoordinateSystem_PropertyType> coordinateSystem
        {
            get
            {
                if ((this.coordinateSystemField == null))
                {
                    this.coordinateSystemField = new XTypedList<CT_CoordinateSystem_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("coordinateSystem", "http://www.isotc211.org/2005/gmx"));
                }
                return this.coordinateSystemField;
            }
            set
            {
                if ((value == null))
                {
                    this.coordinateSystemField = null;
                }
                else
                {
                    if ((this.coordinateSystemField == null))
                    {
                        this.coordinateSystemField = XTypedList<CT_CoordinateSystem_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("coordinateSystem", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_CoordinateSystem_PropertyType>(this.coordinateSystemField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_CoordinateSystemAxis_PropertyType> axis
        {
            get
            {
                if ((this.axisField == null))
                {
                    this.axisField = new XTypedList<CT_CoordinateSystemAxis_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("axis", "http://www.isotc211.org/2005/gmx"));
                }
                return this.axisField;
            }
            set
            {
                if ((value == null))
                {
                    this.axisField = null;
                }
                else
                {
                    if ((this.axisField == null))
                    {
                        this.axisField = XTypedList<CT_CoordinateSystemAxis_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("axis", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_CoordinateSystemAxis_PropertyType>(this.axisField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_Datum_PropertyType> datum
        {
            get
            {
                if ((this.datumField == null))
                {
                    this.datumField = new XTypedList<CT_Datum_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("datum", "http://www.isotc211.org/2005/gmx"));
                }
                return this.datumField;
            }
            set
            {
                if ((value == null))
                {
                    this.datumField = null;
                }
                else
                {
                    if ((this.datumField == null))
                    {
                        this.datumField = XTypedList<CT_Datum_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("datum", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_Datum_PropertyType>(this.datumField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_Ellipsoid_PropertyType> ellipsoid
        {
            get
            {
                if ((this.ellipsoidField == null))
                {
                    this.ellipsoidField = new XTypedList<CT_Ellipsoid_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("ellipsoid", "http://www.isotc211.org/2005/gmx"));
                }
                return this.ellipsoidField;
            }
            set
            {
                if ((value == null))
                {
                    this.ellipsoidField = null;
                }
                else
                {
                    if ((this.ellipsoidField == null))
                    {
                        this.ellipsoidField = XTypedList<CT_Ellipsoid_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("ellipsoid", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_Ellipsoid_PropertyType>(this.ellipsoidField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_PrimeMeridian_PropertyType> primeMeridian
        {
            get
            {
                if ((this.primeMeridianField == null))
                {
                    this.primeMeridianField = new XTypedList<CT_PrimeMeridian_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("primeMeridian", "http://www.isotc211.org/2005/gmx"));
                }
                return this.primeMeridianField;
            }
            set
            {
                if ((value == null))
                {
                    this.primeMeridianField = null;
                }
                else
                {
                    if ((this.primeMeridianField == null))
                    {
                        this.primeMeridianField = XTypedList<CT_PrimeMeridian_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("primeMeridian", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_PrimeMeridian_PropertyType>(this.primeMeridianField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_Operation_PropertyType> operation
        {
            get
            {
                if ((this.operationField == null))
                {
                    this.operationField = new XTypedList<CT_Operation_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("operation", "http://www.isotc211.org/2005/gmx"));
                }
                return this.operationField;
            }
            set
            {
                if ((value == null))
                {
                    this.operationField = null;
                }
                else
                {
                    if ((this.operationField == null))
                    {
                        this.operationField = XTypedList<CT_Operation_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("operation", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_Operation_PropertyType>(this.operationField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_OperationMethod_PropertyType> operationMethod
        {
            get
            {
                if ((this.operationMethodField == null))
                {
                    this.operationMethodField = new XTypedList<CT_OperationMethod_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("operationMethod", "http://www.isotc211.org/2005/gmx"));
                }
                return this.operationMethodField;
            }
            set
            {
                if ((value == null))
                {
                    this.operationMethodField = null;
                }
                else
                {
                    if ((this.operationMethodField == null))
                    {
                        this.operationMethodField = XTypedList<CT_OperationMethod_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("operationMethod", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_OperationMethod_PropertyType>(this.operationMethodField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_OperationParameters_PropertyType> parameters
        {
            get
            {
                if ((this.parametersField == null))
                {
                    this.parametersField = new XTypedList<CT_OperationParameters_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("parameters", "http://www.isotc211.org/2005/gmx"));
                }
                return this.parametersField;
            }
            set
            {
                if ((value == null))
                {
                    this.parametersField = null;
                }
                else
                {
                    if ((this.parametersField == null))
                    {
                        this.parametersField = XTypedList<CT_OperationParameters_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("parameters", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_OperationParameters_PropertyType>(this.parametersField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CrsCatalogue_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_CrsCatalogue_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("scope", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.Date_PropertyType));
            localElementDictionary.Add(XName.Get("language", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.MD_CharacterSetCode_PropertyType));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
            localElementDictionary.Add(XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_Catalogue_PropertyType));
            localElementDictionary.Add(XName.Get("crs", "http://www.isotc211.org/2005/gmx"), typeof(CT_CRS_PropertyType));
            localElementDictionary.Add(XName.Get("coordinateSystem", "http://www.isotc211.org/2005/gmx"), typeof(CT_CoordinateSystem_PropertyType));
            localElementDictionary.Add(XName.Get("axis", "http://www.isotc211.org/2005/gmx"), typeof(CT_CoordinateSystemAxis_PropertyType));
            localElementDictionary.Add(XName.Get("datum", "http://www.isotc211.org/2005/gmx"), typeof(CT_Datum_PropertyType));
            localElementDictionary.Add(XName.Get("ellipsoid", "http://www.isotc211.org/2005/gmx"), typeof(CT_Ellipsoid_PropertyType));
            localElementDictionary.Add(XName.Get("primeMeridian", "http://www.isotc211.org/2005/gmx"), typeof(CT_PrimeMeridian_PropertyType));
            localElementDictionary.Add(XName.Get("operation", "http://www.isotc211.org/2005/gmx"), typeof(CT_Operation_PropertyType));
            localElementDictionary.Add(XName.Get("operationMethod", "http://www.isotc211.org/2005/gmx"), typeof(CT_OperationMethod_PropertyType));
            localElementDictionary.Add(XName.Get("parameters", "http://www.isotc211.org/2005/gmx"), typeof(CT_OperationParameters_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_CrsCatalogue_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_CrsCatalogue_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CT_CrsCatalogue)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_CrsCatalogue_PropertyTypeSchemaProvider")]
    public partial class CT_CrsCatalogue_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_CrsCatalogue_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_CrsCatalogue_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_CrsCatalogue_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CT_CrsCatalogue", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CT_CrsCatalogue)?
        /// </para>
        /// </summary>
        public CT_CrsCatalogue_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CT_CrsCatalogue)?
        /// </para>
        /// </summary>
        public CT_CrsCatalogue CT_CrsCatalogue
        {
            get
            {
                XElement x = this.GetElement(XName.Get("CT_CrsCatalogue", "http://www.isotc211.org/2005/gmx"));
                return ((CT_CrsCatalogue)(x));
            }
            set
            {
                this.SetElement(XName.Get("CT_CrsCatalogue", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CrsCatalogue_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_CrsCatalogue_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CT_CrsCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_CrsCatalogue));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_CrsCatalogue_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_CrsCatalogue_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, uomItem+)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_UomCatalogue_TypeSchemaProvider")]
    public partial class CT_UomCatalogue_Type : global::GeoSik.Iso.Ts19139.Gmx.AbstractCT_Catalogue_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<UnitDefinition_PropertyType> uomItemField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_UomCatalogue_Type(XElement xe) { return XTypedServices.ToXTypedElement<CT_UomCatalogue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_UomCatalogue_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("name", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("scope", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("language", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("locale", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("uomItem", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, uomItem+)
        /// </para>
        /// </summary>
        public CT_UomCatalogue_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, uomItem+)
        /// </para>
        /// </summary>
        public IList<UnitDefinition_PropertyType> uomItem
        {
            get
            {
                if ((this.uomItemField == null))
                {
                    this.uomItemField = new XTypedList<UnitDefinition_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("uomItem", "http://www.isotc211.org/2005/gmx"));
                }
                return this.uomItemField;
            }
            set
            {
                if ((value == null))
                {
                    this.uomItemField = null;
                }
                else
                {
                    if ((this.uomItemField == null))
                    {
                        this.uomItemField = XTypedList<UnitDefinition_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("uomItem", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<UnitDefinition_PropertyType>(this.uomItemField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_UomCatalogue_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_UomCatalogue_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("name", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("scope", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fieldOfApplication", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("versionNumber", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("versionDate", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.Date_PropertyType));
            localElementDictionary.Add(XName.Get("language", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("characterSet", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.MD_CharacterSetCode_PropertyType));
            localElementDictionary.Add(XName.Get("locale", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType));
            localElementDictionary.Add(XName.Get("subCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_Catalogue_PropertyType));
            localElementDictionary.Add(XName.Get("uomItem", "http://www.isotc211.org/2005/gmx"), typeof(UnitDefinition_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_UomCatalogue_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_UomCatalogue_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (CT_UomCatalogue)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CT_UomCatalogue_PropertyTypeSchemaProvider")]
    public partial class CT_UomCatalogue_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator CT_UomCatalogue_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<CT_UomCatalogue_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static CT_UomCatalogue_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("CT_UomCatalogue", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (CT_UomCatalogue)?
        /// </para>
        /// </summary>
        public CT_UomCatalogue_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (CT_UomCatalogue)?
        /// </para>
        /// </summary>
        public CT_UomCatalogue CT_UomCatalogue
        {
            get
            {
                XElement x = this.GetElement(XName.Get("CT_UomCatalogue", "http://www.isotc211.org/2005/gmx"));
                return ((CT_UomCatalogue)(x));
            }
            set
            {
                this.SetElement(XName.Get("CT_UomCatalogue", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_UomCatalogue_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<CT_UomCatalogue_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("CT_UomCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_UomCatalogue));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName CT_UomCatalogue_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("CT_UomCatalogue_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    [XmlSchemaProviderAttribute("FileName_TypeSchemaProvider")]
    public partial class FileName_Type : XTypedElement, IXMetaData, IXmlSerializable
    {

        public static explicit operator FileName_Type(XElement xe) { return XTypedServices.ToXTypedElement<FileName_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public FileName_Type()
        {
        }

        public string TypedValue
        {
            get
            {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri src
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("src", ""));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("src", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("FileName_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<FileName_Type>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName FileName_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("FileName_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (FileName)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("FileName_PropertyTypeSchemaProvider")]
    public partial class FileName_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator FileName_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<FileName_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static FileName_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("FileName", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (FileName)?
        /// </para>
        /// </summary>
        public FileName_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (FileName)?
        /// </para>
        /// </summary>
        public FileName FileName
        {
            get
            {
                XElement x = this.GetElement(XName.Get("FileName", "http://www.isotc211.org/2005/gmx"));
                return ((FileName)(x));
            }
            set
            {
                this.SetElement(XName.Get("FileName", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("FileName_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<FileName_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("FileName", "http://www.isotc211.org/2005/gmx"), typeof(FileName));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName FileName_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("FileName_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    [XmlSchemaProviderAttribute("MimeFileType_TypeSchemaProvider")]
    public partial class MimeFileType_Type : XTypedElement, IXMetaData, IXmlSerializable
    {

        public static explicit operator MimeFileType_Type(XElement xe) { return XTypedServices.ToXTypedElement<MimeFileType_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MimeFileType_Type()
        {
        }

        public string TypedValue
        {
            get
            {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MimeFileType_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MimeFileType_Type>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName MimeFileType_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MimeFileType_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MimeFileType)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MimeFileType_PropertyTypeSchemaProvider")]
    public partial class MimeFileType_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MimeFileType_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MimeFileType_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MimeFileType_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MimeFileType", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MimeFileType)?
        /// </para>
        /// </summary>
        public MimeFileType_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MimeFileType)?
        /// </para>
        /// </summary>
        public MimeFileType MimeFileType
        {
            get
            {
                XElement x = this.GetElement(XName.Get("MimeFileType", "http://www.isotc211.org/2005/gmx"));
                return ((MimeFileType)(x));
            }
            set
            {
                this.SetElement(XName.Get("MimeFileType", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MimeFileType_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MimeFileType_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MimeFileType", "http://www.isotc211.org/2005/gmx"), typeof(MimeFileType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MimeFileType_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MimeFileType_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    [XmlSchemaProviderAttribute("Anchor_TypeSchemaProvider")]
    public partial class Anchor_Type : XTypedElement, IXMetaData, IXmlSerializable
    {

        public static explicit operator Anchor_Type(XElement xe) { return XTypedServices.ToXTypedElement<Anchor_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public Anchor_Type()
        {
        }

        public string TypedValue
        {
            get
            {
                XElement x = this.Untyped;
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetValue(value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("Anchor_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<Anchor_Type>(this);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlQualifiedName Anchor_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("Anchor_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (Anchor)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("Anchor_PropertyTypeSchemaProvider")]
    public partial class Anchor_PropertyType : GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator Anchor_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<Anchor_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static Anchor_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("Anchor", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (Anchor)?
        /// </para>
        /// </summary>
        public Anchor_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (Anchor)?
        /// </para>
        /// </summary>
        public Anchor Anchor
        {
            get
            {
                XElement x = this.GetElement(XName.Get("Anchor", "http://www.isotc211.org/2005/gmx"));
                return ((Anchor)(x));
            }
            set
            {
                this.SetElement(XName.Get("Anchor", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("Anchor_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<Anchor_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("Anchor", "http://www.isotc211.org/2005/gmx"), typeof(Anchor));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName Anchor_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("Anchor_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*, aggregateCatalogue*, aggregateFile*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_Aggregate_TypeSchemaProvider")]
    public partial class MX_Aggregate_Type : global::GeoSik.Iso.Ts19139.Gmd.AbstractDS_Aggregate_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_Catalogue_PropertyType> aggregateCatalogueField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MX_SupportFile_PropertyType> aggregateFileField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_Aggregate_Type(XElement xe) { return XTypedServices.ToXTypedElement<MX_Aggregate_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_Aggregate_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("subset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("superset", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("aggregateCatalogue", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("aggregateFile", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*, aggregateCatalogue*, aggregateFile*)
        /// </para>
        /// </summary>
        public MX_Aggregate_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*, aggregateCatalogue*, aggregateFile*)
        /// </para>
        /// </summary>
        public IList<CT_Catalogue_PropertyType> aggregateCatalogue
        {
            get
            {
                if ((this.aggregateCatalogueField == null))
                {
                    this.aggregateCatalogueField = new XTypedList<CT_Catalogue_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("aggregateCatalogue", "http://www.isotc211.org/2005/gmx"));
                }
                return this.aggregateCatalogueField;
            }
            set
            {
                if ((value == null))
                {
                    this.aggregateCatalogueField = null;
                }
                else
                {
                    if ((this.aggregateCatalogueField == null))
                    {
                        this.aggregateCatalogueField = XTypedList<CT_Catalogue_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("aggregateCatalogue", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_Catalogue_PropertyType>(this.aggregateCatalogueField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*, aggregateCatalogue*, aggregateFile*)
        /// </para>
        /// </summary>
        public IList<MX_SupportFile_PropertyType> aggregateFile
        {
            get
            {
                if ((this.aggregateFileField == null))
                {
                    this.aggregateFileField = new XTypedList<MX_SupportFile_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("aggregateFile", "http://www.isotc211.org/2005/gmx"));
                }
                return this.aggregateFileField;
            }
            set
            {
                if ((value == null))
                {
                    this.aggregateFileField = null;
                }
                else
                {
                    if ((this.aggregateFileField == null))
                    {
                        this.aggregateFileField = XTypedList<MX_SupportFile_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("aggregateFile", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<MX_SupportFile_PropertyType>(this.aggregateFileField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_Aggregate_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_Aggregate_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("composedOf", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gmd.DS_DataSet_PropertyType));
            localElementDictionary.Add(XName.Get("seriesMetadata", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gmd.MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("subset", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gmd.DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("superset", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gmd.DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("aggregateCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_Catalogue_PropertyType));
            localElementDictionary.Add(XName.Get("aggregateFile", "http://www.isotc211.org/2005/gmx"), typeof(MX_SupportFile_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_Aggregate_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_Aggregate_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MX_Aggregate)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_Aggregate_PropertyTypeSchemaProvider")]
    public partial class MX_Aggregate_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_Aggregate_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MX_Aggregate_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_Aggregate_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MX_Aggregate", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MX_Aggregate)?
        /// </para>
        /// </summary>
        public MX_Aggregate_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MX_Aggregate)?
        /// </para>
        /// </summary>
        public MX_Aggregate MX_Aggregate
        {
            get
            {
                XElement x = this.GetElement(XName.Get("MX_Aggregate", "http://www.isotc211.org/2005/gmx"));
                return ((MX_Aggregate)(x));
            }
            set
            {
                this.SetElement(XName.Get("MX_Aggregate", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_Aggregate_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_Aggregate_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MX_Aggregate", "http://www.isotc211.org/2005/gmx"), typeof(MX_Aggregate));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_Aggregate_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_Aggregate_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (has+, partOf*, dataFile+, datasetCatalogue*, supportFile*)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_DataSet_TypeSchemaProvider")]
    public partial class MX_DataSet_Type : global::GeoSik.Iso.Ts19139.Gmd.DS_DataSet_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MX_DataFile_PropertyType> dataFileField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<CT_Catalogue_PropertyType> datasetCatalogueField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<MX_SupportFile_PropertyType> supportFileField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_DataSet_Type(XElement xe) { return XTypedServices.ToXTypedElement<MX_DataSet_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_DataSet_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("has", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("partOf", "http://www.isotc211.org/2005/gmd")), new NamedContentModelEntity(XName.Get("dataFile", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("datasetCatalogue", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("supportFile", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (has+, partOf*, dataFile+, datasetCatalogue*, supportFile*)
        /// </para>
        /// </summary>
        public MX_DataSet_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*, dataFile+, datasetCatalogue*, supportFile*)
        /// </para>
        /// </summary>
        public IList<MX_DataFile_PropertyType> dataFile
        {
            get
            {
                if ((this.dataFileField == null))
                {
                    this.dataFileField = new XTypedList<MX_DataFile_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("dataFile", "http://www.isotc211.org/2005/gmx"));
                }
                return this.dataFileField;
            }
            set
            {
                if ((value == null))
                {
                    this.dataFileField = null;
                }
                else
                {
                    if ((this.dataFileField == null))
                    {
                        this.dataFileField = XTypedList<MX_DataFile_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("dataFile", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<MX_DataFile_PropertyType>(this.dataFileField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*, dataFile+, datasetCatalogue*, supportFile*)
        /// </para>
        /// </summary>
        public IList<CT_Catalogue_PropertyType> datasetCatalogue
        {
            get
            {
                if ((this.datasetCatalogueField == null))
                {
                    this.datasetCatalogueField = new XTypedList<CT_Catalogue_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("datasetCatalogue", "http://www.isotc211.org/2005/gmx"));
                }
                return this.datasetCatalogueField;
            }
            set
            {
                if ((value == null))
                {
                    this.datasetCatalogueField = null;
                }
                else
                {
                    if ((this.datasetCatalogueField == null))
                    {
                        this.datasetCatalogueField = XTypedList<CT_Catalogue_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("datasetCatalogue", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<CT_Catalogue_PropertyType>(this.datasetCatalogueField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*, dataFile+, datasetCatalogue*, supportFile*)
        /// </para>
        /// </summary>
        public IList<MX_SupportFile_PropertyType> supportFile
        {
            get
            {
                if ((this.supportFileField == null))
                {
                    this.supportFileField = new XTypedList<MX_SupportFile_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("supportFile", "http://www.isotc211.org/2005/gmx"));
                }
                return this.supportFileField;
            }
            set
            {
                if ((value == null))
                {
                    this.supportFileField = null;
                }
                else
                {
                    if ((this.supportFileField == null))
                    {
                        this.supportFileField = XTypedList<MX_SupportFile_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("supportFile", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<MX_SupportFile_PropertyType>(this.supportFileField, value);
                    }
                }
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_DataSet_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_DataSet_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("has", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gmd.MD_Metadata_PropertyType));
            localElementDictionary.Add(XName.Get("partOf", "http://www.isotc211.org/2005/gmd"), typeof(GeoSik.Iso.Ts19139.Gmd.DS_Aggregate_PropertyType));
            localElementDictionary.Add(XName.Get("dataFile", "http://www.isotc211.org/2005/gmx"), typeof(MX_DataFile_PropertyType));
            localElementDictionary.Add(XName.Get("datasetCatalogue", "http://www.isotc211.org/2005/gmx"), typeof(CT_Catalogue_PropertyType));
            localElementDictionary.Add(XName.Get("supportFile", "http://www.isotc211.org/2005/gmx"), typeof(MX_SupportFile_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_DataSet_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_DataSet_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MX_DataSet)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_DataSet_PropertyTypeSchemaProvider")]
    public partial class MX_DataSet_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_DataSet_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MX_DataSet_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_DataSet_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MX_DataSet", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MX_DataSet)?
        /// </para>
        /// </summary>
        public MX_DataSet_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MX_DataSet)?
        /// </para>
        /// </summary>
        public MX_DataSet MX_DataSet
        {
            get
            {
                XElement x = this.GetElement(XName.Get("MX_DataSet", "http://www.isotc211.org/2005/gmx"));
                return ((MX_DataSet)(x));
            }
            set
            {
                this.SetElement(XName.Get("MX_DataSet", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_DataSet_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_DataSet_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MX_DataSet", "http://www.isotc211.org/2005/gmx"), typeof(MX_DataSet));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_DataSet_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_DataSet_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (fileName, fileDescription, fileType, featureTypes*, fileFormat)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_DataFile_TypeSchemaProvider")]
    public partial class MX_DataFile_Type : global::GeoSik.Iso.Ts19139.Gmx.AbstractMX_File_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType> featureTypesField;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_DataFile_Type(XElement xe) { return XTypedServices.ToXTypedElement<MX_DataFile_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_DataFile_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("fileName", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fileType", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("featureTypes", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fileFormat", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType, featureTypes*, fileFormat)
        /// </para>
        /// </summary>
        public MX_DataFile_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType, featureTypes*, fileFormat)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType> featureTypes
        {
            get
            {
                if ((this.featureTypesField == null))
                {
                    this.featureTypesField = new XTypedList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType>(this, LinqToXsdTypeManager.Instance, XName.Get("featureTypes", "http://www.isotc211.org/2005/gmx"));
                }
                return this.featureTypesField;
            }
            set
            {
                if ((value == null))
                {
                    this.featureTypesField = null;
                }
                else
                {
                    if ((this.featureTypesField == null))
                    {
                        this.featureTypesField = XTypedList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType>.Initialize(this, LinqToXsdTypeManager.Instance, value, XName.Get("featureTypes", "http://www.isotc211.org/2005/gmx"));
                    }
                    else
                    {
                        XTypedServices.SetList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType>(this.featureTypesField, value);
                    }
                }
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType, featureTypes*, fileFormat)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.MD_Format_PropertyType fileFormat
        {
            get
            {
                XElement x = this.GetElement(XName.Get("fileFormat", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gmd.MD_Format_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileFormat", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_DataFile_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_DataFile_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("fileName", "http://www.isotc211.org/2005/gmx"), typeof(FileName_PropertyType));
            localElementDictionary.Add(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fileType", "http://www.isotc211.org/2005/gmx"), typeof(MimeFileType_PropertyType));
            localElementDictionary.Add(XName.Get("featureTypes", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType));
            localElementDictionary.Add(XName.Get("fileFormat", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gmd.MD_Format_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_DataFile_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_DataFile_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MX_DataFile)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_DataFile_PropertyTypeSchemaProvider")]
    public partial class MX_DataFile_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_DataFile_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MX_DataFile_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_DataFile_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MX_DataFile", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MX_DataFile)?
        /// </para>
        /// </summary>
        public MX_DataFile_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MX_DataFile)?
        /// </para>
        /// </summary>
        public MX_DataFile MX_DataFile
        {
            get
            {
                XElement x = this.GetElement(XName.Get("MX_DataFile", "http://www.isotc211.org/2005/gmx"));
                return ((MX_DataFile)(x));
            }
            set
            {
                this.SetElement(XName.Get("MX_DataFile", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_DataFile_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_DataFile_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MX_DataFile", "http://www.isotc211.org/2005/gmx"), typeof(MX_DataFile));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_DataFile_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_DataFile_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (fileName, fileDescription, fileType)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_SupportFile_TypeSchemaProvider")]
    public partial class MX_SupportFile_Type : global::GeoSik.Iso.Ts19139.Gmx.AbstractMX_File_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_SupportFile_Type(XElement xe) { return XTypedServices.ToXTypedElement<MX_SupportFile_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_SupportFile_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("fileName", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fileType", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType)
        /// </para>
        /// </summary>
        public MX_SupportFile_Type()
        {
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_SupportFile_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_SupportFile_Type>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("fileName", "http://www.isotc211.org/2005/gmx"), typeof(FileName_PropertyType));
            localElementDictionary.Add(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fileType", "http://www.isotc211.org/2005/gmx"), typeof(MimeFileType_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_SupportFile_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_SupportFile_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MX_SupportFile)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_SupportFile_PropertyTypeSchemaProvider")]
    public partial class MX_SupportFile_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_SupportFile_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MX_SupportFile_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_SupportFile_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MX_SupportFile", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MX_SupportFile)?
        /// </para>
        /// </summary>
        public MX_SupportFile_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MX_SupportFile)?
        /// </para>
        /// </summary>
        public MX_SupportFile MX_SupportFile
        {
            get
            {
                XElement x = this.GetElement(XName.Get("MX_SupportFile", "http://www.isotc211.org/2005/gmx"));
                return ((MX_SupportFile)(x));
            }
            set
            {
                this.SetElement(XName.Get("MX_SupportFile", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_SupportFile_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_SupportFile_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MX_SupportFile", "http://www.isotc211.org/2005/gmx"), typeof(MX_SupportFile));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_SupportFile_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_SupportFile_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (fileName, fileDescription, fileType)
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("AbstractMX_File_TypeSchemaProvider")]
    public abstract partial class AbstractMX_File_Type : global::GeoSik.Iso.Ts19139.Gco.AbstractObject_Type, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator AbstractMX_File_Type(XElement xe) { return (AbstractMX_File_Type)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static AbstractMX_File_Type()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("fileName", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmx")), new NamedContentModelEntity(XName.Get("fileType", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType)
        /// </para>
        /// </summary>
        public AbstractMX_File_Type()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType)
        /// </para>
        /// </summary>
        public FileName_PropertyType fileName
        {
            get
            {
                XElement x = this.GetElement(XName.Get("fileName", "http://www.isotc211.org/2005/gmx"));
                return ((FileName_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileName", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileDescription
        {
            get
            {
                XElement x = this.GetElement(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmx"));
                return ((GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType)
        /// </para>
        /// </summary>
        public MimeFileType_PropertyType fileType
        {
            get
            {
                XElement x = this.GetElement(XName.Get("fileType", "http://www.isotc211.org/2005/gmx"));
                return ((MimeFileType_PropertyType)(x));
            }
            set
            {
                this.SetElement(XName.Get("fileType", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractMX_File_Type", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("fileName", "http://www.isotc211.org/2005/gmx"), typeof(FileName_PropertyType));
            localElementDictionary.Add(XName.Get("fileDescription", "http://www.isotc211.org/2005/gmx"), typeof(GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType));
            localElementDictionary.Add(XName.Get("fileType", "http://www.isotc211.org/2005/gmx"), typeof(MimeFileType_PropertyType));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName AbstractMX_File_TypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("AbstractMX_File_Type", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (AbstractMX_File)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_File_PropertyTypeSchemaProvider")]
    public partial class MX_File_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_File_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MX_File_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_File_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new SubstitutedContentModelEntity(XName.Get("AbstractMX_File", "http://www.isotc211.org/2005/gmx"), XName.Get("MX_DataFile", "http://www.isotc211.org/2005/gmx"), XName.Get("MX_SupportFile", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (AbstractMX_File)?
        /// </para>
        /// </summary>
        public MX_File_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Substitution members: AbstractMX_File, MX_DataFile, MX_SupportFile
        /// </para>
        /// <para>
        /// Regular expression: (AbstractMX_File)?
        /// </para>
        /// </summary>
        public AbstractMX_File AbstractMX_File
        {
            get
            {
                XTypedElement x = XTypedServices.ToSubstitutedXTypedElement(this, LinqToXsdTypeManager.Instance, XName.Get("AbstractMX_File", "http://www.isotc211.org/2005/gmx"), XName.Get("MX_DataFile", "http://www.isotc211.org/2005/gmx"), XName.Get("MX_SupportFile", "http://www.isotc211.org/2005/gmx"));
                return ((AbstractMX_File)(x));
            }
            set
            {
                this.SetElement(XName.Get("AbstractMX_File", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("type", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("type", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("href", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("href", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("role", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("role", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<System.Uri>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("arcrole", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.AnyUri).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("title", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("title", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("show", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("show", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("actuate", "http://www.w3.org/1999/xlink"), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Token).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string uuidref
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("uuidref", ""));
                return XTypedServices.ParseValue<string>(x, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
            set
            {
                this.SetAttribute(XName.Get("uuidref", ""), value, XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.String).Datatype);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_File_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_File_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("AbstractMX_File", "http://www.isotc211.org/2005/gmx"), typeof(AbstractMX_File));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_File_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_File_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    /// <summary>
    /// <para>
    /// Regular expression: (MX_ScopeCode)?
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("MX_ScopeCode_PropertyTypeSchemaProvider")]
    public partial class MX_ScopeCode_PropertyType : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        static Dictionary<XName, System.Type> localElementDictionary = new Dictionary<XName, System.Type>();

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private static ContentModelEntity contentModel;

        public static explicit operator MX_ScopeCode_PropertyType(XElement xe) { return XTypedServices.ToXTypedElement<MX_ScopeCode_PropertyType>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        static MX_ScopeCode_PropertyType()
        {
            BuildElementDictionary();
            contentModel = new SequenceContentModelEntity(new NamedContentModelEntity(XName.Get("MX_ScopeCode", "http://www.isotc211.org/2005/gmx")));
        }

        /// <summary>
        /// <para>
        /// Regular expression: (MX_ScopeCode)?
        /// </para>
        /// </summary>
        public MX_ScopeCode_PropertyType()
        {
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (MX_ScopeCode)?
        /// </para>
        /// </summary>
        public MX_ScopeCode MX_ScopeCode
        {
            get
            {
                XElement x = this.GetElement(XName.Get("MX_ScopeCode", "http://www.isotc211.org/2005/gmx"));
                return ((MX_ScopeCode)(x));
            }
            set
            {
                this.SetElement(XName.Get("MX_ScopeCode", "http://www.isotc211.org/2005/gmx"), value);
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public object nilReason
        {
            get
            {
                XAttribute x = this.Attribute(XName.Get("nilReason", "http://www.isotc211.org/2005/gco"));
                return XTypedServices.ParseUnionValue(x, global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
            set
            {
                this.SetUnionAttribute(value, "nilReason", this, XName.Get("nilReason", "http://www.isotc211.org/2005/gco"), global::GeoSik.Ogc.Gml.V321.NilReasonType.TypeDefinition);
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                return localElementDictionary;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_ScopeCode_PropertyType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Fragment;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public override XTypedElement Clone()
        {
            return XTypedServices.CloneXTypedElement<MX_ScopeCode_PropertyType>(this);
        }

        private static void BuildElementDictionary()
        {
            localElementDictionary.Add(XName.Get("MX_ScopeCode", "http://www.isotc211.org/2005/gmx"), typeof(MX_ScopeCode));
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return contentModel;
        }

        public static XmlQualifiedName MX_ScopeCode_PropertyTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            return new XmlQualifiedName("MX_ScopeCode_PropertyType", "http://www.isotc211.org/2005/gmx");
        }
    }

    [XmlSchemaProviderAttribute("ML_BaseUnitSchemaProvider")]
    public partial class ML_BaseUnit : global::GeoSik.Ogc.Gml.V321.BaseUnit, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_BaseUnit_Type ContentField;

        public static explicit operator ML_BaseUnit(XElement xe) { return XTypedServices.ToXTypedElement<ML_BaseUnit, ML_BaseUnit_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_BaseUnit() :
                base()
        {
            SetInnerType(new ML_BaseUnit_Type());
        }

        public ML_BaseUnit(ML_BaseUnit_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_BaseUnit_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, unitsSystem, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<UomAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_BaseUnit", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_BaseUnit Load(string xmlFile)
        {
            return XTypedServices.Load<ML_BaseUnit, ML_BaseUnit_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_BaseUnit Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_BaseUnit, ML_BaseUnit_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_BaseUnit Parse(string xml)
        {
            return XTypedServices.Parse<ML_BaseUnit, ML_BaseUnit_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_BaseUnit(((ML_BaseUnit_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_BaseUnit_Type ContentField)
        {
            this.ContentField = ((ML_BaseUnit_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_BaseUnitSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_BaseUnit", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_DerivedUnitSchemaProvider")]
    public partial class ML_DerivedUnit : global::GeoSik.Ogc.Gml.V321.DerivedUnit, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_DerivedUnit_Type ContentField;

        public static explicit operator ML_DerivedUnit(XElement xe) { return XTypedServices.ToXTypedElement<ML_DerivedUnit, ML_DerivedUnit_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_DerivedUnit() :
                base()
        {
            SetInnerType(new ML_DerivedUnit_Type());
        }

        public ML_DerivedUnit(ML_DerivedUnit_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_DerivedUnit_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, derivationUnitTerm+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<UomAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_DerivedUnit Load(string xmlFile)
        {
            return XTypedServices.Load<ML_DerivedUnit, ML_DerivedUnit_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_DerivedUnit Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_DerivedUnit, ML_DerivedUnit_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_DerivedUnit Parse(string xml)
        {
            return XTypedServices.Parse<ML_DerivedUnit, ML_DerivedUnit_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_DerivedUnit(((ML_DerivedUnit_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_DerivedUnit_Type ContentField)
        {
            this.ContentField = ((ML_DerivedUnit_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_DerivedUnitSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_DerivedUnit", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_ConventionalUnitSchemaProvider")]
    public partial class ML_ConventionalUnit : global::GeoSik.Ogc.Gml.V321.ConventionalUnit, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_ConventionalUnit_Type ContentField;

        public static explicit operator ML_ConventionalUnit(XElement xe) { return XTypedServices.ToXTypedElement<ML_ConventionalUnit, ML_ConventionalUnit_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_ConventionalUnit() :
                base()
        {
            SetInnerType(new ML_ConventionalUnit_Type());
        }

        public ML_ConventionalUnit(ML_ConventionalUnit_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_ConventionalUnit_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, (conversionToPreferredUnit | roughConversionToPreferredUnit), derivationUnitTerm*, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<UomAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_ConventionalUnit Load(string xmlFile)
        {
            return XTypedServices.Load<ML_ConventionalUnit, ML_ConventionalUnit_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_ConventionalUnit Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_ConventionalUnit, ML_ConventionalUnit_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_ConventionalUnit Parse(string xml)
        {
            return XTypedServices.Parse<ML_ConventionalUnit, ML_ConventionalUnit_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_ConventionalUnit(((ML_ConventionalUnit_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_ConventionalUnit_Type ContentField)
        {
            this.ContentField = ((ML_ConventionalUnit_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_ConventionalUnitSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_ConventionalUnit", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_UnitDefinitionSchemaProvider")]
    public partial class ML_UnitDefinition : global::GeoSik.Ogc.Gml.V321.UnitDefinition, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_UnitDefinition_Type ContentField;

        public static explicit operator ML_UnitDefinition(XElement xe) { return XTypedServices.ToXTypedElement<ML_UnitDefinition, ML_UnitDefinition_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_UnitDefinition() :
                base(true)
        {
            SetInnerType(new ML_UnitDefinition_Type());
        }

        public ML_UnitDefinition(ML_UnitDefinition_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_UnitDefinition_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<UomAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_UnitDefinition", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_UnitDefinition Load(string xmlFile)
        {
            return XTypedServices.Load<ML_UnitDefinition, ML_UnitDefinition_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_UnitDefinition Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_UnitDefinition, ML_UnitDefinition_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_UnitDefinition Parse(string xml)
        {
            return XTypedServices.Parse<ML_UnitDefinition, ML_UnitDefinition_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_UnitDefinition(((ML_UnitDefinition_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_UnitDefinition_Type ContentField)
        {
            this.ContentField = ((ML_UnitDefinition_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_UnitDefinitionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_UnitDefinition", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("UomAlternativeExpressionSchemaProvider")]
    public partial class UomAlternativeExpression : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private UomAlternativeExpression_Type ContentField;

        public static explicit operator UomAlternativeExpression(XElement xe) { return XTypedServices.ToXTypedElement<UomAlternativeExpression, UomAlternativeExpression_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public UomAlternativeExpression()
        {
            SetInnerType(new UomAlternativeExpression_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public UomAlternativeExpression(UomAlternativeExpression_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public UomAlternativeExpression_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, quantityType?, quantityTypeReference?, catalogSymbol?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("UomAlternativeExpression", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static UomAlternativeExpression Load(string xmlFile)
        {
            return XTypedServices.Load<UomAlternativeExpression, UomAlternativeExpression_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static UomAlternativeExpression Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<UomAlternativeExpression, UomAlternativeExpression_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static UomAlternativeExpression Parse(string xml)
        {
            return XTypedServices.Parse<UomAlternativeExpression, UomAlternativeExpression_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new UomAlternativeExpression(((UomAlternativeExpression_Type)(this.Content.Clone())));
        }

        private void SetInnerType(UomAlternativeExpression_Type ContentField)
        {
            this.ContentField = ((UomAlternativeExpression_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType UomAlternativeExpressionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("UomAlternativeExpression", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CodeDefinitionSchemaProvider")]
    public partial class CodeDefinition : global::GeoSik.Ogc.Gml.V321.Definition, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CodeDefinition_Type ContentField;

        public static explicit operator CodeDefinition(XElement xe) { return (CodeDefinition)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected CodeDefinition(bool setNull) :
                base(true)
        {
        }

        public CodeDefinition() :
                base(true)
        {
            SetInnerType(new CodeDefinition_Type());
        }

        public CodeDefinition(CodeDefinition_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                if ((this.ContentField != null))
                {
                    this.ContentField.Untyped = value;
                }
            }
        }

        public new CodeDefinition_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeDefinition", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CodeDefinition Load(string xmlFile)
        {
            return ((CodeDefinition)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static CodeDefinition Load(System.IO.TextReader xmlFile)
        {
            return ((CodeDefinition)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static CodeDefinition Parse(string xml)
        {
            return ((CodeDefinition)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new CodeDefinition(((CodeDefinition_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CodeDefinition_Type ContentField)
        {
            this.ContentField = ((CodeDefinition_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(CodeDefinition_Type ContentField)
        {
            this.ContentField = ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CodeDefinitionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CodeDefinition", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Constraints: - 1) metadataProperty.card = 0 - 2) dictionaryEntry.card = 0
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CodeListDictionarySchemaProvider")]
    public partial class CodeListDictionary : global::GeoSik.Ogc.Gml.V321.Dictionary, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CodeListDictionary_Type ContentField;

        public static explicit operator CodeListDictionary(XElement xe) { return (CodeListDictionary)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected CodeListDictionary(bool setNull) :
                base()
        {
        }

        /// <summary>
        /// <para>
        /// Constraints: - 1) metadataProperty.card = 0 - 2) dictionaryEntry.card = 0
        /// </para>
        /// </summary>
        public CodeListDictionary() :
                base()
        {
            SetInnerType(new CodeListDictionary_Type());
        }

        /// <summary>
        /// <para>
        /// Constraints: - 1) metadataProperty.card = 0 - 2) dictionaryEntry.card = 0
        /// </para>
        /// </summary>
        public CodeListDictionary(CodeListDictionary_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                if ((this.ContentField != null))
                {
                    this.ContentField.Untyped = value;
                }
            }
        }

        public new CodeListDictionary_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (dictionaryEntry | indirectEntry)*, codeEntry+)
        /// </para>
        /// </summary>
        public IList<CodeDefinition_PropertyType> codeEntry
        {
            get
            {
                return this.ContentField.codeEntry;
            }
            set
            {
                this.ContentField.codeEntry = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeListDictionary", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CodeListDictionary Load(string xmlFile)
        {
            return ((CodeListDictionary)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static CodeListDictionary Load(System.IO.TextReader xmlFile)
        {
            return ((CodeListDictionary)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public new static CodeListDictionary Parse(string xml)
        {
            return ((CodeListDictionary)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        public override XTypedElement Clone()
        {
            return new CodeListDictionary(((CodeListDictionary_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CodeListDictionary_Type ContentField)
        {
            this.ContentField = ((CodeListDictionary_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        protected virtual void SetSubstitutionMember(CodeListDictionary_Type ContentField)
        {
            this.ContentField = ContentField;
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CodeListDictionarySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CodeListDictionary", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_CodeDefinitionSchemaProvider")]
    public partial class ML_CodeDefinition : global::GeoSik.Iso.Ts19139.Gmx.CodeDefinition, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_CodeDefinition_Type ContentField;

        public static explicit operator ML_CodeDefinition(XElement xe) { return XTypedServices.ToXTypedElement<ML_CodeDefinition, ML_CodeDefinition_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_CodeDefinition() :
                base(true)
        {
            SetInnerType(new ML_CodeDefinition_Type());
        }

        public ML_CodeDefinition(ML_CodeDefinition_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_CodeDefinition_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CodeAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_CodeDefinition Load(string xmlFile)
        {
            return XTypedServices.Load<ML_CodeDefinition, ML_CodeDefinition_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_CodeDefinition Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_CodeDefinition, ML_CodeDefinition_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_CodeDefinition Parse(string xml)
        {
            return XTypedServices.Parse<ML_CodeDefinition, ML_CodeDefinition_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_CodeDefinition(((ML_CodeDefinition_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_CodeDefinition_Type ContentField)
        {
            this.ContentField = ((ML_CodeDefinition_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_CodeDefinitionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_CodeDefinition", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// Constraint: codeEntry.type = ML_CodeListDefinition
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ML_CodeListDictionarySchemaProvider")]
    public partial class ML_CodeListDictionary : global::GeoSik.Iso.Ts19139.Gmx.CodeListDictionary, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_CodeListDictionary_Type ContentField;

        public static explicit operator ML_CodeListDictionary(XElement xe) { return XTypedServices.ToXTypedElement<ML_CodeListDictionary, ML_CodeListDictionary_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// Constraint: codeEntry.type = ML_CodeListDefinition
        /// </para>
        /// </summary>
        public ML_CodeListDictionary() :
                base(true)
        {
            SetInnerType(new ML_CodeListDictionary_Type());
        }

        /// <summary>
        /// <para>
        /// Constraint: codeEntry.type = ML_CodeListDefinition
        /// </para>
        /// </summary>
        public ML_CodeListDictionary(ML_CodeListDictionary_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_CodeListDictionary_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (dictionaryEntry | indirectEntry)*, codeEntry+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<ClAlternativeExpression_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_CodeListDictionary Load(string xmlFile)
        {
            return XTypedServices.Load<ML_CodeListDictionary, ML_CodeListDictionary_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_CodeListDictionary Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_CodeListDictionary, ML_CodeListDictionary_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_CodeListDictionary Parse(string xml)
        {
            return XTypedServices.Parse<ML_CodeListDictionary, ML_CodeListDictionary_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_CodeListDictionary(((ML_CodeListDictionary_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_CodeListDictionary_Type ContentField)
        {
            this.ContentField = ((ML_CodeListDictionary_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_CodeListDictionarySchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_CodeListDictionary", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("ClAlternativeExpressionSchemaProvider")]
    public partial class ClAlternativeExpression : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ClAlternativeExpression_Type ContentField;

        public static explicit operator ClAlternativeExpression(XElement xe) { return XTypedServices.ToXTypedElement<ClAlternativeExpression, ClAlternativeExpression_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public ClAlternativeExpression()
        {
            SetInnerType(new ClAlternativeExpression_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public ClAlternativeExpression(ClAlternativeExpression_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public ClAlternativeExpression_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ClAlternativeExpression", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static ClAlternativeExpression Load(string xmlFile)
        {
            return XTypedServices.Load<ClAlternativeExpression, ClAlternativeExpression_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ClAlternativeExpression Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ClAlternativeExpression, ClAlternativeExpression_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ClAlternativeExpression Parse(string xml)
        {
            return XTypedServices.Parse<ClAlternativeExpression, ClAlternativeExpression_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ClAlternativeExpression(((ClAlternativeExpression_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ClAlternativeExpression_Type ContentField)
        {
            this.ContentField = ((ClAlternativeExpression_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ClAlternativeExpressionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ClAlternativeExpression", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CodeAlternativeExpressionSchemaProvider")]
    public partial class CodeAlternativeExpression : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CodeAlternativeExpression_Type ContentField;

        public static explicit operator CodeAlternativeExpression(XElement xe) { return XTypedServices.ToXTypedElement<CodeAlternativeExpression, CodeAlternativeExpression_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public CodeAlternativeExpression()
        {
            SetInnerType(new CodeAlternativeExpression_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public CodeAlternativeExpression(CodeAlternativeExpression_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public CodeAlternativeExpression_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale?)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CodeAlternativeExpression", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CodeAlternativeExpression Load(string xmlFile)
        {
            return XTypedServices.Load<CodeAlternativeExpression, CodeAlternativeExpression_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CodeAlternativeExpression Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CodeAlternativeExpression, CodeAlternativeExpression_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CodeAlternativeExpression Parse(string xml)
        {
            return XTypedServices.Parse<CodeAlternativeExpression, CodeAlternativeExpression_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CodeAlternativeExpression(((CodeAlternativeExpression_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CodeAlternativeExpression_Type ContentField)
        {
            this.ContentField = ((CodeAlternativeExpression_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CodeAlternativeExpressionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CodeAlternativeExpression", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_CompoundCRSSchemaProvider")]
    public partial class ML_CompoundCRS : global::GeoSik.Ogc.Gml.V321.CompoundCRS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_CompoundCRS_Type ContentField;

        public static explicit operator ML_CompoundCRS(XElement xe) { return XTypedServices.ToXTypedElement<ML_CompoundCRS, ML_CompoundCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_CompoundCRS() :
                base()
        {
            SetInnerType(new ML_CompoundCRS_Type());
        }

        public ML_CompoundCRS(ML_CompoundCRS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_CompoundCRS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, componentReferenceSystem+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CompoundCRS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_CompoundCRS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_CompoundCRS, ML_CompoundCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_CompoundCRS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_CompoundCRS, ML_CompoundCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_CompoundCRS Parse(string xml)
        {
            return XTypedServices.Parse<ML_CompoundCRS, ML_CompoundCRS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_CompoundCRS(((ML_CompoundCRS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_CompoundCRS_Type ContentField)
        {
            this.ContentField = ((ML_CompoundCRS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_CompoundCRSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_CompoundCRS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_GeodeticCRSSchemaProvider")]
    public partial class ML_GeodeticCRS : global::GeoSik.Ogc.Gml.V321.GeodeticCRS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_GeodeticCRS_Type ContentField;

        public static explicit operator ML_GeodeticCRS(XElement xe) { return XTypedServices.ToXTypedElement<ML_GeodeticCRS, ML_GeodeticCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_GeodeticCRS() :
                base()
        {
            SetInnerType(new ML_GeodeticCRS_Type());
        }

        public ML_GeodeticCRS(ML_GeodeticCRS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_GeodeticCRS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (ellipsoidalCS | cartesianCS | sphericalCS), geodeticDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_GeodeticCRS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_GeodeticCRS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_GeodeticCRS, ML_GeodeticCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_GeodeticCRS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_GeodeticCRS, ML_GeodeticCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_GeodeticCRS Parse(string xml)
        {
            return XTypedServices.Parse<ML_GeodeticCRS, ML_GeodeticCRS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_GeodeticCRS(((ML_GeodeticCRS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_GeodeticCRS_Type ContentField)
        {
            this.ContentField = ((ML_GeodeticCRS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_GeodeticCRSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_GeodeticCRS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_EngineeringCRSSchemaProvider")]
    public partial class ML_EngineeringCRS : global::GeoSik.Ogc.Gml.V321.EngineeringCRS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_EngineeringCRS_Type ContentField;

        public static explicit operator ML_EngineeringCRS(XElement xe) { return XTypedServices.ToXTypedElement<ML_EngineeringCRS, ML_EngineeringCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_EngineeringCRS() :
                base()
        {
            SetInnerType(new ML_EngineeringCRS_Type());
        }

        public ML_EngineeringCRS(ML_EngineeringCRS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_EngineeringCRS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (affineCS | cartesianCS | cylindricalCS | linearCS | polarCS | sphericalCS | userDefinedCS | coordinateSystem), engineeringDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EngineeringCRS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_EngineeringCRS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_EngineeringCRS, ML_EngineeringCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_EngineeringCRS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_EngineeringCRS, ML_EngineeringCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_EngineeringCRS Parse(string xml)
        {
            return XTypedServices.Parse<ML_EngineeringCRS, ML_EngineeringCRS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_EngineeringCRS(((ML_EngineeringCRS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_EngineeringCRS_Type ContentField)
        {
            this.ContentField = ((ML_EngineeringCRS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_EngineeringCRSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_EngineeringCRS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_VerticalCRSSchemaProvider")]
    public partial class ML_VerticalCRS : global::GeoSik.Ogc.Gml.V321.VerticalCRS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_VerticalCRS_Type ContentField;

        public static explicit operator ML_VerticalCRS(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalCRS, ML_VerticalCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_VerticalCRS() :
                base()
        {
            SetInnerType(new ML_VerticalCRS_Type());
        }

        public ML_VerticalCRS(ML_VerticalCRS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_VerticalCRS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, verticalCS, verticalDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalCRS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_VerticalCRS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_VerticalCRS, ML_VerticalCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_VerticalCRS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_VerticalCRS, ML_VerticalCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_VerticalCRS Parse(string xml)
        {
            return XTypedServices.Parse<ML_VerticalCRS, ML_VerticalCRS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_VerticalCRS(((ML_VerticalCRS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_VerticalCRS_Type ContentField)
        {
            this.ContentField = ((ML_VerticalCRS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_VerticalCRSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_VerticalCRS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_TemporalCRSSchemaProvider")]
    public partial class ML_TemporalCRS : global::GeoSik.Ogc.Gml.V321.TemporalCRS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_TemporalCRS_Type ContentField;

        public static explicit operator ML_TemporalCRS(XElement xe) { return XTypedServices.ToXTypedElement<ML_TemporalCRS, ML_TemporalCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_TemporalCRS() :
                base()
        {
            SetInnerType(new ML_TemporalCRS_Type());
        }

        public ML_TemporalCRS(ML_TemporalCRS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_TemporalCRS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (timeCS | usesTemporalCS), temporalDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TemporalCRS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_TemporalCRS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_TemporalCRS, ML_TemporalCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_TemporalCRS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_TemporalCRS, ML_TemporalCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_TemporalCRS Parse(string xml)
        {
            return XTypedServices.Parse<ML_TemporalCRS, ML_TemporalCRS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_TemporalCRS(((ML_TemporalCRS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_TemporalCRS_Type ContentField)
        {
            this.ContentField = ((ML_TemporalCRS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_TemporalCRSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_TemporalCRS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_ImageCRSSchemaProvider")]
    public partial class ML_ImageCRS : global::GeoSik.Ogc.Gml.V321.ImageCRS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_ImageCRS_Type ContentField;

        public static explicit operator ML_ImageCRS(XElement xe) { return XTypedServices.ToXTypedElement<ML_ImageCRS, ML_ImageCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_ImageCRS() :
                base()
        {
            SetInnerType(new ML_ImageCRS_Type());
        }

        public ML_ImageCRS(ML_ImageCRS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_ImageCRS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, (cartesianCS | affineCS | usesObliqueCartesianCS), imageDatum, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ImageCRS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_ImageCRS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_ImageCRS, ML_ImageCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_ImageCRS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_ImageCRS, ML_ImageCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_ImageCRS Parse(string xml)
        {
            return XTypedServices.Parse<ML_ImageCRS, ML_ImageCRS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_ImageCRS(((ML_ImageCRS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_ImageCRS_Type ContentField)
        {
            this.ContentField = ((ML_ImageCRS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_ImageCRSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_ImageCRS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_ProjectedCRSSchemaProvider")]
    public partial class ML_ProjectedCRS : global::GeoSik.Ogc.Gml.V321.ProjectedCRS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_ProjectedCRS_Type ContentField;

        public static explicit operator ML_ProjectedCRS(XElement xe) { return XTypedServices.ToXTypedElement<ML_ProjectedCRS, ML_ProjectedCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_ProjectedCRS() :
                base()
        {
            SetInnerType(new ML_ProjectedCRS_Type());
        }

        public ML_ProjectedCRS(ML_ProjectedCRS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_ProjectedCRS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, conversion, (baseGeodeticCRS | baseGeographicCRS), cartesianCS, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ProjectedCRS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_ProjectedCRS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_ProjectedCRS, ML_ProjectedCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_ProjectedCRS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_ProjectedCRS, ML_ProjectedCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_ProjectedCRS Parse(string xml)
        {
            return XTypedServices.Parse<ML_ProjectedCRS, ML_ProjectedCRS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_ProjectedCRS(((ML_ProjectedCRS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_ProjectedCRS_Type ContentField)
        {
            this.ContentField = ((ML_ProjectedCRS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_ProjectedCRSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_ProjectedCRS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_DerivedCRSSchemaProvider")]
    public partial class ML_DerivedCRS : global::GeoSik.Ogc.Gml.V321.DerivedCRS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_DerivedCRS_Type ContentField;

        public static explicit operator ML_DerivedCRS(XElement xe) { return XTypedServices.ToXTypedElement<ML_DerivedCRS, ML_DerivedCRS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_DerivedCRS() :
                base()
        {
            SetInnerType(new ML_DerivedCRS_Type());
        }

        public ML_DerivedCRS(ML_DerivedCRS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_DerivedCRS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, conversion, baseCRS, derivedCRSType, coordinateSystem, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CrsAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_DerivedCRS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_DerivedCRS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_DerivedCRS, ML_DerivedCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_DerivedCRS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_DerivedCRS, ML_DerivedCRS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_DerivedCRS Parse(string xml)
        {
            return XTypedServices.Parse<ML_DerivedCRS, ML_DerivedCRS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_DerivedCRS(((ML_DerivedCRS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_DerivedCRS_Type ContentField)
        {
            this.ContentField = ((ML_DerivedCRS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_DerivedCRSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_DerivedCRS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_CoordinateSystemAxisSchemaProvider")]
    public partial class ML_CoordinateSystemAxis : global::GeoSik.Ogc.Gml.V321.CoordinateSystemAxis, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_CoordinateSystemAxis_Type ContentField;

        public static explicit operator ML_CoordinateSystemAxis(XElement xe) { return XTypedServices.ToXTypedElement<ML_CoordinateSystemAxis, ML_CoordinateSystemAxis_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_CoordinateSystemAxis() :
                base()
        {
            SetInnerType(new ML_CoordinateSystemAxis_Type());
        }

        public ML_CoordinateSystemAxis(ML_CoordinateSystemAxis_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_CoordinateSystemAxis_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axisAbbrev, axisDirection, minimumValue?, maximumValue?, rangeMeaning?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAxisAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CoordinateSystemAxis", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_CoordinateSystemAxis Load(string xmlFile)
        {
            return XTypedServices.Load<ML_CoordinateSystemAxis, ML_CoordinateSystemAxis_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_CoordinateSystemAxis Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_CoordinateSystemAxis, ML_CoordinateSystemAxis_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_CoordinateSystemAxis Parse(string xml)
        {
            return XTypedServices.Parse<ML_CoordinateSystemAxis, ML_CoordinateSystemAxis_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_CoordinateSystemAxis(((ML_CoordinateSystemAxis_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_CoordinateSystemAxis_Type ContentField)
        {
            this.ContentField = ((ML_CoordinateSystemAxis_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_CoordinateSystemAxisSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_CoordinateSystemAxis", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_EllipsoidalCSSchemaProvider")]
    public partial class ML_EllipsoidalCS : global::GeoSik.Ogc.Gml.V321.EllipsoidalCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_EllipsoidalCS_Type ContentField;

        public static explicit operator ML_EllipsoidalCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_EllipsoidalCS, ML_EllipsoidalCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_EllipsoidalCS() :
                base()
        {
            SetInnerType(new ML_EllipsoidalCS_Type());
        }

        public ML_EllipsoidalCS(ML_EllipsoidalCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_EllipsoidalCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EllipsoidalCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_EllipsoidalCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_EllipsoidalCS, ML_EllipsoidalCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_EllipsoidalCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_EllipsoidalCS, ML_EllipsoidalCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_EllipsoidalCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_EllipsoidalCS, ML_EllipsoidalCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_EllipsoidalCS(((ML_EllipsoidalCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_EllipsoidalCS_Type ContentField)
        {
            this.ContentField = ((ML_EllipsoidalCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_EllipsoidalCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_EllipsoidalCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_CartesianCSSchemaProvider")]
    public partial class ML_CartesianCS : global::GeoSik.Ogc.Gml.V321.CartesianCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_CartesianCS_Type ContentField;

        public static explicit operator ML_CartesianCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_CartesianCS, ML_CartesianCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_CartesianCS() :
                base()
        {
            SetInnerType(new ML_CartesianCS_Type());
        }

        public ML_CartesianCS(ML_CartesianCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_CartesianCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CartesianCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_CartesianCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_CartesianCS, ML_CartesianCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_CartesianCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_CartesianCS, ML_CartesianCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_CartesianCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_CartesianCS, ML_CartesianCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_CartesianCS(((ML_CartesianCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_CartesianCS_Type ContentField)
        {
            this.ContentField = ((ML_CartesianCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_CartesianCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_CartesianCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_AffineCSSchemaProvider")]
    public partial class ML_AffineCS : global::GeoSik.Ogc.Gml.V321.AffineCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_AffineCS_Type ContentField;

        public static explicit operator ML_AffineCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_AffineCS, ML_AffineCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_AffineCS() :
                base()
        {
            SetInnerType(new ML_AffineCS_Type());
        }

        public ML_AffineCS(ML_AffineCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_AffineCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_AffineCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_AffineCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_AffineCS, ML_AffineCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_AffineCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_AffineCS, ML_AffineCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_AffineCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_AffineCS, ML_AffineCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_AffineCS(((ML_AffineCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_AffineCS_Type ContentField)
        {
            this.ContentField = ((ML_AffineCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_AffineCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_AffineCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_UserDefinedCSSchemaProvider")]
    public partial class ML_UserDefinedCS : global::GeoSik.Ogc.Gml.V321.UserDefinedCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_UserDefinedCS_Type ContentField;

        public static explicit operator ML_UserDefinedCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_UserDefinedCS, ML_UserDefinedCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_UserDefinedCS() :
                base()
        {
            SetInnerType(new ML_UserDefinedCS_Type());
        }

        public ML_UserDefinedCS(ML_UserDefinedCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_UserDefinedCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_UserDefinedCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_UserDefinedCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_UserDefinedCS, ML_UserDefinedCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_UserDefinedCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_UserDefinedCS, ML_UserDefinedCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_UserDefinedCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_UserDefinedCS, ML_UserDefinedCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_UserDefinedCS(((ML_UserDefinedCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_UserDefinedCS_Type ContentField)
        {
            this.ContentField = ((ML_UserDefinedCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_UserDefinedCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_UserDefinedCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_VerticalCSSchemaProvider")]
    public partial class ML_VerticalCS : global::GeoSik.Ogc.Gml.V321.VerticalCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_VerticalCS_Type ContentField;

        public static explicit operator ML_VerticalCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalCS, ML_VerticalCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_VerticalCS() :
                base()
        {
            SetInnerType(new ML_VerticalCS_Type());
        }

        public ML_VerticalCS(ML_VerticalCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_VerticalCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_VerticalCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_VerticalCS, ML_VerticalCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_VerticalCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_VerticalCS, ML_VerticalCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_VerticalCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_VerticalCS, ML_VerticalCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_VerticalCS(((ML_VerticalCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_VerticalCS_Type ContentField)
        {
            this.ContentField = ((ML_VerticalCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_VerticalCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_VerticalCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_TimeCSSchemaProvider")]
    public partial class ML_TimeCS : global::GeoSik.Ogc.Gml.V321.TimeCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_TimeCS_Type ContentField;

        public static explicit operator ML_TimeCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_TimeCS, ML_TimeCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_TimeCS() :
                base()
        {
            SetInnerType(new ML_TimeCS_Type());
        }

        public ML_TimeCS(ML_TimeCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_TimeCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TimeCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_TimeCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_TimeCS, ML_TimeCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_TimeCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_TimeCS, ML_TimeCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_TimeCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_TimeCS, ML_TimeCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_TimeCS(((ML_TimeCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_TimeCS_Type ContentField)
        {
            this.ContentField = ((ML_TimeCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_TimeCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_TimeCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_CylindricalCSSchemaProvider")]
    public partial class ML_CylindricalCS : global::GeoSik.Ogc.Gml.V321.CylindricalCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_CylindricalCS_Type ContentField;

        public static explicit operator ML_CylindricalCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_CylindricalCS, ML_CylindricalCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_CylindricalCS() :
                base()
        {
            SetInnerType(new ML_CylindricalCS_Type());
        }

        public ML_CylindricalCS(ML_CylindricalCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_CylindricalCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_CylindricalCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_CylindricalCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_CylindricalCS, ML_CylindricalCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_CylindricalCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_CylindricalCS, ML_CylindricalCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_CylindricalCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_CylindricalCS, ML_CylindricalCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_CylindricalCS(((ML_CylindricalCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_CylindricalCS_Type ContentField)
        {
            this.ContentField = ((ML_CylindricalCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_CylindricalCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_CylindricalCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_SphericalCSSchemaProvider")]
    public partial class ML_SphericalCS : global::GeoSik.Ogc.Gml.V321.SphericalCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_SphericalCS_Type ContentField;

        public static explicit operator ML_SphericalCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_SphericalCS, ML_SphericalCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_SphericalCS() :
                base()
        {
            SetInnerType(new ML_SphericalCS_Type());
        }

        public ML_SphericalCS(ML_SphericalCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_SphericalCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_SphericalCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_SphericalCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_SphericalCS, ML_SphericalCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_SphericalCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_SphericalCS, ML_SphericalCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_SphericalCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_SphericalCS, ML_SphericalCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_SphericalCS(((ML_SphericalCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_SphericalCS_Type ContentField)
        {
            this.ContentField = ((ML_SphericalCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_SphericalCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_SphericalCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_PolarCSSchemaProvider")]
    public partial class ML_PolarCS : global::GeoSik.Ogc.Gml.V321.PolarCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_PolarCS_Type ContentField;

        public static explicit operator ML_PolarCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_PolarCS, ML_PolarCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_PolarCS() :
                base()
        {
            SetInnerType(new ML_PolarCS_Type());
        }

        public ML_PolarCS(ML_PolarCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_PolarCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PolarCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_PolarCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_PolarCS, ML_PolarCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_PolarCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_PolarCS, ML_PolarCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_PolarCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_PolarCS, ML_PolarCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_PolarCS(((ML_PolarCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_PolarCS_Type ContentField)
        {
            this.ContentField = ((ML_PolarCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_PolarCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_PolarCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_LinearCSSchemaProvider")]
    public partial class ML_LinearCS : global::GeoSik.Ogc.Gml.V321.LinearCS, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_LinearCS_Type ContentField;

        public static explicit operator ML_LinearCS(XElement xe) { return XTypedServices.ToXTypedElement<ML_LinearCS, ML_LinearCS_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_LinearCS() :
                base()
        {
            SetInnerType(new ML_LinearCS_Type());
        }

        public ML_LinearCS(ML_LinearCS_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_LinearCS_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axis+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<CoordinateSystemAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_LinearCS", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_LinearCS Load(string xmlFile)
        {
            return XTypedServices.Load<ML_LinearCS, ML_LinearCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_LinearCS Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_LinearCS, ML_LinearCS_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_LinearCS Parse(string xml)
        {
            return XTypedServices.Parse<ML_LinearCS, ML_LinearCS_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_LinearCS(((ML_LinearCS_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_LinearCS_Type ContentField)
        {
            this.ContentField = ((ML_LinearCS_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_LinearCSSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_LinearCS", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_EllipsoidSchemaProvider")]
    public partial class ML_Ellipsoid : global::GeoSik.Ogc.Gml.V321.Ellipsoid1, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_Ellipsoid_Type ContentField;

        public static explicit operator ML_Ellipsoid(XElement xe) { return XTypedServices.ToXTypedElement<ML_Ellipsoid, ML_Ellipsoid_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_Ellipsoid() :
                base()
        {
            SetInnerType(new ML_Ellipsoid_Type());
        }

        public ML_Ellipsoid(ML_Ellipsoid_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_Ellipsoid_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, semiMajorAxis, secondDefiningParameter, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<EllipsoidAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Ellipsoid", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_Ellipsoid Load(string xmlFile)
        {
            return XTypedServices.Load<ML_Ellipsoid, ML_Ellipsoid_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_Ellipsoid Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_Ellipsoid, ML_Ellipsoid_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_Ellipsoid Parse(string xml)
        {
            return XTypedServices.Parse<ML_Ellipsoid, ML_Ellipsoid_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_Ellipsoid(((ML_Ellipsoid_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_Ellipsoid_Type ContentField)
        {
            this.ContentField = ((ML_Ellipsoid_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_EllipsoidSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_Ellipsoid", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_PrimeMeridianSchemaProvider")]
    public partial class ML_PrimeMeridian : global::GeoSik.Ogc.Gml.V321.PrimeMeridian1, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_PrimeMeridian_Type ContentField;

        public static explicit operator ML_PrimeMeridian(XElement xe) { return XTypedServices.ToXTypedElement<ML_PrimeMeridian, ML_PrimeMeridian_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_PrimeMeridian() :
                base()
        {
            SetInnerType(new ML_PrimeMeridian_Type());
        }

        public ML_PrimeMeridian(ML_PrimeMeridian_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_PrimeMeridian_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, greenwichLongitude, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<PrimeMeridianAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PrimeMeridian", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_PrimeMeridian Load(string xmlFile)
        {
            return XTypedServices.Load<ML_PrimeMeridian, ML_PrimeMeridian_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_PrimeMeridian Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_PrimeMeridian, ML_PrimeMeridian_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_PrimeMeridian Parse(string xml)
        {
            return XTypedServices.Parse<ML_PrimeMeridian, ML_PrimeMeridian_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_PrimeMeridian(((ML_PrimeMeridian_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_PrimeMeridian_Type ContentField)
        {
            this.ContentField = ((ML_PrimeMeridian_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_PrimeMeridianSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_PrimeMeridian", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_TemporalDatumSchemaProvider")]
    public partial class ML_TemporalDatum : global::GeoSik.Ogc.Gml.V321.TemporalDatum, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_TemporalDatum_Type ContentField;

        public static explicit operator ML_TemporalDatum(XElement xe) { return XTypedServices.ToXTypedElement<ML_TemporalDatum, ML_TemporalDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_TemporalDatum() :
                base()
        {
            SetInnerType(new ML_TemporalDatum_Type());
        }

        public ML_TemporalDatum(ML_TemporalDatum_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_TemporalDatum_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, origin, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_TemporalDatum", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_TemporalDatum Load(string xmlFile)
        {
            return XTypedServices.Load<ML_TemporalDatum, ML_TemporalDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_TemporalDatum Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_TemporalDatum, ML_TemporalDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_TemporalDatum Parse(string xml)
        {
            return XTypedServices.Parse<ML_TemporalDatum, ML_TemporalDatum_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_TemporalDatum(((ML_TemporalDatum_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_TemporalDatum_Type ContentField)
        {
            this.ContentField = ((ML_TemporalDatum_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_TemporalDatumSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_TemporalDatum", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_VerticalDatumSchemaProvider")]
    public partial class ML_VerticalDatum : global::GeoSik.Ogc.Gml.V321.VerticalDatum, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_VerticalDatum_Type ContentField;

        public static explicit operator ML_VerticalDatum(XElement xe) { return XTypedServices.ToXTypedElement<ML_VerticalDatum, ML_VerticalDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_VerticalDatum() :
                base()
        {
            SetInnerType(new ML_VerticalDatum_Type());
        }

        public ML_VerticalDatum(ML_VerticalDatum_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_VerticalDatum_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_VerticalDatum", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_VerticalDatum Load(string xmlFile)
        {
            return XTypedServices.Load<ML_VerticalDatum, ML_VerticalDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_VerticalDatum Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_VerticalDatum, ML_VerticalDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_VerticalDatum Parse(string xml)
        {
            return XTypedServices.Parse<ML_VerticalDatum, ML_VerticalDatum_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_VerticalDatum(((ML_VerticalDatum_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_VerticalDatum_Type ContentField)
        {
            this.ContentField = ((ML_VerticalDatum_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_VerticalDatumSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_VerticalDatum", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_ImageDatumSchemaProvider")]
    public partial class ML_ImageDatum : global::GeoSik.Ogc.Gml.V321.ImageDatum, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_ImageDatum_Type ContentField;

        public static explicit operator ML_ImageDatum(XElement xe) { return XTypedServices.ToXTypedElement<ML_ImageDatum, ML_ImageDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_ImageDatum() :
                base()
        {
            SetInnerType(new ML_ImageDatum_Type());
        }

        public ML_ImageDatum(ML_ImageDatum_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_ImageDatum_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, pixelInCell, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ImageDatum", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_ImageDatum Load(string xmlFile)
        {
            return XTypedServices.Load<ML_ImageDatum, ML_ImageDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_ImageDatum Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_ImageDatum, ML_ImageDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_ImageDatum Parse(string xml)
        {
            return XTypedServices.Parse<ML_ImageDatum, ML_ImageDatum_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_ImageDatum(((ML_ImageDatum_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_ImageDatum_Type ContentField)
        {
            this.ContentField = ((ML_ImageDatum_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_ImageDatumSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_ImageDatum", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_EngineeringDatumSchemaProvider")]
    public partial class ML_EngineeringDatum : global::GeoSik.Ogc.Gml.V321.EngineeringDatum, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_EngineeringDatum_Type ContentField;

        public static explicit operator ML_EngineeringDatum(XElement xe) { return XTypedServices.ToXTypedElement<ML_EngineeringDatum, ML_EngineeringDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_EngineeringDatum() :
                base()
        {
            SetInnerType(new ML_EngineeringDatum_Type());
        }

        public ML_EngineeringDatum(ML_EngineeringDatum_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_EngineeringDatum_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_EngineeringDatum", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_EngineeringDatum Load(string xmlFile)
        {
            return XTypedServices.Load<ML_EngineeringDatum, ML_EngineeringDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_EngineeringDatum Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_EngineeringDatum, ML_EngineeringDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_EngineeringDatum Parse(string xml)
        {
            return XTypedServices.Parse<ML_EngineeringDatum, ML_EngineeringDatum_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_EngineeringDatum(((ML_EngineeringDatum_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_EngineeringDatum_Type ContentField)
        {
            this.ContentField = ((ML_EngineeringDatum_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_EngineeringDatumSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_EngineeringDatum", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_GeodeticDatumSchemaProvider")]
    public partial class ML_GeodeticDatum : global::GeoSik.Ogc.Gml.V321.GeodeticDatum, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_GeodeticDatum_Type ContentField;

        public static explicit operator ML_GeodeticDatum(XElement xe) { return XTypedServices.ToXTypedElement<ML_GeodeticDatum, ML_GeodeticDatum_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_GeodeticDatum() :
                base()
        {
            SetInnerType(new ML_GeodeticDatum_Type());
        }

        public ML_GeodeticDatum(ML_GeodeticDatum_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_GeodeticDatum_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, primeMeridian, ellipsoid, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<DatumAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_GeodeticDatum", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_GeodeticDatum Load(string xmlFile)
        {
            return XTypedServices.Load<ML_GeodeticDatum, ML_GeodeticDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_GeodeticDatum Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_GeodeticDatum, ML_GeodeticDatum_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_GeodeticDatum Parse(string xml)
        {
            return XTypedServices.Parse<ML_GeodeticDatum, ML_GeodeticDatum_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_GeodeticDatum(((ML_GeodeticDatum_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_GeodeticDatum_Type ContentField)
        {
            this.ContentField = ((ML_GeodeticDatum_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_GeodeticDatumSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_GeodeticDatum", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_ConcatenatedOperationSchemaProvider")]
    public partial class ML_ConcatenatedOperation : global::GeoSik.Ogc.Gml.V321.ConcatenatedOperation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_ConcatenatedOperation_Type ContentField;

        public static explicit operator ML_ConcatenatedOperation(XElement xe) { return XTypedServices.ToXTypedElement<ML_ConcatenatedOperation, ML_ConcatenatedOperation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_ConcatenatedOperation() :
                base()
        {
            SetInnerType(new ML_ConcatenatedOperation_Type());
        }

        public ML_ConcatenatedOperation(ML_ConcatenatedOperation_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_ConcatenatedOperation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, coordOperation+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_ConcatenatedOperation", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_ConcatenatedOperation Load(string xmlFile)
        {
            return XTypedServices.Load<ML_ConcatenatedOperation, ML_ConcatenatedOperation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_ConcatenatedOperation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_ConcatenatedOperation, ML_ConcatenatedOperation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_ConcatenatedOperation Parse(string xml)
        {
            return XTypedServices.Parse<ML_ConcatenatedOperation, ML_ConcatenatedOperation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_ConcatenatedOperation(((ML_ConcatenatedOperation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_ConcatenatedOperation_Type ContentField)
        {
            this.ContentField = ((ML_ConcatenatedOperation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_ConcatenatedOperationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_ConcatenatedOperation", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_PassThroughOperationSchemaProvider")]
    public partial class ML_PassThroughOperation : global::GeoSik.Ogc.Gml.V321.PassThroughOperation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_PassThroughOperation_Type ContentField;

        public static explicit operator ML_PassThroughOperation(XElement xe) { return XTypedServices.ToXTypedElement<ML_PassThroughOperation, ML_PassThroughOperation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_PassThroughOperation() :
                base()
        {
            SetInnerType(new ML_PassThroughOperation_Type());
        }

        public ML_PassThroughOperation(ML_PassThroughOperation_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_PassThroughOperation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, modifiedCoordinate+, coordOperation, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_PassThroughOperation", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_PassThroughOperation Load(string xmlFile)
        {
            return XTypedServices.Load<ML_PassThroughOperation, ML_PassThroughOperation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_PassThroughOperation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_PassThroughOperation, ML_PassThroughOperation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_PassThroughOperation Parse(string xml)
        {
            return XTypedServices.Parse<ML_PassThroughOperation, ML_PassThroughOperation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_PassThroughOperation(((ML_PassThroughOperation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_PassThroughOperation_Type ContentField)
        {
            this.ContentField = ((ML_PassThroughOperation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_PassThroughOperationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_PassThroughOperation", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_TransformationSchemaProvider")]
    public partial class ML_Transformation : global::GeoSik.Ogc.Gml.V321.Transformation, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_Transformation_Type ContentField;

        public static explicit operator ML_Transformation(XElement xe) { return XTypedServices.ToXTypedElement<ML_Transformation, ML_Transformation_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_Transformation() :
                base()
        {
            SetInnerType(new ML_Transformation_Type());
        }

        public ML_Transformation(ML_Transformation_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_Transformation_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion, coordinateOperationAccuracy*, sourceCRS, targetCRS, method, parameterValue*, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Transformation", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_Transformation Load(string xmlFile)
        {
            return XTypedServices.Load<ML_Transformation, ML_Transformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_Transformation Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_Transformation, ML_Transformation_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_Transformation Parse(string xml)
        {
            return XTypedServices.Parse<ML_Transformation, ML_Transformation_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_Transformation(((ML_Transformation_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_Transformation_Type ContentField)
        {
            this.ContentField = ((ML_Transformation_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_TransformationSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_Transformation", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_ConversionSchemaProvider")]
    public partial class ML_Conversion : global::GeoSik.Ogc.Gml.V321.Conversion, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_Conversion_Type ContentField;

        public static explicit operator ML_Conversion(XElement xe) { return XTypedServices.ToXTypedElement<ML_Conversion, ML_Conversion_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_Conversion() :
                base()
        {
            SetInnerType(new ML_Conversion_Type());
        }

        public ML_Conversion(ML_Conversion_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_Conversion_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, coordinateOperationAccuracy*, method, parameterValue*, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_Conversion", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_Conversion Load(string xmlFile)
        {
            return XTypedServices.Load<ML_Conversion, ML_Conversion_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_Conversion Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_Conversion, ML_Conversion_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_Conversion Parse(string xml)
        {
            return XTypedServices.Parse<ML_Conversion, ML_Conversion_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_Conversion(((ML_Conversion_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_Conversion_Type ContentField)
        {
            this.ContentField = ((ML_Conversion_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_ConversionSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_Conversion", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_OperationMethodSchemaProvider")]
    public partial class ML_OperationMethod : global::GeoSik.Ogc.Gml.V321.OperationMethod, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_OperationMethod_Type ContentField;

        public static explicit operator ML_OperationMethod(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationMethod, ML_OperationMethod_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_OperationMethod() :
                base()
        {
            SetInnerType(new ML_OperationMethod_Type());
        }

        public ML_OperationMethod(ML_OperationMethod_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_OperationMethod_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, (formulaCitation | formula), sourceDimensions?, targetDimensions?, parameter*, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationMethodAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationMethod", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_OperationMethod Load(string xmlFile)
        {
            return XTypedServices.Load<ML_OperationMethod, ML_OperationMethod_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_OperationMethod Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_OperationMethod, ML_OperationMethod_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_OperationMethod Parse(string xml)
        {
            return XTypedServices.Parse<ML_OperationMethod, ML_OperationMethod_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_OperationMethod(((ML_OperationMethod_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_OperationMethod_Type ContentField)
        {
            this.ContentField = ((ML_OperationMethod_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_OperationMethodSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_OperationMethod", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_OperationParameterGroupSchemaProvider")]
    public partial class ML_OperationParameterGroup : global::GeoSik.Ogc.Gml.V321.OperationParameterGroup, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_OperationParameterGroup_Type ContentField;

        public static explicit operator ML_OperationParameterGroup(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationParameterGroup, ML_OperationParameterGroup_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_OperationParameterGroup() :
                base()
        {
            SetInnerType(new ML_OperationParameterGroup_Type());
        }

        public ML_OperationParameterGroup(ML_OperationParameterGroup_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_OperationParameterGroup_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, maximumOccurs?, parameter+, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationParameterAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationParameterGroup", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_OperationParameterGroup Load(string xmlFile)
        {
            return XTypedServices.Load<ML_OperationParameterGroup, ML_OperationParameterGroup_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_OperationParameterGroup Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_OperationParameterGroup, ML_OperationParameterGroup_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_OperationParameterGroup Parse(string xml)
        {
            return XTypedServices.Parse<ML_OperationParameterGroup, ML_OperationParameterGroup_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_OperationParameterGroup(((ML_OperationParameterGroup_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_OperationParameterGroup_Type ContentField)
        {
            this.ContentField = ((ML_OperationParameterGroup_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_OperationParameterGroupSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_OperationParameterGroup", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("ML_OperationParameterSchemaProvider")]
    public partial class ML_OperationParameter : global::GeoSik.Ogc.Gml.V321.OperationParameter1, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private ML_OperationParameter_Type ContentField;

        public static explicit operator ML_OperationParameter(XElement xe) { return XTypedServices.ToXTypedElement<ML_OperationParameter, ML_OperationParameter_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public ML_OperationParameter() :
                base()
        {
            SetInnerType(new ML_OperationParameter_Type());
        }

        public ML_OperationParameter(ML_OperationParameter_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new ML_OperationParameter_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, alternativeExpression+)
        /// </para>
        /// </summary>
        public IList<OperationParameterAlt_PropertyType> alternativeExpression
        {
            get
            {
                return this.ContentField.alternativeExpression;
            }
            set
            {
                this.ContentField.alternativeExpression = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("ML_OperationParameter", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static ML_OperationParameter Load(string xmlFile)
        {
            return XTypedServices.Load<ML_OperationParameter, ML_OperationParameter_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static ML_OperationParameter Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<ML_OperationParameter, ML_OperationParameter_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static ML_OperationParameter Parse(string xml)
        {
            return XTypedServices.Parse<ML_OperationParameter, ML_OperationParameter_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new ML_OperationParameter(((ML_OperationParameter_Type)(this.Content.Clone())));
        }

        private void SetInnerType(ML_OperationParameter_Type ContentField)
        {
            this.ContentField = ((ML_OperationParameter_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType ML_OperationParameterSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("ML_OperationParameter", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CrsAltSchemaProvider")]
    public partial class CrsAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CrsAlt_Type ContentField;

        public static explicit operator CrsAlt(XElement xe) { return XTypedServices.ToXTypedElement<CrsAlt, CrsAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public CrsAlt()
        {
            SetInnerType(new CrsAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public CrsAlt(CrsAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public CrsAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity*, scope+, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CrsAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CrsAlt Load(string xmlFile)
        {
            return XTypedServices.Load<CrsAlt, CrsAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CrsAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CrsAlt, CrsAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CrsAlt Parse(string xml)
        {
            return XTypedServices.Parse<CrsAlt, CrsAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CrsAlt(((CrsAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CrsAlt_Type ContentField)
        {
            this.ContentField = ((CrsAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CrsAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CrsAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CoordinateSystemAltSchemaProvider")]
    public partial class CoordinateSystemAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CoordinateSystemAlt_Type ContentField;

        public static explicit operator CoordinateSystemAlt(XElement xe) { return XTypedServices.ToXTypedElement<CoordinateSystemAlt, CoordinateSystemAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public CoordinateSystemAlt()
        {
            SetInnerType(new CoordinateSystemAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public CoordinateSystemAlt(CoordinateSystemAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public CoordinateSystemAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string aggregationType
        {
            get
            {
                return this.ContentField.aggregationType;
            }
            set
            {
                this.ContentField.aggregationType = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CoordinateSystemAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CoordinateSystemAlt Load(string xmlFile)
        {
            return XTypedServices.Load<CoordinateSystemAlt, CoordinateSystemAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CoordinateSystemAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CoordinateSystemAlt, CoordinateSystemAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CoordinateSystemAlt Parse(string xml)
        {
            return XTypedServices.Parse<CoordinateSystemAlt, CoordinateSystemAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CoordinateSystemAlt(((CoordinateSystemAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CoordinateSystemAlt_Type ContentField)
        {
            this.ContentField = ((CoordinateSystemAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CoordinateSystemAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CoordinateSystemAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("CoordinateSystemAxisAltSchemaProvider")]
    public partial class CoordinateSystemAxisAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CoordinateSystemAxisAlt_Type ContentField;

        public static explicit operator CoordinateSystemAxisAlt(XElement xe) { return XTypedServices.ToXTypedElement<CoordinateSystemAxisAlt, CoordinateSystemAxisAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public CoordinateSystemAxisAlt()
        {
            SetInnerType(new CoordinateSystemAxisAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public CoordinateSystemAxisAlt(CoordinateSystemAxisAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public CoordinateSystemAxisAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, axisAbbrev, axisDirection, minimumValue?, maximumValue?, rangeMeaning?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CoordinateSystemAxisAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static CoordinateSystemAxisAlt Load(string xmlFile)
        {
            return XTypedServices.Load<CoordinateSystemAxisAlt, CoordinateSystemAxisAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CoordinateSystemAxisAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CoordinateSystemAxisAlt, CoordinateSystemAxisAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CoordinateSystemAxisAlt Parse(string xml)
        {
            return XTypedServices.Parse<CoordinateSystemAxisAlt, CoordinateSystemAxisAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CoordinateSystemAxisAlt(((CoordinateSystemAxisAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CoordinateSystemAxisAlt_Type ContentField)
        {
            this.ContentField = ((CoordinateSystemAxisAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CoordinateSystemAxisAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CoordinateSystemAxisAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("DatumAltSchemaProvider")]
    public partial class DatumAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private DatumAlt_Type ContentField;

        public static explicit operator DatumAlt(XElement xe) { return XTypedServices.ToXTypedElement<DatumAlt, DatumAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public DatumAlt()
        {
            SetInnerType(new DatumAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public DatumAlt(DatumAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public DatumAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, anchorDefinition?, realizationEpoch?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("DatumAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static DatumAlt Load(string xmlFile)
        {
            return XTypedServices.Load<DatumAlt, DatumAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DatumAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<DatumAlt, DatumAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static DatumAlt Parse(string xml)
        {
            return XTypedServices.Parse<DatumAlt, DatumAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new DatumAlt(((DatumAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(DatumAlt_Type ContentField)
        {
            this.ContentField = ((DatumAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType DatumAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("DatumAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("EllipsoidAltSchemaProvider")]
    public partial class EllipsoidAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private EllipsoidAlt_Type ContentField;

        public static explicit operator EllipsoidAlt(XElement xe) { return XTypedServices.ToXTypedElement<EllipsoidAlt, EllipsoidAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public EllipsoidAlt()
        {
            SetInnerType(new EllipsoidAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public EllipsoidAlt(EllipsoidAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public EllipsoidAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("EllipsoidAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static EllipsoidAlt Load(string xmlFile)
        {
            return XTypedServices.Load<EllipsoidAlt, EllipsoidAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EllipsoidAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<EllipsoidAlt, EllipsoidAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static EllipsoidAlt Parse(string xml)
        {
            return XTypedServices.Parse<EllipsoidAlt, EllipsoidAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new EllipsoidAlt(((EllipsoidAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(EllipsoidAlt_Type ContentField)
        {
            this.ContentField = ((EllipsoidAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType EllipsoidAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("EllipsoidAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("PrimeMeridianAltSchemaProvider")]
    public partial class PrimeMeridianAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private PrimeMeridianAlt_Type ContentField;

        public static explicit operator PrimeMeridianAlt(XElement xe) { return XTypedServices.ToXTypedElement<PrimeMeridianAlt, PrimeMeridianAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public PrimeMeridianAlt()
        {
            SetInnerType(new PrimeMeridianAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public PrimeMeridianAlt(PrimeMeridianAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public PrimeMeridianAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("PrimeMeridianAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static PrimeMeridianAlt Load(string xmlFile)
        {
            return XTypedServices.Load<PrimeMeridianAlt, PrimeMeridianAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static PrimeMeridianAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<PrimeMeridianAlt, PrimeMeridianAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static PrimeMeridianAlt Parse(string xml)
        {
            return XTypedServices.Parse<PrimeMeridianAlt, PrimeMeridianAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new PrimeMeridianAlt(((PrimeMeridianAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(PrimeMeridianAlt_Type ContentField)
        {
            this.ContentField = ((PrimeMeridianAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType PrimeMeridianAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("PrimeMeridianAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationAltSchemaProvider")]
    public partial class OperationAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private OperationAlt_Type ContentField;

        public static explicit operator OperationAlt(XElement xe) { return XTypedServices.ToXTypedElement<OperationAlt, OperationAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public OperationAlt()
        {
            SetInnerType(new OperationAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public OperationAlt(OperationAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public OperationAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, domainOfValidity?, scope+, operationVersion?, coordinateOperationAccuracy*, sourceCRS?, targetCRS?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static OperationAlt Load(string xmlFile)
        {
            return XTypedServices.Load<OperationAlt, OperationAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static OperationAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<OperationAlt, OperationAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static OperationAlt Parse(string xml)
        {
            return XTypedServices.Parse<OperationAlt, OperationAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new OperationAlt(((OperationAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(OperationAlt_Type ContentField)
        {
            this.ContentField = ((OperationAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType OperationAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("OperationAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationMethodAltSchemaProvider")]
    public partial class OperationMethodAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private OperationMethodAlt_Type ContentField;

        public static explicit operator OperationMethodAlt(XElement xe) { return XTypedServices.ToXTypedElement<OperationMethodAlt, OperationMethodAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public OperationMethodAlt()
        {
            SetInnerType(new OperationMethodAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public OperationMethodAlt(OperationMethodAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public OperationMethodAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationMethodAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static OperationMethodAlt Load(string xmlFile)
        {
            return XTypedServices.Load<OperationMethodAlt, OperationMethodAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static OperationMethodAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<OperationMethodAlt, OperationMethodAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static OperationMethodAlt Parse(string xml)
        {
            return XTypedServices.Parse<OperationMethodAlt, OperationMethodAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new OperationMethodAlt(((OperationMethodAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(OperationMethodAlt_Type ContentField)
        {
            this.ContentField = ((OperationMethodAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType OperationMethodAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("OperationMethodAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    /// <summary>
    /// <para>
    /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
    /// </para>
    /// </summary>
    [XmlSchemaProviderAttribute("OperationParameterAltSchemaProvider")]
    public partial class OperationParameterAlt : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private OperationParameterAlt_Type ContentField;

        public static explicit operator OperationParameterAlt(XElement xe) { return XTypedServices.ToXTypedElement<OperationParameterAlt, OperationParameterAlt_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public OperationParameterAlt()
        {
            SetInnerType(new OperationParameterAlt_Type());
        }

        /// <summary>
        /// <para>
        /// XML attributes contraints: - 1) Id is mandatory - 2) codeSpace (type xsd:anyURI) is mandatory
        /// </para>
        /// </summary>
        public OperationParameterAlt(OperationParameterAlt_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public OperationParameterAlt_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (metaDataProperty*, description?, descriptionReference?, identifier, name*, remarks?, minimumOccurs?, locale)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public System.Uri codeSpace
        {
            get
            {
                return this.ContentField.codeSpace;
            }
            set
            {
                this.ContentField.codeSpace = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("OperationParameterAlt", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static OperationParameterAlt Load(string xmlFile)
        {
            return XTypedServices.Load<OperationParameterAlt, OperationParameterAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static OperationParameterAlt Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<OperationParameterAlt, OperationParameterAlt_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static OperationParameterAlt Parse(string xml)
        {
            return XTypedServices.Parse<OperationParameterAlt, OperationParameterAlt_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new OperationParameterAlt(((OperationParameterAlt_Type)(this.Content.Clone())));
        }

        private void SetInnerType(OperationParameterAlt_Type ContentField)
        {
            this.ContentField = ((OperationParameterAlt_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType OperationParameterAltSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("OperationParameterAlt", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractCT_CatalogueSchemaProvider")]
    public abstract partial class AbstractCT_Catalogue : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractCT_Catalogue_Type ContentField;

        public static explicit operator AbstractCT_Catalogue(XElement xe) { return (AbstractCT_Catalogue)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractCT_Catalogue(bool setNull)
        {
        }

        public AbstractCT_Catalogue()
        {
            throw new InvalidOperationException();
        }

        public AbstractCT_Catalogue(AbstractCT_Catalogue_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                if ((this.ContentField != null))
                {
                    this.ContentField.Untyped = value;
                }
            }
        }

        public AbstractCT_Catalogue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType name
        {
            get
            {
                return this.ContentField.name;
            }
            set
            {
                this.ContentField.name = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> scope
        {
            get
            {
                return this.ContentField.scope;
            }
            set
            {
                this.ContentField.scope = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType> fieldOfApplication
        {
            get
            {
                return this.ContentField.fieldOfApplication;
            }
            set
            {
                this.ContentField.fieldOfApplication = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType versionNumber
        {
            get
            {
                return this.ContentField.versionNumber;
            }
            set
            {
                this.ContentField.versionNumber = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.Date_PropertyType versionDate
        {
            get
            {
                return this.ContentField.versionDate;
            }
            set
            {
                this.ContentField.versionDate = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType language
        {
            get
            {
                return this.ContentField.language;
            }
            set
            {
                this.ContentField.language = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.MD_CharacterSetCode_PropertyType characterSet
        {
            get
            {
                return this.ContentField.characterSet;
            }
            set
            {
                this.ContentField.characterSet = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gmd.PT_Locale_PropertyType> locale
        {
            get
            {
                return this.ContentField.locale;
            }
            set
            {
                this.ContentField.locale = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*)
        /// </para>
        /// </summary>
        public IList<CT_Catalogue_PropertyType> subCatalogue
        {
            get
            {
                return this.ContentField.subCatalogue;
            }
            set
            {
                this.ContentField.subCatalogue = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractCT_Catalogue", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractCT_Catalogue Load(string xmlFile)
        {
            return ((AbstractCT_Catalogue)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractCT_Catalogue Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractCT_Catalogue)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractCT_Catalogue Parse(string xml)
        {
            return ((AbstractCT_Catalogue)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractCT_Catalogue_Type ContentField)
        {
            this.ContentField = ((AbstractCT_Catalogue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractCT_Catalogue_Type ContentField)
        {
            this.ContentField = ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractCT_CatalogueSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractCT_Catalogue", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CT_CodelistCatalogueSchemaProvider")]
    public partial class CT_CodelistCatalogue : global::GeoSik.Iso.Ts19139.Gmx.AbstractCT_Catalogue, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CT_CodelistCatalogue_Type ContentField;

        public static explicit operator CT_CodelistCatalogue(XElement xe) { return XTypedServices.ToXTypedElement<CT_CodelistCatalogue, CT_CodelistCatalogue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CT_CodelistCatalogue() :
                base(true)
        {
            SetInnerType(new CT_CodelistCatalogue_Type());
        }

        public CT_CodelistCatalogue(CT_CodelistCatalogue_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new CT_CodelistCatalogue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, codelistItem+)
        /// </para>
        /// </summary>
        public IList<CT_Codelist_PropertyType> codelistItem
        {
            get
            {
                return this.ContentField.codelistItem;
            }
            set
            {
                this.ContentField.codelistItem = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CodelistCatalogue", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CT_CodelistCatalogue Load(string xmlFile)
        {
            return XTypedServices.Load<CT_CodelistCatalogue, CT_CodelistCatalogue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CT_CodelistCatalogue Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CT_CodelistCatalogue, CT_CodelistCatalogue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static CT_CodelistCatalogue Parse(string xml)
        {
            return XTypedServices.Parse<CT_CodelistCatalogue, CT_CodelistCatalogue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CT_CodelistCatalogue(((CT_CodelistCatalogue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CT_CodelistCatalogue_Type ContentField)
        {
            this.ContentField = ((CT_CodelistCatalogue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CT_CodelistCatalogueSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CT_CodelistCatalogue", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CT_CrsCatalogueSchemaProvider")]
    public partial class CT_CrsCatalogue : global::GeoSik.Iso.Ts19139.Gmx.AbstractCT_Catalogue, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CT_CrsCatalogue_Type ContentField;

        public static explicit operator CT_CrsCatalogue(XElement xe) { return XTypedServices.ToXTypedElement<CT_CrsCatalogue, CT_CrsCatalogue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CT_CrsCatalogue() :
                base(true)
        {
            SetInnerType(new CT_CrsCatalogue_Type());
        }

        public CT_CrsCatalogue(CT_CrsCatalogue_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new CT_CrsCatalogue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_CRS_PropertyType> crs
        {
            get
            {
                return this.ContentField.crs;
            }
            set
            {
                this.ContentField.crs = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_CoordinateSystem_PropertyType> coordinateSystem
        {
            get
            {
                return this.ContentField.coordinateSystem;
            }
            set
            {
                this.ContentField.coordinateSystem = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_CoordinateSystemAxis_PropertyType> axis
        {
            get
            {
                return this.ContentField.axis;
            }
            set
            {
                this.ContentField.axis = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_Datum_PropertyType> datum
        {
            get
            {
                return this.ContentField.datum;
            }
            set
            {
                this.ContentField.datum = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_Ellipsoid_PropertyType> ellipsoid
        {
            get
            {
                return this.ContentField.ellipsoid;
            }
            set
            {
                this.ContentField.ellipsoid = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_PrimeMeridian_PropertyType> primeMeridian
        {
            get
            {
                return this.ContentField.primeMeridian;
            }
            set
            {
                this.ContentField.primeMeridian = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_Operation_PropertyType> operation
        {
            get
            {
                return this.ContentField.operation;
            }
            set
            {
                this.ContentField.operation = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_OperationMethod_PropertyType> operationMethod
        {
            get
            {
                return this.ContentField.operationMethod;
            }
            set
            {
                this.ContentField.operationMethod = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, crs+, coordinateSystem*, axis*, datum*, ellipsoid*, primeMeridian*, operation*, operationMethod*, parameters*)
        /// </para>
        /// </summary>
        public IList<CT_OperationParameters_PropertyType> parameters
        {
            get
            {
                return this.ContentField.parameters;
            }
            set
            {
                this.ContentField.parameters = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_CrsCatalogue", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CT_CrsCatalogue Load(string xmlFile)
        {
            return XTypedServices.Load<CT_CrsCatalogue, CT_CrsCatalogue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CT_CrsCatalogue Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CT_CrsCatalogue, CT_CrsCatalogue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static CT_CrsCatalogue Parse(string xml)
        {
            return XTypedServices.Parse<CT_CrsCatalogue, CT_CrsCatalogue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CT_CrsCatalogue(((CT_CrsCatalogue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CT_CrsCatalogue_Type ContentField)
        {
            this.ContentField = ((CT_CrsCatalogue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CT_CrsCatalogueSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CT_CrsCatalogue", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("CT_UomCatalogueSchemaProvider")]
    public partial class CT_UomCatalogue : global::GeoSik.Iso.Ts19139.Gmx.AbstractCT_Catalogue, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private CT_UomCatalogue_Type ContentField;

        public static explicit operator CT_UomCatalogue(XElement xe) { return XTypedServices.ToXTypedElement<CT_UomCatalogue, CT_UomCatalogue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public CT_UomCatalogue() :
                base(true)
        {
            SetInnerType(new CT_UomCatalogue_Type());
        }

        public CT_UomCatalogue(CT_UomCatalogue_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new CT_UomCatalogue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (name, scope+, fieldOfApplication*, versionNumber, versionDate, language?, characterSet?, locale*, subCatalogue*, uomItem+)
        /// </para>
        /// </summary>
        public IList<UnitDefinition_PropertyType> uomItem
        {
            get
            {
                return this.ContentField.uomItem;
            }
            set
            {
                this.ContentField.uomItem = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("CT_UomCatalogue", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static CT_UomCatalogue Load(string xmlFile)
        {
            return XTypedServices.Load<CT_UomCatalogue, CT_UomCatalogue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static CT_UomCatalogue Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<CT_UomCatalogue, CT_UomCatalogue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static CT_UomCatalogue Parse(string xml)
        {
            return XTypedServices.Parse<CT_UomCatalogue, CT_UomCatalogue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new CT_UomCatalogue(((CT_UomCatalogue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(CT_UomCatalogue_Type ContentField)
        {
            this.ContentField = ((CT_UomCatalogue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType CT_UomCatalogueSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("CT_UomCatalogue", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("FileNameSchemaProvider")]
    public partial class FileName : global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private FileName_Type ContentField;

        public static explicit operator FileName(XElement xe) { return XTypedServices.ToXTypedElement<FileName, FileName_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public FileName() :
                base()
        {
            SetInnerType(new FileName_Type());
        }

        public FileName(FileName_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new FileName_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri src
        {
            get
            {
                return this.ContentField.src;
            }
            set
            {
                this.ContentField.src = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("FileName", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static FileName Load(string xmlFile)
        {
            return XTypedServices.Load<FileName, FileName_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static FileName Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<FileName, FileName_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static FileName Parse(string xml)
        {
            return XTypedServices.Parse<FileName, FileName_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new FileName(((FileName_Type)(this.Content.Clone())));
        }

        private void SetInnerType(FileName_Type ContentField)
        {
            this.ContentField = ((FileName_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType FileNameSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("FileName", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MimeFileTypeSchemaProvider")]
    public partial class MimeFileType : global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MimeFileType_Type ContentField;

        public static explicit operator MimeFileType(XElement xe) { return XTypedServices.ToXTypedElement<MimeFileType, MimeFileType_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MimeFileType() :
                base()
        {
            SetInnerType(new MimeFileType_Type());
        }

        public MimeFileType(MimeFileType_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new MimeFileType_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return this.ContentField.type;
            }
            set
            {
                this.ContentField.type = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MimeFileType", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MimeFileType Load(string xmlFile)
        {
            return XTypedServices.Load<MimeFileType, MimeFileType_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MimeFileType Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MimeFileType, MimeFileType_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MimeFileType Parse(string xml)
        {
            return XTypedServices.Parse<MimeFileType, MimeFileType_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MimeFileType(((MimeFileType_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MimeFileType_Type ContentField)
        {
            this.ContentField = ((MimeFileType_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MimeFileTypeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MimeFileType", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AnchorSchemaProvider")]
    public partial class Anchor : global::GeoSik.Iso.Ts19139.Gco.CharacterString, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private Anchor_Type ContentField;

        public static explicit operator Anchor(XElement xe) { return XTypedServices.ToXTypedElement<Anchor, Anchor_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public Anchor() :
                base()
        {
            SetInnerType(new Anchor_Type());
        }

        public Anchor(Anchor_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new Anchor_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        public string TypedValue
        {
            get
            {
                return this.ContentField.TypedValue;
            }
            set
            {
                this.ContentField.TypedValue = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string type
        {
            get
            {
                return this.ContentField.type;
            }
            set
            {
                this.ContentField.type = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri href
        {
            get
            {
                return this.ContentField.href;
            }
            set
            {
                this.ContentField.href = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri role
        {
            get
            {
                return this.ContentField.role;
            }
            set
            {
                this.ContentField.role = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public System.Uri arcrole
        {
            get
            {
                return this.ContentField.arcrole;
            }
            set
            {
                this.ContentField.arcrole = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string title
        {
            get
            {
                return this.ContentField.title;
            }
            set
            {
                this.ContentField.title = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string show
        {
            get
            {
                return this.ContentField.show;
            }
            set
            {
                this.ContentField.show = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional
        /// </para>
        /// </summary>
        public string actuate
        {
            get
            {
                return this.ContentField.actuate;
            }
            set
            {
                this.ContentField.actuate = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("Anchor", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static Anchor Load(string xmlFile)
        {
            return XTypedServices.Load<Anchor, Anchor_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static Anchor Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<Anchor, Anchor_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static Anchor Parse(string xml)
        {
            return XTypedServices.Parse<Anchor, Anchor_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new Anchor(((Anchor_Type)(this.Content.Clone())));
        }

        private void SetInnerType(Anchor_Type ContentField)
        {
            this.ContentField = ((Anchor_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AnchorSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("Anchor", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MX_AggregateSchemaProvider")]
    public partial class MX_Aggregate : global::GeoSik.Iso.Ts19139.Gmd.AbstractDS_Aggregate, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MX_Aggregate_Type ContentField;

        public static explicit operator MX_Aggregate(XElement xe) { return XTypedServices.ToXTypedElement<MX_Aggregate, MX_Aggregate_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MX_Aggregate() :
                base(true)
        {
            SetInnerType(new MX_Aggregate_Type());
        }

        public MX_Aggregate(MX_Aggregate_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new MX_Aggregate_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*, aggregateCatalogue*, aggregateFile*)
        /// </para>
        /// </summary>
        public IList<CT_Catalogue_PropertyType> aggregateCatalogue
        {
            get
            {
                return this.ContentField.aggregateCatalogue;
            }
            set
            {
                this.ContentField.aggregateCatalogue = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (composedOf+, seriesMetadata+, subset*, superset*, aggregateCatalogue*, aggregateFile*)
        /// </para>
        /// </summary>
        public IList<MX_SupportFile_PropertyType> aggregateFile
        {
            get
            {
                return this.ContentField.aggregateFile;
            }
            set
            {
                this.ContentField.aggregateFile = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_Aggregate", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MX_Aggregate Load(string xmlFile)
        {
            return XTypedServices.Load<MX_Aggregate, MX_Aggregate_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MX_Aggregate Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MX_Aggregate, MX_Aggregate_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MX_Aggregate Parse(string xml)
        {
            return XTypedServices.Parse<MX_Aggregate, MX_Aggregate_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MX_Aggregate(((MX_Aggregate_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MX_Aggregate_Type ContentField)
        {
            this.ContentField = ((MX_Aggregate_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MX_AggregateSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MX_Aggregate", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MX_DataSetSchemaProvider")]
    public partial class MX_DataSet : global::GeoSik.Iso.Ts19139.Gmd.DS_DataSet, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MX_DataSet_Type ContentField;

        public static explicit operator MX_DataSet(XElement xe) { return XTypedServices.ToXTypedElement<MX_DataSet, MX_DataSet_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MX_DataSet() :
                base()
        {
            SetInnerType(new MX_DataSet_Type());
        }

        public MX_DataSet(MX_DataSet_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new MX_DataSet_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*, dataFile+, datasetCatalogue*, supportFile*)
        /// </para>
        /// </summary>
        public IList<MX_DataFile_PropertyType> dataFile
        {
            get
            {
                return this.ContentField.dataFile;
            }
            set
            {
                this.ContentField.dataFile = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*, dataFile+, datasetCatalogue*, supportFile*)
        /// </para>
        /// </summary>
        public IList<CT_Catalogue_PropertyType> datasetCatalogue
        {
            get
            {
                return this.ContentField.datasetCatalogue;
            }
            set
            {
                this.ContentField.datasetCatalogue = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (has+, partOf*, dataFile+, datasetCatalogue*, supportFile*)
        /// </para>
        /// </summary>
        public IList<MX_SupportFile_PropertyType> supportFile
        {
            get
            {
                return this.ContentField.supportFile;
            }
            set
            {
                this.ContentField.supportFile = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_DataSet", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MX_DataSet Load(string xmlFile)
        {
            return XTypedServices.Load<MX_DataSet, MX_DataSet_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MX_DataSet Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MX_DataSet, MX_DataSet_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MX_DataSet Parse(string xml)
        {
            return XTypedServices.Parse<MX_DataSet, MX_DataSet_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MX_DataSet(((MX_DataSet_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MX_DataSet_Type ContentField)
        {
            this.ContentField = ((MX_DataSet_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            // base.SetSubstitutionMember(ContentField); // Manually commented
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MX_DataSetSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MX_DataSet", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MX_DataFileSchemaProvider")]
    public partial class MX_DataFile : global::GeoSik.Iso.Ts19139.Gmx.AbstractMX_File, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MX_DataFile_Type ContentField;

        public static explicit operator MX_DataFile(XElement xe) { return XTypedServices.ToXTypedElement<MX_DataFile, MX_DataFile_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MX_DataFile() :
                base(true)
        {
            SetInnerType(new MX_DataFile_Type());
        }

        public MX_DataFile(MX_DataFile_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new MX_DataFile_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: optional, repeating
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType, featureTypes*, fileFormat)
        /// </para>
        /// </summary>
        public IList<GeoSik.Iso.Ts19139.Gco.GenericName_PropertyType> featureTypes
        {
            get
            {
                return this.ContentField.featureTypes;
            }
            set
            {
                this.ContentField.featureTypes = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType, featureTypes*, fileFormat)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gmd.MD_Format_PropertyType fileFormat
        {
            get
            {
                return this.ContentField.fileFormat;
            }
            set
            {
                this.ContentField.fileFormat = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_DataFile", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MX_DataFile Load(string xmlFile)
        {
            return XTypedServices.Load<MX_DataFile, MX_DataFile_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MX_DataFile Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MX_DataFile, MX_DataFile_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MX_DataFile Parse(string xml)
        {
            return XTypedServices.Parse<MX_DataFile, MX_DataFile_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MX_DataFile(((MX_DataFile_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MX_DataFile_Type ContentField)
        {
            this.ContentField = ((MX_DataFile_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MX_DataFileSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MX_DataFile", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MX_SupportFileSchemaProvider")]
    public partial class MX_SupportFile : global::GeoSik.Iso.Ts19139.Gmx.AbstractMX_File, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private MX_SupportFile_Type ContentField;

        public static explicit operator MX_SupportFile(XElement xe) { return XTypedServices.ToXTypedElement<MX_SupportFile, MX_SupportFile_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MX_SupportFile() :
                base(true)
        {
            SetInnerType(new MX_SupportFile_Type());
        }

        public MX_SupportFile(MX_SupportFile_Type content) :
                base(true)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new MX_SupportFile_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_SupportFile", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MX_SupportFile Load(string xmlFile)
        {
            return XTypedServices.Load<MX_SupportFile, MX_SupportFile_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MX_SupportFile Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MX_SupportFile, MX_SupportFile_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MX_SupportFile Parse(string xml)
        {
            return XTypedServices.Parse<MX_SupportFile, MX_SupportFile_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MX_SupportFile(((MX_SupportFile_Type)(this.Content.Clone())));
        }

        private void SetInnerType(MX_SupportFile_Type ContentField)
        {
            this.ContentField = ((MX_SupportFile_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MX_SupportFileSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MX_SupportFile", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("AbstractMX_FileSchemaProvider")]
    public abstract partial class AbstractMX_File : XTypedElement, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private AbstractMX_File_Type ContentField;

        public static explicit operator AbstractMX_File(XElement xe) { return (AbstractMX_File)XTypedServices.ToXTypedElement(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        protected AbstractMX_File(bool setNull)
        {
        }

        public AbstractMX_File()
        {
            throw new InvalidOperationException();
        }

        public AbstractMX_File(AbstractMX_File_Type content)
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                if ((this.ContentField != null))
                {
                    this.ContentField.Untyped = value;
                }
            }
        }

        public AbstractMX_File_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType)
        /// </para>
        /// </summary>
        public FileName_PropertyType fileName
        {
            get
            {
                return this.ContentField.fileName;
            }
            set
            {
                this.ContentField.fileName = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType)
        /// </para>
        /// </summary>
        public GeoSik.Iso.Ts19139.Gco.CharacterString_PropertyType fileDescription
        {
            get
            {
                return this.ContentField.fileDescription;
            }
            set
            {
                this.ContentField.fileDescription = value;
            }
        }

        /// <summary>
        /// <para>
        /// Occurrence: required
        /// </para>
        /// <para>
        /// Regular expression: (fileName, fileDescription, fileType)
        /// </para>
        /// </summary>
        public MimeFileType_PropertyType fileType
        {
            get
            {
                return this.ContentField.fileType;
            }
            set
            {
                this.ContentField.fileType = value;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("AbstractMX_File", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public void Save(string xmlFile)
        {
            XTypedServices.Save(xmlFile, Untyped);
        }

        public void Save(System.IO.TextWriter tw)
        {
            XTypedServices.Save(tw, Untyped);
        }

        public void Save(System.Xml.XmlWriter xmlWriter)
        {
            XTypedServices.Save(xmlWriter, Untyped);
        }

        public static AbstractMX_File Load(string xmlFile)
        {
            return ((AbstractMX_File)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractMX_File Load(System.IO.TextReader xmlFile)
        {
            return ((AbstractMX_File)(XTypedServices.ToXTypedElement(XElement.Load(xmlFile), LinqToXsdTypeManager.Instance)));
        }

        public static AbstractMX_File Parse(string xml)
        {
            return ((AbstractMX_File)(XTypedServices.ToXTypedElement(XElement.Parse(xml), LinqToXsdTypeManager.Instance)));
        }

        private void SetInnerType(AbstractMX_File_Type ContentField)
        {
            this.ContentField = ((AbstractMX_File_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
        }

        protected virtual void SetSubstitutionMember(AbstractMX_File_Type ContentField)
        {
            this.ContentField = ContentField;
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType AbstractMX_FileSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("AbstractMX_File", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    [XmlSchemaProviderAttribute("MX_ScopeCodeSchemaProvider")]
    public partial class MX_ScopeCode : global::GeoSik.Iso.Ts19139.Gmd.MD_ScopeCode, IXMetaData, IXmlSerializable
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField;

        public static explicit operator MX_ScopeCode(XElement xe) { return XTypedServices.ToXTypedElement<MX_ScopeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xe, LinqToXsdTypeManager.Instance as ILinqToXsdTypeManager); }

        public MX_ScopeCode() :
                base()
        {
            SetInnerType(new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type());
        }

        public MX_ScopeCode(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type content) :
                base()
        {
            SetInnerType(content);
        }

        public override XElement Untyped
        {
            get
            {
                return base.Untyped;
            }
            set
            {
                base.Untyped = value;
                this.ContentField.Untyped = value;
            }
        }

        public new GeoSik.Iso.Ts19139.Gco.CodeListValue_Type Content
        {
            get
            {
                return ContentField;
            }
        }

        Dictionary<XName, System.Type> IXMetaData.LocalElementsDictionary
        {
            get
            {
                IXMetaData schemaMetaData = ((IXMetaData)(this.Content));
                return schemaMetaData.LocalElementsDictionary;
            }
        }

        XTypedElement IXMetaData.Content
        {
            get
            {
                return this.Content;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        XName IXMetaData.SchemaName
        {
            get
            {
                return XName.Get("MX_ScopeCode", "http://www.isotc211.org/2005/gmx");
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        SchemaOrigin IXMetaData.TypeOrigin
        {
            get
            {
                return SchemaOrigin.Element;
            }
        }

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILinqToXsdTypeManager IXMetaData.TypeManager
        {
            get
            {
                return LinqToXsdTypeManager.Instance;
            }
        }

        public new static MX_ScopeCode Load(string xmlFile)
        {
            return XTypedServices.Load<MX_ScopeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public static MX_ScopeCode Load(System.IO.TextReader xmlFile)
        {
            return XTypedServices.Load<MX_ScopeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xmlFile, LinqToXsdTypeManager.Instance);
        }

        public new static MX_ScopeCode Parse(string xml)
        {
            return XTypedServices.Parse<MX_ScopeCode, GeoSik.Iso.Ts19139.Gco.CodeListValue_Type>(xml, LinqToXsdTypeManager.Instance);
        }

        public override XTypedElement Clone()
        {
            return new MX_ScopeCode(((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(this.Content.Clone())));
        }

        private void SetInnerType(GeoSik.Iso.Ts19139.Gco.CodeListValue_Type ContentField)
        {
            this.ContentField = ((GeoSik.Iso.Ts19139.Gco.CodeListValue_Type)(XTypedServices.GetCloneIfRooted(ContentField)));
            XTypedServices.SetName(this, this.ContentField);
            base.SetSubstitutionMember(ContentField);
        }

        ContentModelEntity IXMetaData.GetContentModel()
        {
            return ContentModelEntity.Default;
        }

        public static XmlSchemaType MX_ScopeCodeSchemaProvider(XmlSchemaSet schemas)
        {
            LinqToXsdTypeManager.AddSchemas(schemas);
            XmlSchemaElement element = ((XmlSchemaElement)(schemas.GlobalElements[new XmlQualifiedName("MX_ScopeCode", "http://www.isotc211.org/2005/gmx")]));
            if ((element != null))
            {
                return element.ElementSchemaType;
            }
            return null;
        }
    }

    public partial class XRootNamespace
    {

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XDocument doc;

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        private XTypedElement rootObject;


        public ML_BaseUnit ML_BaseUnit { get { return rootObject as ML_BaseUnit; } }

        public ML_DerivedUnit ML_DerivedUnit { get { return rootObject as ML_DerivedUnit; } }

        public ML_ConventionalUnit ML_ConventionalUnit { get { return rootObject as ML_ConventionalUnit; } }

        public ML_UnitDefinition ML_UnitDefinition { get { return rootObject as ML_UnitDefinition; } }

        public UomAlternativeExpression UomAlternativeExpression { get { return rootObject as UomAlternativeExpression; } }

        public CodeDefinition CodeDefinition { get { return rootObject as CodeDefinition; } }

        public CodeListDictionary CodeListDictionary { get { return rootObject as CodeListDictionary; } }

        public ML_CodeDefinition ML_CodeDefinition { get { return rootObject as ML_CodeDefinition; } }

        public ML_CodeListDictionary ML_CodeListDictionary { get { return rootObject as ML_CodeListDictionary; } }

        public ClAlternativeExpression ClAlternativeExpression { get { return rootObject as ClAlternativeExpression; } }

        public CodeAlternativeExpression CodeAlternativeExpression { get { return rootObject as CodeAlternativeExpression; } }

        public ML_CompoundCRS ML_CompoundCRS { get { return rootObject as ML_CompoundCRS; } }

        public ML_GeodeticCRS ML_GeodeticCRS { get { return rootObject as ML_GeodeticCRS; } }

        public ML_EngineeringCRS ML_EngineeringCRS { get { return rootObject as ML_EngineeringCRS; } }

        public ML_VerticalCRS ML_VerticalCRS { get { return rootObject as ML_VerticalCRS; } }

        public ML_TemporalCRS ML_TemporalCRS { get { return rootObject as ML_TemporalCRS; } }

        public ML_ImageCRS ML_ImageCRS { get { return rootObject as ML_ImageCRS; } }

        public ML_ProjectedCRS ML_ProjectedCRS { get { return rootObject as ML_ProjectedCRS; } }

        public ML_DerivedCRS ML_DerivedCRS { get { return rootObject as ML_DerivedCRS; } }

        public ML_CoordinateSystemAxis ML_CoordinateSystemAxis { get { return rootObject as ML_CoordinateSystemAxis; } }

        public ML_EllipsoidalCS ML_EllipsoidalCS { get { return rootObject as ML_EllipsoidalCS; } }

        public ML_CartesianCS ML_CartesianCS { get { return rootObject as ML_CartesianCS; } }

        public ML_AffineCS ML_AffineCS { get { return rootObject as ML_AffineCS; } }

        public ML_UserDefinedCS ML_UserDefinedCS { get { return rootObject as ML_UserDefinedCS; } }

        public ML_VerticalCS ML_VerticalCS { get { return rootObject as ML_VerticalCS; } }

        public ML_TimeCS ML_TimeCS { get { return rootObject as ML_TimeCS; } }

        public ML_CylindricalCS ML_CylindricalCS { get { return rootObject as ML_CylindricalCS; } }

        public ML_SphericalCS ML_SphericalCS { get { return rootObject as ML_SphericalCS; } }

        public ML_PolarCS ML_PolarCS { get { return rootObject as ML_PolarCS; } }

        public ML_LinearCS ML_LinearCS { get { return rootObject as ML_LinearCS; } }

        public ML_Ellipsoid ML_Ellipsoid { get { return rootObject as ML_Ellipsoid; } }

        public ML_PrimeMeridian ML_PrimeMeridian { get { return rootObject as ML_PrimeMeridian; } }

        public ML_TemporalDatum ML_TemporalDatum { get { return rootObject as ML_TemporalDatum; } }

        public ML_VerticalDatum ML_VerticalDatum { get { return rootObject as ML_VerticalDatum; } }

        public ML_ImageDatum ML_ImageDatum { get { return rootObject as ML_ImageDatum; } }

        public ML_EngineeringDatum ML_EngineeringDatum { get { return rootObject as ML_EngineeringDatum; } }

        public ML_GeodeticDatum ML_GeodeticDatum { get { return rootObject as ML_GeodeticDatum; } }

        public ML_ConcatenatedOperation ML_ConcatenatedOperation { get { return rootObject as ML_ConcatenatedOperation; } }

        public ML_PassThroughOperation ML_PassThroughOperation { get { return rootObject as ML_PassThroughOperation; } }

        public ML_Transformation ML_Transformation { get { return rootObject as ML_Transformation; } }

        public ML_Conversion ML_Conversion { get { return rootObject as ML_Conversion; } }

        public ML_OperationMethod ML_OperationMethod { get { return rootObject as ML_OperationMethod; } }

        public ML_OperationParameterGroup ML_OperationParameterGroup { get { return rootObject as ML_OperationParameterGroup; } }

        public ML_OperationParameter ML_OperationParameter { get { return rootObject as ML_OperationParameter; } }

        public CrsAlt CrsAlt { get { return rootObject as CrsAlt; } }

        public CoordinateSystemAlt CoordinateSystemAlt { get { return rootObject as CoordinateSystemAlt; } }

        public CoordinateSystemAxisAlt CoordinateSystemAxisAlt { get { return rootObject as CoordinateSystemAxisAlt; } }

        public DatumAlt DatumAlt { get { return rootObject as DatumAlt; } }

        public EllipsoidAlt EllipsoidAlt { get { return rootObject as EllipsoidAlt; } }

        public PrimeMeridianAlt PrimeMeridianAlt { get { return rootObject as PrimeMeridianAlt; } }

        public OperationAlt OperationAlt { get { return rootObject as OperationAlt; } }

        public OperationMethodAlt OperationMethodAlt { get { return rootObject as OperationMethodAlt; } }

        public OperationParameterAlt OperationParameterAlt { get { return rootObject as OperationParameterAlt; } }

        public AbstractCT_Catalogue AbstractCT_Catalogue { get { return rootObject as AbstractCT_Catalogue; } }

        public CT_CodelistCatalogue CT_CodelistCatalogue { get { return rootObject as CT_CodelistCatalogue; } }

        public CT_CrsCatalogue CT_CrsCatalogue { get { return rootObject as CT_CrsCatalogue; } }

        public CT_UomCatalogue CT_UomCatalogue { get { return rootObject as CT_UomCatalogue; } }

        public FileName FileName { get { return rootObject as FileName; } }

        public MimeFileType MimeFileType { get { return rootObject as MimeFileType; } }

        public Anchor Anchor { get { return rootObject as Anchor; } }

        public MX_Aggregate MX_Aggregate { get { return rootObject as MX_Aggregate; } }

        public MX_DataSet MX_DataSet { get { return rootObject as MX_DataSet; } }

        public MX_DataFile MX_DataFile { get { return rootObject as MX_DataFile; } }

        public MX_SupportFile MX_SupportFile { get { return rootObject as MX_SupportFile; } }

        public AbstractMX_File AbstractMX_File { get { return rootObject as AbstractMX_File; } }

        public MX_ScopeCode MX_ScopeCode { get { return rootObject as MX_ScopeCode; } }

        private XRootNamespace()
        {
        }

        public XRootNamespace(ML_BaseUnit root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_DerivedUnit root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_ConventionalUnit root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_UnitDefinition root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(UomAlternativeExpression root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CodeDefinition root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CodeListDictionary root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_CodeDefinition root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_CodeListDictionary root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ClAlternativeExpression root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CodeAlternativeExpression root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_CompoundCRS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_GeodeticCRS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_EngineeringCRS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_VerticalCRS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_TemporalCRS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_ImageCRS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_ProjectedCRS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_DerivedCRS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_CoordinateSystemAxis root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_EllipsoidalCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_CartesianCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_AffineCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_UserDefinedCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_VerticalCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_TimeCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_CylindricalCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_SphericalCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_PolarCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_LinearCS root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_Ellipsoid root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_PrimeMeridian root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_TemporalDatum root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_VerticalDatum root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_ImageDatum root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_EngineeringDatum root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_GeodeticDatum root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_ConcatenatedOperation root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_PassThroughOperation root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_Transformation root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_Conversion root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_OperationMethod root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_OperationParameterGroup root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(ML_OperationParameter root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CrsAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CoordinateSystemAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CoordinateSystemAxisAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(DatumAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(EllipsoidAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(PrimeMeridianAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(OperationAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(OperationMethodAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(OperationParameterAlt root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(AbstractCT_Catalogue root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CT_CodelistCatalogue root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CT_CrsCatalogue root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(CT_UomCatalogue root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(FileName root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(MimeFileType root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(Anchor root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(MX_Aggregate root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(MX_DataSet root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(MX_DataFile root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(MX_SupportFile root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(AbstractMX_File root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XRootNamespace(MX_ScopeCode root)
        {
            this.doc = new XDocument(root.Untyped);
            this.rootObject = root;
        }

        public XDocument XDocument
        {
            get
            {
                return doc;
            }
        }

        public static XRootNamespace Load(string xmlFile)
        {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }

        public static XRootNamespace Load(string xmlFile, LoadOptions options)
        {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlFile, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }

        public static XRootNamespace Load(TextReader textReader)
        {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }

        public static XRootNamespace Load(TextReader textReader, LoadOptions options)
        {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(textReader, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }

        public static XRootNamespace Load(XmlReader xmlReader)
        {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Load(xmlReader);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }

        public static XRootNamespace Parse(string text)
        {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }

        public static XRootNamespace Parse(string text, LoadOptions options)
        {
            XRootNamespace root = new XRootNamespace();
            root.doc = XDocument.Parse(text, options);
            XTypedElement typedRoot = XTypedServices.ToXTypedElement(root.doc.Root, LinqToXsdTypeManager.Instance);
            if ((typedRoot == null))
            {
                throw new LinqToXsdException("Invalid root element in xml document.");
            }
            root.rootObject = typedRoot;
            return root;
        }

        public virtual void Save(string fileName)
        {
            doc.Save(fileName);
        }

        public virtual void Save(TextWriter textWriter)
        {
            doc.Save(textWriter);
        }

        public virtual void Save(XmlWriter writer)
        {
            doc.Save(writer);
        }

        public virtual void Save(TextWriter textWriter, SaveOptions options)
        {
            doc.Save(textWriter, options);
        }

        public virtual void Save(string fileName, SaveOptions options)
        {
            doc.Save(fileName, options);
        }
    }




}
